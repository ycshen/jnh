/*
Navicat MySQL Data Transfer

Source Server         : mystyle
Source Server Version : 50612
Source Host           : localhost:3306
Source Database       : xdh

Target Server Type    : MYSQL
Target Server Version : 50612
File Encoding         : 65001

Date: 2014-06-18 15:46:35
*/

SET FOREIGN_KEY_CHECKS=0;

-- ----------------------------
-- Table structure for cms_article
-- ----------------------------
DROP TABLE IF EXISTS `cms_article`;
CREATE TABLE `cms_article` (
  `id` bigint(20) NOT NULL AUTO_INCREMENT,
  `color` varchar(255) CHARACTER SET utf8 DEFAULT NULL,
  `content` longtext CHARACTER SET utf8,
  `createDate` date DEFAULT NULL,
  `description` varchar(255) CHARACTER SET utf8 DEFAULT NULL,
  `hits` int(11) DEFAULT NULL,
  `htmlid` varchar(255) CHARACTER SET utf8 DEFAULT NULL,
  `image` varchar(255) CHARACTER SET utf8 DEFAULT NULL,
  `isWord` int(11) DEFAULT NULL,
  `keywords` varchar(255) CHARACTER SET utf8 DEFAULT NULL,
  `title` varchar(255) CHARACTER SET utf8 DEFAULT NULL,
  `weight` int(11) DEFAULT NULL,
  `CATEGORY_ID` bigint(20) DEFAULT NULL,
  `delFlag` int(11) NOT NULL,
  `updateDate` date DEFAULT NULL,
  `createby_id` bigint(20) DEFAULT NULL,
  `updateby_id` bigint(20) DEFAULT NULL,
  PRIMARY KEY (`id`),
  KEY `FK935C9C00CA4E9944` (`CATEGORY_ID`) USING BTREE,
  KEY `FK935C9C00E80591EC` (`updateby_id`) USING BTREE,
  KEY `FK935C9C00ECC85199` (`createby_id`) USING BTREE,
  CONSTRAINT `cms_article_ibfk_1` FOREIGN KEY (`CATEGORY_ID`) REFERENCES `cms_category` (`id`),
  CONSTRAINT `cms_article_ibfk_2` FOREIGN KEY (`updateby_id`) REFERENCES `sys_user` (`id`),
  CONSTRAINT `cms_article_ibfk_3` FOREIGN KEY (`createby_id`) REFERENCES `sys_user` (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=62 DEFAULT CHARSET=utf8 COLLATE=utf8_bin;

-- ----------------------------
-- Records of cms_article
-- ----------------------------
INSERT INTO `cms_article` VALUES ('35', 'black', '<p style=\"text-indent: 2em;\">出生在重庆一个小山村，先后读了幼儿园、小学、初中、高中、大学。于2013年夏天毕业于一个屌丝2本大学，然后在一家屌丝公司工作。虽然专业是软件专业，但是大学前期完全没想过要走专业路线，后来因为兴趣进入这个行业。在这个过程中认识了一些牛人，受他们开源精神的影响，誓要为开源事业作出微弱的贡献。虽然现在还处于模仿阶段。。。</p><p style=\"text-indent: 2em;\">热爱互联网，乃中国亿万网络水军分之一，游走在各大社区、微博及博客之间。在新浪微博、腾讯微博、微信、百度贴吧、百度空间、网易、人人、来往、陌陌、开源中国、iteye、instagram等都拥有统一账户“rguess”，求关注。</p><p style=\"text-indent: 2em;\">爱分享、爱吐槽、爱内涵，关注时下高新信息技术，现专注开源、敏捷、时间管理。</p><p style=\"text-indent: 2em;\">目前从事java,js相关开发工作，<span style=\"text-indent: 32px;\">有什么大活儿，请联系我</span>。</p><p style=\"text-indent: 2em;\"><span style=\"text-indent: 2em;\">QQ：502876941</span><br/></p><p style=\"text-indent: 2em;\">代码:&nbsp;<a href=\"http://git.oschina.net/rguess\" target=\"_blank\" textvalue=\"http://git.oschina.net/rguess\">http://git.oschina.net/rguess</a>&nbsp; &nbsp;<a href=\"http://github.com/rguess/\" target=\"_blank\" title=\"http://github.com/rguess/\" textvalue=\"http://github.com/rguess/\" style=\"text-indent: 2em;\">http://github.com/rguess/</a></p><p style=\"text-indent: 2em;\">个人网站：<a href=\"http://rguess.com/\" target=\"_blank\" textvalue=\"http://rguess.com/\">http://rguess.com/</a></p><p style=\"text-indent: 2em;\"><br/></p><p style=\"text-indent: 2em;\"><span style=\"color: rgb(192, 0, 0);\">注：本网站由于是自己手工完成，没有采用wordpress等建站工具，还有很多功能不足的地方，带来不便请谅解。如要想交换友链或者有什么建议和问题的请在下方留言谢谢！</span></p><p style=\"text-indent: 2em;\"><br/></p>', '2014-05-19', '', '274', null, null, '1', 'about me', '关于我', '0', '28', '0', '2014-06-16', null, '5');
INSERT INTO `cms_article` VALUES ('37', 'black', '<p style=\"white-space: normal; text-indent: 2em;\"><span style=\"font-family: Helvetica, Tahoma, Arial, sans-serif; font-size: 14px; line-height: 25.200000762939453px; background-color: rgb(255, 255, 255);\">使用shiro的时候，当我们使用remember me功能登录系统的时候，我们在用户登录自定义的session已经失效，这样就会影响系统正常运行；对于这种情况，我的解决方案是在shiro中自定义一个filter检测自定义的session是否失效，如果失效就读取数据加入到session中</span></p><p style=\"white-space: normal; text-indent: 2em;\"><span style=\"font-family: Helvetica, Tahoma, Arial, sans-serif; font-size: 14px; line-height: 25.200000762939453px; background-color: rgb(255, 255, 255);\">shiro 配置文件：&nbsp;</span></p><pre class=\"brush:xml;toolbar:false\">&lt;!--&nbsp;自定义加入filter，起在remember&nbsp;me&nbsp;session失效情况下刷新session作用&nbsp;--&gt;&nbsp;&nbsp;\r\n&lt;bean&nbsp;id=&quot;userSettingFilter&quot;&nbsp;class=&quot;org.guess.security.filter.UserSetting&quot;&nbsp;/&gt;</pre><p style=\"white-space: normal; text-indent: 2em;\"><span style=\"font-family: Helvetica, Tahoma, Arial, sans-serif; font-size: 14px; line-height: 25.200000762939453px; background-color: rgb(255, 255, 255);\"></span><span style=\"font-family: Helvetica, Tahoma, Arial, sans-serif; font-size: 14px; line-height: 25.200000762939453px; background-color: rgb(255, 255, 255);\">在shiroFilter中加入该filter:</span></p><pre class=\"brush:xml;toolbar:false\">&lt;property&nbsp;name=&quot;filters&quot;&gt;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&lt;util:map&gt;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;entry&nbsp;key=&quot;userSetting&quot;&nbsp;value-ref=&quot;userSettingFilter&quot;/&gt;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&lt;/util:map&gt;&nbsp;&nbsp;\r\n&lt;/property&gt;</pre><p style=\"white-space: normal; text-indent: 2em;\"><span style=\"font-family: Helvetica, Tahoma, Arial, sans-serif; font-size: 14px; line-height: 25.200000762939453px; background-color: rgb(255, 255, 255);\"></span><span style=\"font-family: Helvetica, Tahoma, Arial, sans-serif; font-size: 14px; line-height: 25.200000762939453px; background-color: rgb(255, 255, 255);\">filter类代码：&nbsp;</span></p><pre class=\"brush:java;toolbar:false\">public&nbsp;class&nbsp;UserSetting&nbsp;extends&nbsp;AccessControlFilter&nbsp;{&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;@Autowired&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;private&nbsp;UserService&nbsp;userService;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;@Override&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;protected&nbsp;boolean&nbsp;preHandle(ServletRequest&nbsp;request,&nbsp;ServletResponse&nbsp;response)&nbsp;throws&nbsp;Exception&nbsp;{&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Subject&nbsp;subject&nbsp;=&nbsp;getSubject(request,&nbsp;response);&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(subject&nbsp;==&nbsp;null)&nbsp;{&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;false;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;HttpSession&nbsp;session&nbsp;=&nbsp;((HttpServletRequest)request).getSession();&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;User&nbsp;current_user&nbsp;=&nbsp;(User)&nbsp;session.getAttribute(Constants.CURRENT_USER);&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Object&nbsp;recs&nbsp;=&nbsp;session.getAttribute(Constants.USER_MENUS);&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//判断session是否失效，若失效刷新之&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(current_user&nbsp;==&nbsp;null&nbsp;||&nbsp;recs&nbsp;==&nbsp;null){&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;String&nbsp;username&nbsp;=&nbsp;(String)&nbsp;subject.getPrincipal();&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;User&nbsp;user&nbsp;=&nbsp;userService.findByLoginId(username);&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;session.setAttribute(Constants.CURRENT_USER,&nbsp;user);&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;session.setAttribute(Constants.USER_MENUS,&nbsp;user.getMenus());&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;true;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;\r\n&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;@Override&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;protected&nbsp;boolean&nbsp;isAccessAllowed(ServletRequest&nbsp;request,&nbsp;ServletResponse&nbsp;response,&nbsp;Object&nbsp;mappedValue)&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;throws&nbsp;Exception&nbsp;{&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;true;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;\r\n&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;@Override&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;protected&nbsp;boolean&nbsp;onAccessDenied(ServletRequest&nbsp;request,&nbsp;ServletResponse&nbsp;response)&nbsp;throws&nbsp;Exception&nbsp;{&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;true;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;\r\n&nbsp;&nbsp;\r\n}</pre><p style=\"white-space: normal; text-indent: 2em;\"><span style=\"font-family: Helvetica, Tahoma, Arial, sans-serif; font-size: 14px; line-height: 25.200000762939453px; background-color: rgb(255, 255, 255);\"></span><span style=\"color: rgb(0, 112, 192); font-size: 20px;\">基本可以解决问题<img src=\"http://img.baidu.com/hi/jx2/j_0063.gif\"/></span><br/></p><p><span style=\"color: rgb(0, 112, 192); font-size: 20px;\"><br/></span></p><p><br/></p>', '2014-05-21', '使用shiro的时候，当我们使用remember me功能登录系统的时候，我们在用户登录自定义的session已经失效，这样就会影响系统正常运行；对于这种情况，我的解决方案是在shiro中自定义一个filter检测自定义的session是否失效，如果失效就读取数据加入到session中 ', '141', null, null, '1', 'shiro,java', 'shiro在remember me状态下session失效解决办法 ', '0', '29', '0', '2014-06-18', null, '5');
INSERT INTO `cms_article` VALUES ('38', 'black', '<pre class=\"brush:html;toolbar:false;\">&lt;html&gt;\r\n	&lt;head&gt;\r\n		&lt;script&nbsp;src=&quot;jquery-1.8.3.min.js&quot;&nbsp;type=&quot;text/javascript&quot;&gt;&lt;/script&gt;\r\n		\r\n		&lt;script&gt;\r\n			(function&nbsp;($)&nbsp;{\r\n			&nbsp;&nbsp;/**\r\n			&nbsp;&nbsp;&nbsp;*&nbsp;居中\r\n			&nbsp;&nbsp;&nbsp;*/\r\n			&nbsp;&nbsp;$.fn.center&nbsp;=&nbsp;function&nbsp;(settings)&nbsp;{\r\n				var&nbsp;style&nbsp;=&nbsp;$.extend({\r\n				&nbsp;&nbsp;position:&nbsp;&#39;absolute&#39;,&nbsp;//absolute&nbsp;or&nbsp;fixed\r\n				&nbsp;&nbsp;top&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;&#39;50%&#39;,&nbsp;//50%即居中，将应用负边距计算，溢出不予考虑了。\r\n				&nbsp;&nbsp;left&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;&#39;50%&#39;,\r\n				&nbsp;&nbsp;zIndex&nbsp;&nbsp;:&nbsp;2009,\r\n				&nbsp;&nbsp;relative:&nbsp;true&nbsp;//相对于包含它的容器居中还是整个页面\r\n				},&nbsp;settings&nbsp;||&nbsp;{});\r\n\r\n				return&nbsp;this.each(function&nbsp;()&nbsp;{\r\n				&nbsp;&nbsp;var&nbsp;$this&nbsp;=&nbsp;$(this);\r\n\r\n				&nbsp;&nbsp;if&nbsp;(style.top&nbsp;==&nbsp;&#39;50%&#39;)&nbsp;style.marginTop&nbsp;=&nbsp;-$this.outerHeight()&nbsp;/&nbsp;2;\r\n				&nbsp;&nbsp;if&nbsp;(style.left&nbsp;==&nbsp;&#39;50%&#39;)&nbsp;style.marginLeft&nbsp;=&nbsp;-$this.outerWidth()&nbsp;/&nbsp;2;\r\n				&nbsp;&nbsp;if&nbsp;(style.relative&nbsp;&amp;&amp;&nbsp;!$this.parent().is(&#39;body&#39;)&nbsp;&amp;&amp;&nbsp;$this.parent().css(&#39;position&#39;)&nbsp;==&nbsp;&#39;static&#39;)&nbsp;$this.parent().css(&#39;position&#39;,&nbsp;&#39;relative&#39;);\r\n				&nbsp;&nbsp;delete&nbsp;style.relative;\r\n				&nbsp;&nbsp;//ie6\r\n				&nbsp;&nbsp;if&nbsp;(style.position&nbsp;==&nbsp;&#39;fixed&#39;&nbsp;&amp;&amp;&nbsp;$.browser.version&nbsp;==&nbsp;&#39;6.0&#39;)&nbsp;{\r\n					style.marginTop&nbsp;+=&nbsp;$(window).scrollTop();\r\n					style.position&nbsp;=&nbsp;&#39;absolute&#39;;\r\n					$(window).scroll(function&nbsp;()&nbsp;{\r\n					&nbsp;&nbsp;$this.stop().animate({\r\n						marginTop:&nbsp;$(window).scrollTop()&nbsp;-&nbsp;$this.outerHeight()&nbsp;/&nbsp;2\r\n					&nbsp;&nbsp;});\r\n					});\r\n				&nbsp;&nbsp;}\r\n				&nbsp;&nbsp;$this.css(style);\r\n				});\r\n			&nbsp;&nbsp;};\r\n			&nbsp;&nbsp;\r\n			&nbsp;&nbsp;/**\r\n			&nbsp;&nbsp;&nbsp;*&nbsp;可移动\r\n			&nbsp;&nbsp;&nbsp;*/\r\n			&nbsp;&nbsp;$.fn.move&nbsp;=&nbsp;function&nbsp;(obj)&nbsp;{\r\n				&nbsp;&nbsp;\r\n				&nbsp;&nbsp;var&nbsp;$win&nbsp;=&nbsp;obj;\r\n				&nbsp;&nbsp;var&nbsp;$title&nbsp;=&nbsp;$(this);\r\n				&nbsp;&nbsp;\r\n				&nbsp;&nbsp;var&nbsp;b&nbsp;=&nbsp;false;\r\n				&nbsp;&nbsp;var&nbsp;x;\r\n				&nbsp;&nbsp;var&nbsp;y;\r\n				&nbsp;&nbsp;$title.css(&quot;cursor&quot;,&nbsp;&quot;move&quot;);\r\n				&nbsp;&nbsp;$title.mousedown(\r\n					function&nbsp;(e)&nbsp;{\r\n						//x,y坐标是点击事件点和外该组件的距离差\r\n						b&nbsp;=&nbsp;true;\r\n						x&nbsp;=&nbsp;e.pageX&nbsp;-&nbsp;parseInt($win.position().left);\r\n						y&nbsp;=&nbsp;e.pageY&nbsp;-&nbsp;parseInt($win.position().top);\r\n					});\r\n				&nbsp;&nbsp;$(document).mousemove(\r\n					&nbsp;&nbsp;function&nbsp;(e)&nbsp;{\r\n						&nbsp;&nbsp;//只要不释放鼠标就可以拖动div\r\n						&nbsp;&nbsp;if&nbsp;(b)&nbsp;{\r\n							&nbsp;&nbsp;var&nbsp;divleft&nbsp;=&nbsp;e.pageX&nbsp;-&nbsp;x;\r\n							&nbsp;&nbsp;var&nbsp;divtop&nbsp;=&nbsp;e.pageY&nbsp;-&nbsp;y;\r\n							&nbsp;&nbsp;//设置拖动左，上位置\r\n							&nbsp;&nbsp;$win.css({&nbsp;&quot;left&quot;:&nbsp;divleft,&nbsp;&quot;top&quot;:&nbsp;divtop&nbsp;});\r\n						&nbsp;&nbsp;}\r\n					&nbsp;&nbsp;}\r\n					).mouseup(function&nbsp;()&nbsp;{\r\n						b&nbsp;=&nbsp;false;\r\n					});\r\n			&nbsp;&nbsp;};&nbsp;&nbsp;\r\n			})(jQuery);\r\n		&lt;/script&gt;\r\n		\r\n		&lt;script&gt;\r\n			$(function(){\r\n				$(&quot;.div&quot;).center();\r\n				$(&quot;.title&quot;).move($(&quot;.div&quot;));\r\n			});\r\n		&lt;/script&gt;\r\n		\r\n		&lt;style&gt;\r\n			.div{width:400px;height:300px;border:1px&nbsp;solid&nbsp;#F00}\r\n			.title{\r\n				width&nbsp;:&nbsp;400px;\r\n				height&nbsp;:&nbsp;30px;\r\n				background-color&nbsp;:&nbsp;green;\r\n				cursor&nbsp;:&nbsp;move;\r\n				margin-top&nbsp;:&nbsp;-1px;\r\n			}\r\n		&lt;/style&gt;\r\n	&lt;/head&gt;\r\n	&lt;body&gt;\r\n		&lt;div&nbsp;class=&quot;div&quot;&gt;\r\n			&lt;h3&nbsp;class=&quot;title&quot;&gt;鼠标放到上边&lt;/h3&gt;\r\n		&lt;/div&gt;\r\n	&lt;/body&gt;\r\n&lt;/html&gt;</pre><p style=\"line-height: 16px;\"><img src=\"/assets/comp/ueditor/dialogs/attachment/fileTypeImages/icon_rar.gif\"/><a href=\"/upload/20140529/18681401333268680.rar\">move.rar</a></p><p><br/></p>', '2014-05-21', '', '58', null, null, '1', 'jquery', 'jquery实现居中可拖拽窗体', '0', '30', '0', null, null, null);
INSERT INTO `cms_article` VALUES ('39', 'black', '<pre class=\"brush:java;toolbar:false\">/**\r\n&nbsp;*&nbsp;Copyright&nbsp;&amp;copy;&nbsp;2012-2013&nbsp;&lt;a&nbsp;href=&quot;https://github.com/thinkgem/jeesite&quot;&gt;JeeSite&lt;/a&gt;&nbsp;All&nbsp;rights&nbsp;reserved.\r\n&nbsp;*\r\n&nbsp;*&nbsp;Licensed&nbsp;under&nbsp;the&nbsp;Apache&nbsp;License,&nbsp;Version&nbsp;2.0&nbsp;(the&nbsp;&quot;License&quot;);\r\n&nbsp;*/\r\npackage&nbsp;org.guess.core.utils;\r\n\r\nimport&nbsp;java.io.BufferedWriter;\r\nimport&nbsp;java.io.File;\r\nimport&nbsp;java.io.FileInputStream;\r\nimport&nbsp;java.io.FileOutputStream;\r\nimport&nbsp;java.io.FileWriter;\r\nimport&nbsp;java.io.IOException;\r\nimport&nbsp;java.io.InputStream;\r\nimport&nbsp;java.io.OutputStream;\r\nimport&nbsp;java.io.RandomAccessFile;\r\nimport&nbsp;java.util.Enumeration;\r\n\r\nimport&nbsp;org.apache.commons.lang3.StringUtils;\r\nimport&nbsp;org.apache.tools.zip.ZipEntry;\r\nimport&nbsp;org.apache.tools.zip.ZipFile;\r\nimport&nbsp;org.apache.tools.zip.ZipOutputStream;\r\nimport&nbsp;org.slf4j.Logger;\r\nimport&nbsp;org.slf4j.LoggerFactory;\r\n\r\n/**\r\n&nbsp;*&nbsp;文件操作工具类\r\n&nbsp;*&nbsp;实现文件的创建、删除、复制、压缩、解压以及目录的创建、删除、复制、压缩解压等功能\r\n&nbsp;*&nbsp;@author&nbsp;ThinkGem\r\n&nbsp;*&nbsp;@version&nbsp;2013-06-21\r\n&nbsp;*/\r\npublic&nbsp;class&nbsp;FileUtils&nbsp;extends&nbsp;org.apache.commons.io.FileUtils&nbsp;{\r\n	\r\n	private&nbsp;static&nbsp;Logger&nbsp;log&nbsp;=&nbsp;LoggerFactory.getLogger(FileUtils.class);\r\n	\r\n	/**\r\n	&nbsp;*&nbsp;根据文件获取文件后缀\r\n	&nbsp;*&nbsp;@param&nbsp;fileName\r\n	&nbsp;*/\r\n	public&nbsp;static&nbsp;String&nbsp;getFileType(File&nbsp;file){\r\n		return&nbsp;getFileType(file.getName());\r\n	}\r\n	\r\n	/**\r\n	&nbsp;*&nbsp;根据文件名称获取文件后缀\r\n	&nbsp;*&nbsp;@param&nbsp;fileName\r\n	&nbsp;*/\r\n	public&nbsp;static&nbsp;String&nbsp;getFileType(String&nbsp;fileName){\r\n		return&nbsp;StringUtils.substringAfterLast(fileName,&nbsp;&quot;.&quot;);\r\n	}\r\n	\r\n	/**\r\n	&nbsp;*&nbsp;根据文件名随机生成uuid文件名称\r\n	&nbsp;*/\r\n	public&nbsp;static&nbsp;String&nbsp;uuidFileName(String&nbsp;fileName){\r\n		return&nbsp;UuidUtil.uuid()+&quot;.&quot;+getFileType(fileName);\r\n	}\r\n	\r\n	\r\n&nbsp;&nbsp;&nbsp;&nbsp;/**\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;判断文件夹是否存在，如不存在则创建\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/\r\n&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;static&nbsp;void&nbsp;isFolderExitAndCreate(String&nbsp;folderName){\r\n&nbsp;&nbsp;&nbsp;&nbsp;	File&nbsp;file&nbsp;=&nbsp;new&nbsp;File(folderName);\r\n&nbsp;&nbsp;&nbsp;&nbsp;	if(!file.exists()){\r\n&nbsp;&nbsp;&nbsp;&nbsp;		file.mkdir();\r\n&nbsp;&nbsp;&nbsp;&nbsp;	}\r\n&nbsp;&nbsp;&nbsp;&nbsp;}\r\n&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;/**\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;删除单个文件\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;@param&nbsp;&nbsp;&nbsp;sPath&nbsp;&nbsp;&nbsp;&nbsp;被删除文件的文件名\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;@return&nbsp;单个文件删除成功返回true，否则返回false\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/\r\n&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;static&nbsp;void&nbsp;deleteFile(File&nbsp;file)&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;路径为文件且不为空则进行删除\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(file.isFile()&nbsp;&amp;&amp;&nbsp;file.exists())&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;file.delete();\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\r\n&nbsp;&nbsp;&nbsp;&nbsp;}\r\n&nbsp;&nbsp;&nbsp;&nbsp;\r\n	/**\r\n	&nbsp;*&nbsp;复制单个文件，如果目标文件存在，则不覆盖\r\n	&nbsp;*&nbsp;@param&nbsp;srcFileName&nbsp;待复制的文件名\r\n	&nbsp;*&nbsp;@param&nbsp;descFileName&nbsp;目标文件名\r\n	&nbsp;*&nbsp;@return&nbsp;如果复制成功，则返回true，否则返回false\r\n	&nbsp;*/\r\n	public&nbsp;static&nbsp;boolean&nbsp;copyFile(String&nbsp;srcFileName,&nbsp;String&nbsp;descFileName)&nbsp;{\r\n		return&nbsp;FileUtils.copyFileCover(srcFileName,&nbsp;descFileName,&nbsp;false);\r\n	}\r\n\r\n	/**\r\n	&nbsp;*&nbsp;复制单个文件\r\n	&nbsp;*&nbsp;@param&nbsp;srcFileName&nbsp;待复制的文件名\r\n	&nbsp;*&nbsp;@param&nbsp;descFileName&nbsp;目标文件名\r\n	&nbsp;*&nbsp;@param&nbsp;coverlay&nbsp;如果目标文件已存在，是否覆盖\r\n	&nbsp;*&nbsp;@return&nbsp;如果复制成功，则返回true，否则返回false\r\n	&nbsp;*/\r\n	public&nbsp;static&nbsp;boolean&nbsp;copyFileCover(String&nbsp;srcFileName,\r\n			String&nbsp;descFileName,&nbsp;boolean&nbsp;coverlay)&nbsp;{\r\n		File&nbsp;srcFile&nbsp;=&nbsp;new&nbsp;File(srcFileName);\r\n		//&nbsp;判断源文件是否存在\r\n		if&nbsp;(!srcFile.exists())&nbsp;{\r\n			log.debug(&quot;复制文件失败，源文件&nbsp;&quot;&nbsp;+&nbsp;srcFileName&nbsp;+&nbsp;&quot;&nbsp;不存在!&quot;);\r\n			return&nbsp;false;\r\n		}\r\n		//&nbsp;判断源文件是否是合法的文件\r\n		else&nbsp;if&nbsp;(!srcFile.isFile())&nbsp;{\r\n			log.debug(&quot;复制文件失败，&quot;&nbsp;+&nbsp;srcFileName&nbsp;+&nbsp;&quot;&nbsp;不是一个文件!&quot;);\r\n			return&nbsp;false;\r\n		}\r\n		File&nbsp;descFile&nbsp;=&nbsp;new&nbsp;File(descFileName);\r\n		//&nbsp;判断目标文件是否存在\r\n		if&nbsp;(descFile.exists())&nbsp;{\r\n			//&nbsp;如果目标文件存在，并且允许覆盖\r\n			if&nbsp;(coverlay)&nbsp;{\r\n				log.debug(&quot;目标文件已存在，准备删除!&quot;);\r\n				if&nbsp;(!FileUtils.delFile(descFileName))&nbsp;{\r\n					log.debug(&quot;删除目标文件&nbsp;&quot;&nbsp;+&nbsp;descFileName&nbsp;+&nbsp;&quot;&nbsp;失败!&quot;);\r\n					return&nbsp;false;\r\n				}\r\n			}&nbsp;else&nbsp;{\r\n				log.debug(&quot;复制文件失败，目标文件&nbsp;&quot;&nbsp;+&nbsp;descFileName&nbsp;+&nbsp;&quot;&nbsp;已存在!&quot;);\r\n				return&nbsp;false;\r\n			}\r\n		}&nbsp;else&nbsp;{\r\n			if&nbsp;(!descFile.getParentFile().exists())&nbsp;{\r\n				//&nbsp;如果目标文件所在的目录不存在，则创建目录\r\n				log.debug(&quot;目标文件所在的目录不存在，创建目录!&quot;);\r\n				//&nbsp;创建目标文件所在的目录\r\n				if&nbsp;(!descFile.getParentFile().mkdirs())&nbsp;{\r\n					log.debug(&quot;创建目标文件所在的目录失败!&quot;);\r\n					return&nbsp;false;\r\n				}\r\n			}\r\n		}\r\n\r\n		//&nbsp;准备复制文件\r\n		//&nbsp;读取的位数\r\n		int&nbsp;readByte&nbsp;=&nbsp;0;\r\n		InputStream&nbsp;ins&nbsp;=&nbsp;null;\r\n		OutputStream&nbsp;outs&nbsp;=&nbsp;null;\r\n		try&nbsp;{\r\n			//&nbsp;打开源文件\r\n			ins&nbsp;=&nbsp;new&nbsp;FileInputStream(srcFile);\r\n			//&nbsp;打开目标文件的输出流\r\n			outs&nbsp;=&nbsp;new&nbsp;FileOutputStream(descFile);\r\n			byte[]&nbsp;buf&nbsp;=&nbsp;new&nbsp;byte[1024];\r\n			//&nbsp;一次读取1024个字节，当readByte为-1时表示文件已经读取完毕\r\n			while&nbsp;((readByte&nbsp;=&nbsp;ins.read(buf))&nbsp;!=&nbsp;-1)&nbsp;{\r\n				//&nbsp;将读取的字节流写入到输出流\r\n				outs.write(buf,&nbsp;0,&nbsp;readByte);\r\n			}\r\n			log.debug(&quot;复制单个文件&nbsp;&quot;&nbsp;+&nbsp;srcFileName&nbsp;+&nbsp;&quot;&nbsp;到&quot;&nbsp;+&nbsp;descFileName\r\n					+&nbsp;&quot;成功!&quot;);\r\n			return&nbsp;true;\r\n		}&nbsp;catch&nbsp;(Exception&nbsp;e)&nbsp;{\r\n			log.debug(&quot;复制文件失败：&quot;&nbsp;+&nbsp;e.getMessage());\r\n			return&nbsp;false;\r\n		}&nbsp;finally&nbsp;{\r\n			//&nbsp;关闭输入输出流，首先关闭输出流，然后再关闭输入流\r\n			if&nbsp;(outs&nbsp;!=&nbsp;null)&nbsp;{\r\n				try&nbsp;{\r\n					outs.close();\r\n				}&nbsp;catch&nbsp;(IOException&nbsp;oute)&nbsp;{\r\n					oute.printStackTrace();\r\n				}\r\n			}\r\n			if&nbsp;(ins&nbsp;!=&nbsp;null)&nbsp;{\r\n				try&nbsp;{\r\n					ins.close();\r\n				}&nbsp;catch&nbsp;(IOException&nbsp;ine)&nbsp;{\r\n					ine.printStackTrace();\r\n				}\r\n			}\r\n		}\r\n	}\r\n\r\n	/**\r\n	&nbsp;*&nbsp;复制整个目录的内容，如果目标目录存在，则不覆盖\r\n	&nbsp;*&nbsp;@param&nbsp;srcDirName&nbsp;源目录名\r\n	&nbsp;*&nbsp;@param&nbsp;descDirName&nbsp;目标目录名\r\n	&nbsp;*&nbsp;@return&nbsp;如果复制成功返回true，否则返回false\r\n	&nbsp;*/\r\n	public&nbsp;static&nbsp;boolean&nbsp;copyDirectory(String&nbsp;srcDirName,&nbsp;String&nbsp;descDirName)&nbsp;{\r\n		return&nbsp;FileUtils.copyDirectoryCover(srcDirName,&nbsp;descDirName,\r\n				false);\r\n	}\r\n\r\n	/**\r\n	&nbsp;*&nbsp;复制整个目录的内容&nbsp;\r\n	&nbsp;*&nbsp;@param&nbsp;srcDirName&nbsp;源目录名\r\n	&nbsp;*&nbsp;@param&nbsp;descDirName&nbsp;目标目录名\r\n	&nbsp;*&nbsp;@param&nbsp;coverlay&nbsp;如果目标目录存在，是否覆盖\r\n	&nbsp;*&nbsp;@return&nbsp;如果复制成功返回true，否则返回false\r\n	&nbsp;*/\r\n	public&nbsp;static&nbsp;boolean&nbsp;copyDirectoryCover(String&nbsp;srcDirName,\r\n			String&nbsp;descDirName,&nbsp;boolean&nbsp;coverlay)&nbsp;{\r\n		File&nbsp;srcDir&nbsp;=&nbsp;new&nbsp;File(srcDirName);\r\n		//&nbsp;判断源目录是否存在\r\n		if&nbsp;(!srcDir.exists())&nbsp;{\r\n			log.debug(&quot;复制目录失败，源目录&nbsp;&quot;&nbsp;+&nbsp;srcDirName&nbsp;+&nbsp;&quot;&nbsp;不存在!&quot;);\r\n			return&nbsp;false;\r\n		}\r\n		//&nbsp;判断源目录是否是目录\r\n		else&nbsp;if&nbsp;(!srcDir.isDirectory())&nbsp;{\r\n			log.debug(&quot;复制目录失败，&quot;&nbsp;+&nbsp;srcDirName&nbsp;+&nbsp;&quot;&nbsp;不是一个目录!&quot;);\r\n			return&nbsp;false;\r\n		}\r\n		//&nbsp;如果目标文件夹名不以文件分隔符结尾，自动添加文件分隔符\r\n		String&nbsp;descDirNames&nbsp;=&nbsp;descDirName;\r\n		if&nbsp;(!descDirNames.endsWith(File.separator))&nbsp;{\r\n			descDirNames&nbsp;=&nbsp;descDirNames&nbsp;+&nbsp;File.separator;\r\n		}\r\n		File&nbsp;descDir&nbsp;=&nbsp;new&nbsp;File(descDirNames);\r\n		//&nbsp;如果目标文件夹存在\r\n		if&nbsp;(descDir.exists())&nbsp;{\r\n			if&nbsp;(coverlay)&nbsp;{\r\n				//&nbsp;允许覆盖目标目录\r\n				log.debug(&quot;目标目录已存在，准备删除!&quot;);\r\n				if&nbsp;(!FileUtils.delFile(descDirNames))&nbsp;{\r\n					log.debug(&quot;删除目录&nbsp;&quot;&nbsp;+&nbsp;descDirNames&nbsp;+&nbsp;&quot;&nbsp;失败!&quot;);\r\n					return&nbsp;false;\r\n				}\r\n			}&nbsp;else&nbsp;{\r\n				log.debug(&quot;目标目录复制失败，目标目录&nbsp;&quot;&nbsp;+&nbsp;descDirNames&nbsp;+&nbsp;&quot;&nbsp;已存在!&quot;);\r\n				return&nbsp;false;\r\n			}\r\n		}&nbsp;else&nbsp;{\r\n			//&nbsp;创建目标目录\r\n			log.debug(&quot;目标目录不存在，准备创建!&quot;);\r\n			if&nbsp;(!descDir.mkdirs())&nbsp;{\r\n				log.debug(&quot;创建目标目录失败!&quot;);\r\n				return&nbsp;false;\r\n			}\r\n\r\n		}\r\n\r\n		boolean&nbsp;flag&nbsp;=&nbsp;true;\r\n		//&nbsp;列出源目录下的所有文件名和子目录名\r\n		File[]&nbsp;files&nbsp;=&nbsp;srcDir.listFiles();\r\n		for&nbsp;(int&nbsp;i&nbsp;=&nbsp;0;&nbsp;i&nbsp;&lt;&nbsp;files.length;&nbsp;i++)&nbsp;{\r\n			//&nbsp;如果是一个单个文件，则直接复制\r\n			if&nbsp;(files[i].isFile())&nbsp;{\r\n				flag&nbsp;=&nbsp;FileUtils.copyFile(files[i].getAbsolutePath(),\r\n						descDirName&nbsp;+&nbsp;files[i].getName());\r\n				//&nbsp;如果拷贝文件失败，则退出循环\r\n				if&nbsp;(!flag)&nbsp;{\r\n					break;\r\n				}\r\n			}\r\n			//&nbsp;如果是子目录，则继续复制目录\r\n			if&nbsp;(files[i].isDirectory())&nbsp;{\r\n				flag&nbsp;=&nbsp;FileUtils.copyDirectory(files[i]\r\n						.getAbsolutePath(),&nbsp;descDirName&nbsp;+&nbsp;files[i].getName());\r\n				//&nbsp;如果拷贝目录失败，则退出循环\r\n				if&nbsp;(!flag)&nbsp;{\r\n					break;\r\n				}\r\n			}\r\n		}\r\n\r\n		if&nbsp;(!flag)&nbsp;{\r\n			log.debug(&quot;复制目录&nbsp;&quot;&nbsp;+&nbsp;srcDirName&nbsp;+&nbsp;&quot;&nbsp;到&nbsp;&quot;&nbsp;+&nbsp;descDirName&nbsp;+&nbsp;&quot;&nbsp;失败!&quot;);\r\n			return&nbsp;false;\r\n		}\r\n		log.debug(&quot;复制目录&nbsp;&quot;&nbsp;+&nbsp;srcDirName&nbsp;+&nbsp;&quot;&nbsp;到&nbsp;&quot;&nbsp;+&nbsp;descDirName&nbsp;+&nbsp;&quot;&nbsp;成功!&quot;);\r\n		return&nbsp;true;\r\n\r\n	}\r\n\r\n	/**\r\n	&nbsp;*&nbsp;\r\n	&nbsp;*&nbsp;删除文件，可以删除单个文件或文件夹\r\n	&nbsp;*&nbsp;\r\n	&nbsp;*&nbsp;@param&nbsp;fileName&nbsp;被删除的文件名\r\n	&nbsp;*&nbsp;@return&nbsp;如果删除成功，则返回true，否是返回false\r\n	&nbsp;*/\r\n	public&nbsp;static&nbsp;boolean&nbsp;delFile(String&nbsp;fileName)&nbsp;{\r\n&nbsp;		File&nbsp;file&nbsp;=&nbsp;new&nbsp;File(fileName);\r\n		if&nbsp;(!file.exists())&nbsp;{\r\n			log.debug(fileName&nbsp;+&nbsp;&quot;&nbsp;文件不存在!&quot;);\r\n			return&nbsp;true;\r\n		}&nbsp;else&nbsp;{\r\n			if&nbsp;(file.isFile())&nbsp;{\r\n				return&nbsp;FileUtils.deleteFile(fileName);\r\n			}&nbsp;else&nbsp;{\r\n				return&nbsp;FileUtils.deleteDirectory(fileName);\r\n			}\r\n		}\r\n	}\r\n\r\n	/**\r\n	&nbsp;*&nbsp;\r\n	&nbsp;*&nbsp;删除单个文件\r\n	&nbsp;*&nbsp;\r\n	&nbsp;*&nbsp;@param&nbsp;fileName&nbsp;被删除的文件名\r\n	&nbsp;*&nbsp;@return&nbsp;如果删除成功，则返回true，否则返回false\r\n	&nbsp;*/\r\n	public&nbsp;static&nbsp;boolean&nbsp;deleteFile(String&nbsp;fileName)&nbsp;{\r\n		File&nbsp;file&nbsp;=&nbsp;new&nbsp;File(fileName);\r\n		if&nbsp;(file.exists()&nbsp;&amp;&amp;&nbsp;file.isFile())&nbsp;{\r\n			if&nbsp;(file.delete())&nbsp;{\r\n				log.debug(&quot;删除单个文件&nbsp;&quot;&nbsp;+&nbsp;fileName&nbsp;+&nbsp;&quot;&nbsp;成功!&quot;);\r\n				return&nbsp;true;\r\n			}&nbsp;else&nbsp;{\r\n				log.debug(&quot;删除单个文件&nbsp;&quot;&nbsp;+&nbsp;fileName&nbsp;+&nbsp;&quot;&nbsp;失败!&quot;);\r\n				return&nbsp;false;\r\n			}\r\n		}&nbsp;else&nbsp;{\r\n			log.debug(fileName&nbsp;+&nbsp;&quot;&nbsp;文件不存在!&quot;);\r\n			return&nbsp;true;\r\n		}\r\n	}\r\n\r\n	/**\r\n	&nbsp;*&nbsp;\r\n	&nbsp;*&nbsp;删除目录及目录下的文件\r\n	&nbsp;*&nbsp;\r\n	&nbsp;*&nbsp;@param&nbsp;dirName&nbsp;被删除的目录所在的文件路径\r\n	&nbsp;*&nbsp;@return&nbsp;如果目录删除成功，则返回true，否则返回false\r\n	&nbsp;*/\r\n	public&nbsp;static&nbsp;boolean&nbsp;deleteDirectory(String&nbsp;dirName)&nbsp;{\r\n		String&nbsp;dirNames&nbsp;=&nbsp;dirName;\r\n		if&nbsp;(!dirNames.endsWith(File.separator))&nbsp;{\r\n			dirNames&nbsp;=&nbsp;dirNames&nbsp;+&nbsp;File.separator;\r\n		}\r\n		File&nbsp;dirFile&nbsp;=&nbsp;new&nbsp;File(dirNames);\r\n		if&nbsp;(!dirFile.exists()&nbsp;||&nbsp;!dirFile.isDirectory())&nbsp;{\r\n			log.debug(dirNames&nbsp;+&nbsp;&quot;&nbsp;目录不存在!&quot;);\r\n			return&nbsp;true;\r\n		}\r\n		boolean&nbsp;flag&nbsp;=&nbsp;true;\r\n		//&nbsp;列出全部文件及子目录\r\n		File[]&nbsp;files&nbsp;=&nbsp;dirFile.listFiles();\r\n		for&nbsp;(int&nbsp;i&nbsp;=&nbsp;0;&nbsp;i&nbsp;&lt;&nbsp;files.length;&nbsp;i++)&nbsp;{\r\n			//&nbsp;删除子文件\r\n			if&nbsp;(files[i].isFile())&nbsp;{\r\n				flag&nbsp;=&nbsp;FileUtils.deleteFile(files[i].getAbsolutePath());\r\n				//&nbsp;如果删除文件失败，则退出循环\r\n				if&nbsp;(!flag)&nbsp;{\r\n					break;\r\n				}\r\n			}\r\n			//&nbsp;删除子目录\r\n			else&nbsp;if&nbsp;(files[i].isDirectory())&nbsp;{\r\n				flag&nbsp;=&nbsp;FileUtils.deleteDirectory(files[i]\r\n						.getAbsolutePath());\r\n				//&nbsp;如果删除子目录失败，则退出循环\r\n				if&nbsp;(!flag)&nbsp;{\r\n					break;\r\n				}\r\n			}\r\n		}\r\n\r\n		if&nbsp;(!flag)&nbsp;{\r\n			log.debug(&quot;删除目录失败!&quot;);\r\n			return&nbsp;false;\r\n		}\r\n		//&nbsp;删除当前目录\r\n		if&nbsp;(dirFile.delete())&nbsp;{\r\n			log.debug(&quot;删除目录&nbsp;&quot;&nbsp;+&nbsp;dirName&nbsp;+&nbsp;&quot;&nbsp;成功!&quot;);\r\n			return&nbsp;true;\r\n		}&nbsp;else&nbsp;{\r\n			log.debug(&quot;删除目录&nbsp;&quot;&nbsp;+&nbsp;dirName&nbsp;+&nbsp;&quot;&nbsp;失败!&quot;);\r\n			return&nbsp;false;\r\n		}\r\n\r\n	}\r\n\r\n	/**\r\n	&nbsp;*&nbsp;创建单个文件\r\n	&nbsp;*&nbsp;@param&nbsp;descFileName&nbsp;文件名，包含路径\r\n	&nbsp;*&nbsp;@return&nbsp;如果创建成功，则返回true，否则返回false\r\n	&nbsp;*/\r\n	public&nbsp;static&nbsp;boolean&nbsp;createFile(String&nbsp;descFileName)&nbsp;{\r\n		File&nbsp;file&nbsp;=&nbsp;new&nbsp;File(descFileName);\r\n		if&nbsp;(file.exists())&nbsp;{\r\n			log.debug(&quot;文件&nbsp;&quot;&nbsp;+&nbsp;descFileName&nbsp;+&nbsp;&quot;&nbsp;已存在!&quot;);\r\n			return&nbsp;false;\r\n		}\r\n		if&nbsp;(descFileName.endsWith(File.separator))&nbsp;{\r\n			log.debug(descFileName&nbsp;+&nbsp;&quot;&nbsp;为目录，不能创建目录!&quot;);\r\n			return&nbsp;false;\r\n		}\r\n		if&nbsp;(!file.getParentFile().exists())&nbsp;{\r\n			//&nbsp;如果文件所在的目录不存在，则创建目录\r\n			if&nbsp;(!file.getParentFile().mkdirs())&nbsp;{\r\n				log.debug(&quot;创建文件所在的目录失败!&quot;);\r\n				return&nbsp;false;\r\n			}\r\n		}\r\n\r\n		//&nbsp;创建文件\r\n		try&nbsp;{\r\n			if&nbsp;(file.createNewFile())&nbsp;{\r\n				log.debug(descFileName&nbsp;+&nbsp;&quot;&nbsp;文件创建成功!&quot;);\r\n				return&nbsp;true;\r\n			}&nbsp;else&nbsp;{\r\n				log.debug(descFileName&nbsp;+&nbsp;&quot;&nbsp;文件创建失败!&quot;);\r\n				return&nbsp;false;\r\n			}\r\n		}&nbsp;catch&nbsp;(Exception&nbsp;e)&nbsp;{\r\n			e.printStackTrace();\r\n			log.debug(descFileName&nbsp;+&nbsp;&quot;&nbsp;文件创建失败!&quot;);\r\n			return&nbsp;false;\r\n		}\r\n\r\n	}\r\n\r\n	/**\r\n	&nbsp;*&nbsp;创建目录\r\n	&nbsp;*&nbsp;@param&nbsp;descDirName&nbsp;目录名,包含路径\r\n	&nbsp;*&nbsp;@return&nbsp;如果创建成功，则返回true，否则返回false\r\n	&nbsp;*/\r\n	public&nbsp;static&nbsp;boolean&nbsp;createDirectory(String&nbsp;descDirName)&nbsp;{\r\n		String&nbsp;descDirNames&nbsp;=&nbsp;descDirName;\r\n		if&nbsp;(!descDirNames.endsWith(File.separator))&nbsp;{\r\n			descDirNames&nbsp;=&nbsp;descDirNames&nbsp;+&nbsp;File.separator;\r\n		}\r\n		File&nbsp;descDir&nbsp;=&nbsp;new&nbsp;File(descDirNames);\r\n		if&nbsp;(descDir.exists())&nbsp;{\r\n			log.debug(&quot;目录&nbsp;&quot;&nbsp;+&nbsp;descDirNames&nbsp;+&nbsp;&quot;&nbsp;已存在!&quot;);\r\n			return&nbsp;false;\r\n		}\r\n		//&nbsp;创建目录\r\n		if&nbsp;(descDir.mkdirs())&nbsp;{\r\n			log.debug(&quot;目录&nbsp;&quot;&nbsp;+&nbsp;descDirNames&nbsp;+&nbsp;&quot;&nbsp;创建成功!&quot;);\r\n			return&nbsp;true;\r\n		}&nbsp;else&nbsp;{\r\n			log.debug(&quot;目录&nbsp;&quot;&nbsp;+&nbsp;descDirNames&nbsp;+&nbsp;&quot;&nbsp;创建失败!&quot;);\r\n			return&nbsp;false;\r\n		}\r\n\r\n	}\r\n\r\n	/**\r\n	&nbsp;*&nbsp;压缩文件或目录\r\n	&nbsp;*&nbsp;@param&nbsp;srcDirName&nbsp;压缩的根目录\r\n	&nbsp;*&nbsp;@param&nbsp;fileName&nbsp;根目录下的待压缩的文件名或文件夹名，其中*或&quot;&quot;表示跟目录下的全部文件\r\n	&nbsp;*&nbsp;@param&nbsp;descFileName&nbsp;目标zip文件\r\n	&nbsp;*/\r\n	public&nbsp;static&nbsp;void&nbsp;zipFiles(String&nbsp;srcDirName,&nbsp;String&nbsp;fileName,\r\n			String&nbsp;descFileName)&nbsp;{\r\n		//&nbsp;判断目录是否存在\r\n		if&nbsp;(srcDirName&nbsp;==&nbsp;null)&nbsp;{\r\n			log.debug(&quot;文件压缩失败，目录&nbsp;&quot;&nbsp;+&nbsp;srcDirName&nbsp;+&nbsp;&quot;&nbsp;不存在!&quot;);\r\n			return;\r\n		}\r\n		File&nbsp;fileDir&nbsp;=&nbsp;new&nbsp;File(srcDirName);\r\n		if&nbsp;(!fileDir.exists()&nbsp;||&nbsp;!fileDir.isDirectory())&nbsp;{\r\n			log.debug(&quot;文件压缩失败，目录&nbsp;&quot;&nbsp;+&nbsp;srcDirName&nbsp;+&nbsp;&quot;&nbsp;不存在!&quot;);\r\n			return;\r\n		}\r\n		String&nbsp;dirPath&nbsp;=&nbsp;fileDir.getAbsolutePath();\r\n		File&nbsp;descFile&nbsp;=&nbsp;new&nbsp;File(descFileName);\r\n		try&nbsp;{\r\n			ZipOutputStream&nbsp;zouts&nbsp;=&nbsp;new&nbsp;ZipOutputStream(new&nbsp;FileOutputStream(\r\n					descFile));\r\n			if&nbsp;(&quot;*&quot;.equals(fileName)&nbsp;||&nbsp;&quot;&quot;.equals(fileName))&nbsp;{\r\n				FileUtils.zipDirectoryToZipFile(dirPath,&nbsp;fileDir,&nbsp;zouts);\r\n			}&nbsp;else&nbsp;{\r\n				File&nbsp;file&nbsp;=&nbsp;new&nbsp;File(fileDir,&nbsp;fileName);\r\n				if&nbsp;(file.isFile())&nbsp;{\r\n					FileUtils.zipFilesToZipFile(dirPath,&nbsp;file,&nbsp;zouts);\r\n				}&nbsp;else&nbsp;{\r\n					FileUtils\r\n							.zipDirectoryToZipFile(dirPath,&nbsp;file,&nbsp;zouts);\r\n				}\r\n			}\r\n			zouts.close();\r\n			log.debug(descFileName&nbsp;+&nbsp;&quot;&nbsp;文件压缩成功!&quot;);\r\n		}&nbsp;catch&nbsp;(Exception&nbsp;e)&nbsp;{\r\n			log.debug(&quot;文件压缩失败：&quot;&nbsp;+&nbsp;e.getMessage());\r\n			e.printStackTrace();\r\n		}\r\n\r\n	}\r\n\r\n	/**\r\n	&nbsp;*&nbsp;解压缩ZIP文件，将ZIP文件里的内容解压到descFileName目录下\r\n	&nbsp;*&nbsp;@param&nbsp;zipFileName&nbsp;需要解压的ZIP文件\r\n	&nbsp;*&nbsp;@param&nbsp;descFileName&nbsp;目标文件\r\n	&nbsp;*/\r\n	public&nbsp;static&nbsp;boolean&nbsp;unZipFiles(String&nbsp;zipFileName,&nbsp;String&nbsp;descFileName)&nbsp;{\r\n		String&nbsp;descFileNames&nbsp;=&nbsp;descFileName;\r\n		if&nbsp;(!descFileNames.endsWith(File.separator))&nbsp;{\r\n			descFileNames&nbsp;=&nbsp;descFileNames&nbsp;+&nbsp;File.separator;\r\n		}		\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;try&nbsp;{\r\n			//&nbsp;根据ZIP文件创建ZipFile对象\r\n			ZipFile&nbsp;zipFile&nbsp;=&nbsp;new&nbsp;ZipFile(zipFileName);\r\n			ZipEntry&nbsp;entry&nbsp;=&nbsp;null;\r\n			String&nbsp;entryName&nbsp;=&nbsp;null;\r\n			String&nbsp;descFileDir&nbsp;=&nbsp;null;\r\n			byte[]&nbsp;buf&nbsp;=&nbsp;new&nbsp;byte[4096];\r\n			int&nbsp;readByte&nbsp;=&nbsp;0;\r\n			//&nbsp;获取ZIP文件里所有的entry\r\n			@SuppressWarnings(&quot;rawtypes&quot;)\r\n			Enumeration&nbsp;enums&nbsp;=&nbsp;zipFile.getEntries();\r\n			//&nbsp;遍历所有entry\r\n			while&nbsp;(enums.hasMoreElements())&nbsp;{\r\n				entry&nbsp;=&nbsp;(ZipEntry)&nbsp;enums.nextElement();\r\n				//&nbsp;获得entry的名字\r\n				entryName&nbsp;=&nbsp;entry.getName();\r\n				descFileDir&nbsp;=&nbsp;descFileNames&nbsp;+&nbsp;entryName;\r\n				if&nbsp;(entry.isDirectory())&nbsp;{\r\n					//&nbsp;如果entry是一个目录，则创建目录\r\n					new&nbsp;File(descFileDir).mkdirs();\r\n					continue;\r\n				}&nbsp;else&nbsp;{\r\n					//&nbsp;如果entry是一个文件，则创建父目录\r\n					new&nbsp;File(descFileDir).getParentFile().mkdirs();\r\n				}\r\n				File&nbsp;file&nbsp;=&nbsp;new&nbsp;File(descFileDir);\r\n				//&nbsp;打开文件输出流\r\n				OutputStream&nbsp;os&nbsp;=&nbsp;new&nbsp;FileOutputStream(file);\r\n				//&nbsp;从ZipFile对象中打开entry的输入流\r\n		&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;InputStream&nbsp;is&nbsp;=&nbsp;zipFile.getInputStream(entry);\r\n				while&nbsp;((readByte&nbsp;=&nbsp;is.read(buf))&nbsp;!=&nbsp;-1)&nbsp;{\r\n					os.write(buf,&nbsp;0,&nbsp;readByte);\r\n				}\r\n				os.close();\r\n				is.close();\r\n			}\r\n			zipFile.close();\r\n			log.debug(&quot;文件解压成功!&quot;);\r\n			return&nbsp;true;\r\n		}&nbsp;catch&nbsp;(Exception&nbsp;e)&nbsp;{\r\n			log.debug(&quot;文件解压失败：&quot;&nbsp;+&nbsp;e.getMessage());\r\n			return&nbsp;false;\r\n		}\r\n	}\r\n\r\n	/**\r\n	&nbsp;*&nbsp;将目录压缩到ZIP输出流\r\n	&nbsp;*&nbsp;@param&nbsp;dirPath&nbsp;目录路径\r\n	&nbsp;*&nbsp;@param&nbsp;fileDir&nbsp;文件信息\r\n	&nbsp;*&nbsp;@param&nbsp;zouts&nbsp;输出流\r\n	&nbsp;*/\r\n	public&nbsp;static&nbsp;void&nbsp;zipDirectoryToZipFile(String&nbsp;dirPath,&nbsp;File&nbsp;fileDir,\r\n			ZipOutputStream&nbsp;zouts)&nbsp;{\r\n		if&nbsp;(fileDir.isDirectory())&nbsp;{\r\n			File[]&nbsp;files&nbsp;=&nbsp;fileDir.listFiles();\r\n			//&nbsp;空的文件夹\r\n			if&nbsp;(files.length&nbsp;==&nbsp;0)&nbsp;{\r\n				//&nbsp;目录信息\r\n				ZipEntry&nbsp;entry&nbsp;=&nbsp;new&nbsp;ZipEntry(getEntryName(dirPath,&nbsp;fileDir));\r\n				try&nbsp;{\r\n					zouts.putNextEntry(entry);\r\n					zouts.closeEntry();\r\n				}&nbsp;catch&nbsp;(Exception&nbsp;e)&nbsp;{\r\n					e.printStackTrace();\r\n				}\r\n				return;\r\n			}\r\n\r\n			for&nbsp;(int&nbsp;i&nbsp;=&nbsp;0;&nbsp;i&nbsp;&lt;&nbsp;files.length;&nbsp;i++)&nbsp;{\r\n				if&nbsp;(files[i].isFile())&nbsp;{\r\n					//&nbsp;如果是文件，则调用文件压缩方法\r\n					FileUtils\r\n							.zipFilesToZipFile(dirPath,&nbsp;files[i],&nbsp;zouts);\r\n				}&nbsp;else&nbsp;{\r\n					//&nbsp;如果是目录，则递归调用\r\n					FileUtils.zipDirectoryToZipFile(dirPath,&nbsp;files[i],\r\n							zouts);\r\n				}\r\n			}\r\n\r\n		}\r\n\r\n	}\r\n\r\n	/**\r\n	&nbsp;*&nbsp;将文件压缩到ZIP输出流\r\n	&nbsp;*&nbsp;@param&nbsp;dirPath&nbsp;目录路径\r\n	&nbsp;*&nbsp;@param&nbsp;file&nbsp;文件\r\n	&nbsp;*&nbsp;@param&nbsp;zouts&nbsp;输出流\r\n	&nbsp;*/\r\n	public&nbsp;static&nbsp;void&nbsp;zipFilesToZipFile(String&nbsp;dirPath,&nbsp;File&nbsp;file,\r\n			ZipOutputStream&nbsp;zouts)&nbsp;{\r\n		FileInputStream&nbsp;fin&nbsp;=&nbsp;null;\r\n		ZipEntry&nbsp;entry&nbsp;=&nbsp;null;\r\n		//&nbsp;创建复制缓冲区\r\n		byte[]&nbsp;buf&nbsp;=&nbsp;new&nbsp;byte[4096];\r\n		int&nbsp;readByte&nbsp;=&nbsp;0;\r\n		if&nbsp;(file.isFile())&nbsp;{\r\n			try&nbsp;{\r\n				//&nbsp;创建一个文件输入流\r\n				fin&nbsp;=&nbsp;new&nbsp;FileInputStream(file);\r\n				//&nbsp;创建一个ZipEntry\r\n				entry&nbsp;=&nbsp;new&nbsp;ZipEntry(getEntryName(dirPath,&nbsp;file));\r\n				//&nbsp;存储信息到压缩文件\r\n				zouts.putNextEntry(entry);\r\n				//&nbsp;复制字节到压缩文件\r\n				while&nbsp;((readByte&nbsp;=&nbsp;fin.read(buf))&nbsp;!=&nbsp;-1)&nbsp;{\r\n					zouts.write(buf,&nbsp;0,&nbsp;readByte);\r\n				}\r\n				zouts.closeEntry();\r\n				fin.close();\r\n				System.out\r\n						.println(&quot;添加文件&nbsp;&quot;&nbsp;+&nbsp;file.getAbsolutePath()&nbsp;+&nbsp;&quot;&nbsp;到zip文件中!&quot;);\r\n			}&nbsp;catch&nbsp;(Exception&nbsp;e)&nbsp;{\r\n				e.printStackTrace();\r\n			}\r\n		}\r\n\r\n	}\r\n\r\n	/**\r\n	&nbsp;*&nbsp;获取待压缩文件在ZIP文件中entry的名字，即相对于跟目录的相对路径名\r\n	&nbsp;*&nbsp;@param&nbsp;dirPath&nbsp;目录名\r\n	&nbsp;*&nbsp;@param&nbsp;file&nbsp;entry文件名\r\n	&nbsp;*&nbsp;@return\r\n	&nbsp;*/\r\n	private&nbsp;static&nbsp;String&nbsp;getEntryName(String&nbsp;dirPath,&nbsp;File&nbsp;file)&nbsp;{\r\n		String&nbsp;dirPaths&nbsp;=&nbsp;dirPath;\r\n		if&nbsp;(!dirPaths.endsWith(File.separator))&nbsp;{\r\n			dirPaths&nbsp;=&nbsp;dirPaths&nbsp;+&nbsp;File.separator;\r\n		}\r\n		String&nbsp;filePath&nbsp;=&nbsp;file.getAbsolutePath();\r\n		//&nbsp;对于目录，必须在entry名字后面加上&quot;/&quot;，表示它将以目录项存储\r\n		if&nbsp;(file.isDirectory())&nbsp;{\r\n			filePath&nbsp;+=&nbsp;&quot;/&quot;;\r\n		}\r\n		int&nbsp;index&nbsp;=&nbsp;filePath.indexOf(dirPaths);\r\n\r\n		return&nbsp;filePath.substring(index&nbsp;+&nbsp;dirPaths.length());\r\n	}\r\n	\r\n	/**\r\n	&nbsp;*&nbsp;将内容写入文件\r\n	&nbsp;*&nbsp;@param&nbsp;content\r\n	&nbsp;*&nbsp;@param&nbsp;filePath\r\n	&nbsp;*/\r\n	public&nbsp;static&nbsp;void&nbsp;writeFile(String&nbsp;content,&nbsp;String&nbsp;filePath)&nbsp;{\r\n		try&nbsp;{\r\n			if&nbsp;(FileUtils.createFile(filePath)){\r\n				FileWriter&nbsp;fileWriter&nbsp;=&nbsp;new&nbsp;FileWriter(filePath,&nbsp;true);\r\n				BufferedWriter&nbsp;bufferedWriter&nbsp;=&nbsp;new&nbsp;BufferedWriter(fileWriter);\r\n				bufferedWriter.write(content);\r\n				bufferedWriter.close();\r\n				fileWriter.close();\r\n			}else{\r\n				log.info(&quot;生成失败，文件已存在！&quot;);\r\n			}\r\n		}&nbsp;catch&nbsp;(Exception&nbsp;e)&nbsp;{\r\n			e.printStackTrace();\r\n		}\r\n	}\r\n	\r\n	/**\r\n	&nbsp;*&nbsp;追加文件内容\r\n	&nbsp;*/\r\n	&nbsp;/**&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;追加文件：使用RandomAccessFile&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;@param&nbsp;fileName&nbsp;文件名&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;@param&nbsp;content&nbsp;追加的内容&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;static&nbsp;void&nbsp;appendFile(String&nbsp;filePath,&nbsp;String&nbsp;content)&nbsp;{&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;RandomAccessFile&nbsp;randomFile&nbsp;=&nbsp;null;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;try&nbsp;{&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;打开一个随机访问文件流，按读写方式&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;randomFile&nbsp;=&nbsp;new&nbsp;RandomAccessFile(filePath,&nbsp;&quot;rw&quot;);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;文件长度，字节数&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;long&nbsp;fileLength&nbsp;=&nbsp;randomFile.length();&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;将写文件指针移到文件尾。&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;randomFile.seek(fileLength);\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;randomFile.writeUTF(content);\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;catch&nbsp;(IOException&nbsp;e)&nbsp;{&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;e.printStackTrace();&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;finally{&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(randomFile&nbsp;!=&nbsp;null){&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;try&nbsp;{&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;randomFile.close();&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;catch&nbsp;(IOException&nbsp;e)&nbsp;{&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;e.printStackTrace();&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;\r\n\r\n}</pre><p><br/></p>', '2014-05-21', '文件操作工具类，实现文件的创建、删除、复制、压缩、解压以及目录的创建、删除、复制、压缩解压等功能', '50', null, null, '1', 'java', 'java文件操作工具类', '0', '29', '0', null, null, null);
INSERT INTO `cms_article` VALUES ('40', 'black', '<p><span style=\"font-family: Helvetica, Tahoma, Arial, sans-serif; font-size: 12px; line-height: 18px; background-color: rgb(255, 255, 255);\">js回调函数传参数，简单代码蕴藏大智慧<img src=\"http://img.baidu.com/hi/jx2/j_0057.gif\" width=\"18\" height=\"18\" border=\"0\" hspace=\"0\" vspace=\"0\" title=\"\" style=\"width: 18px; height: 18px;\"/></span></p><pre class=\"brush:js;toolbar:false\">function&nbsp;a(callback){&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;m&nbsp;=&nbsp;1;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;n&nbsp;=&nbsp;2;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;alert(callback(m,n));&nbsp;&nbsp;\r\n}&nbsp;&nbsp;\r\n&nbsp;&nbsp;\r\nfunction&nbsp;b(m,n){&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;m+n;&nbsp;&nbsp;\r\n}&nbsp;&nbsp;\r\na(b);</pre><p><span style=\"font-family: Helvetica, Tahoma, Arial, sans-serif; font-size: 12px; line-height: 18px; background-color: rgb(255, 255, 255);\"></span><br/></p>', '2014-05-21', 'js回调函数传参数，简单代码蕴藏大智慧', '37', null, null, '1', 'js', 'js回调函数传参数', '0', '30', '0', null, null, null);
INSERT INTO `cms_article` VALUES ('41', 'black', '<p style=\"text-indent: 2em;\">今天工作上的事一点也没做，不是特别想做。一直在弄阿里云服务器，一步一步的解决了一些问题，技术上有了一些进步。哎，努力吧，阿里的客服都这么NB，汗颜了。。。</p><p style=\"text-indent: 2em;\">做了个项目都不能部署到512M的阿里云服务器上，弄的客服人员都无语了。。我不就用了很多外部包，应该也不存在啊，看来阿里也不是人人都NB</p><p><br/></p>', '2014-05-24', '​今天工作上的事一点也没做，不是特别想做，也不知道做撒子。一直在弄阿里云服务器，一步一步的解决了一些问题，技术上有了一些进步', '104', null, null, '1', '日记', '写于2014-5-24', '0', '26', '0', null, null, null);
INSERT INTO `cms_article` VALUES ('42', 'black', '<p><span style=\"color: rgb(17, 17, 17); font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 13px; line-height: 23.399999618530273px; background-color: rgb(255, 255, 255);\">进入vi的命令&nbsp;</span><br style=\"margin: 0px; padding: 0px; color: rgb(17, 17, 17); font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 13px; line-height: 23.399999618530273px; white-space: normal; background-color: rgb(255, 255, 255);\"/><span style=\"color: rgb(17, 17, 17); font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 13px; line-height: 23.399999618530273px; background-color: rgb(255, 255, 255);\">vi filename :打开或新建文件，并将光标置于第一行首&nbsp;</span><br style=\"margin: 0px; padding: 0px; color: rgb(17, 17, 17); font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 13px; line-height: 23.399999618530273px; white-space: normal; background-color: rgb(255, 255, 255);\"/><span style=\"color: rgb(17, 17, 17); font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 13px; line-height: 23.399999618530273px; background-color: rgb(255, 255, 255);\">vi +n filename ：打开文件，并将光标置于第n行首&nbsp;</span><br style=\"margin: 0px; padding: 0px; color: rgb(17, 17, 17); font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 13px; line-height: 23.399999618530273px; white-space: normal; background-color: rgb(255, 255, 255);\"/><span style=\"color: rgb(17, 17, 17); font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 13px; line-height: 23.399999618530273px; background-color: rgb(255, 255, 255);\">vi + filename ：打开文件，并将光标置于最后一行首&nbsp;</span><br style=\"margin: 0px; padding: 0px; color: rgb(17, 17, 17); font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 13px; line-height: 23.399999618530273px; white-space: normal; background-color: rgb(255, 255, 255);\"/><span style=\"color: rgb(17, 17, 17); font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 13px; line-height: 23.399999618530273px; background-color: rgb(255, 255, 255);\">vi +/pattern filename：打开文件，并将光标置于第一个与pattern匹配的串处&nbsp;</span><br style=\"margin: 0px; padding: 0px; color: rgb(17, 17, 17); font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 13px; line-height: 23.399999618530273px; white-space: normal; background-color: rgb(255, 255, 255);\"/><span style=\"color: rgb(17, 17, 17); font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 13px; line-height: 23.399999618530273px; background-color: rgb(255, 255, 255);\">vi -r filename ：在上次正用vi编辑时发生系统崩溃，恢复filename&nbsp;</span><br style=\"margin: 0px; padding: 0px; color: rgb(17, 17, 17); font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 13px; line-height: 23.399999618530273px; white-space: normal; background-color: rgb(255, 255, 255);\"/><span style=\"color: rgb(17, 17, 17); font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 13px; line-height: 23.399999618530273px; background-color: rgb(255, 255, 255);\">vi filename....filename ：打开多个文件，依次进行编辑&nbsp;</span></p><p><span style=\"color: rgb(17, 17, 17); font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 13px; line-height: 23.399999618530273px; background-color: rgb(255, 255, 255);\">移动光标类命令</span><br style=\"margin: 0px; padding: 0px; color: rgb(17, 17, 17); font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 13px; line-height: 23.399999618530273px; white-space: normal; background-color: rgb(255, 255, 255);\"/><span style=\"color: rgb(17, 17, 17); font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 13px; line-height: 23.399999618530273px; background-color: rgb(255, 255, 255);\">h ：光标左移一个字符&nbsp;</span><br style=\"margin: 0px; padding: 0px; color: rgb(17, 17, 17); font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 13px; line-height: 23.399999618530273px; white-space: normal; background-color: rgb(255, 255, 255);\"/><span style=\"color: rgb(17, 17, 17); font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 13px; line-height: 23.399999618530273px; background-color: rgb(255, 255, 255);\">l ：光标右移一个字符&nbsp;</span><br style=\"margin: 0px; padding: 0px; color: rgb(17, 17, 17); font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 13px; line-height: 23.399999618530273px; white-space: normal; background-color: rgb(255, 255, 255);\"/><span style=\"color: rgb(17, 17, 17); font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 13px; line-height: 23.399999618530273px; background-color: rgb(255, 255, 255);\">space：光标右移一个字符&nbsp;</span><br style=\"margin: 0px; padding: 0px; color: rgb(17, 17, 17); font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 13px; line-height: 23.399999618530273px; white-space: normal; background-color: rgb(255, 255, 255);\"/><span style=\"color: rgb(17, 17, 17); font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 13px; line-height: 23.399999618530273px; background-color: rgb(255, 255, 255);\">Backspace：光标左移一个字符&nbsp;</span><br style=\"margin: 0px; padding: 0px; color: rgb(17, 17, 17); font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 13px; line-height: 23.399999618530273px; white-space: normal; background-color: rgb(255, 255, 255);\"/><span style=\"color: rgb(17, 17, 17); font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 13px; line-height: 23.399999618530273px; background-color: rgb(255, 255, 255);\">k或Ctrl+p：光标上移一行&nbsp;</span><br style=\"margin: 0px; padding: 0px; color: rgb(17, 17, 17); font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 13px; line-height: 23.399999618530273px; white-space: normal; background-color: rgb(255, 255, 255);\"/><span style=\"color: rgb(17, 17, 17); font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 13px; line-height: 23.399999618530273px; background-color: rgb(255, 255, 255);\">j或Ctrl+n ：光标下移一行&nbsp;</span><br style=\"margin: 0px; padding: 0px; color: rgb(17, 17, 17); font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 13px; line-height: 23.399999618530273px; white-space: normal; background-color: rgb(255, 255, 255);\"/><span style=\"color: rgb(17, 17, 17); font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 13px; line-height: 23.399999618530273px; background-color: rgb(255, 255, 255);\">Enter ：光标下移一行&nbsp;</span><br style=\"margin: 0px; padding: 0px; color: rgb(17, 17, 17); font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 13px; line-height: 23.399999618530273px; white-space: normal; background-color: rgb(255, 255, 255);\"/><span style=\"color: rgb(17, 17, 17); font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 13px; line-height: 23.399999618530273px; background-color: rgb(255, 255, 255);\">w或W ：光标右移一个字至字首&nbsp;</span><br style=\"margin: 0px; padding: 0px; color: rgb(17, 17, 17); font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 13px; line-height: 23.399999618530273px; white-space: normal; background-color: rgb(255, 255, 255);\"/><span style=\"color: rgb(17, 17, 17); font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 13px; line-height: 23.399999618530273px; background-color: rgb(255, 255, 255);\">b或B ：光标左移一个字至字首&nbsp;</span><br style=\"margin: 0px; padding: 0px; color: rgb(17, 17, 17); font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 13px; line-height: 23.399999618530273px; white-space: normal; background-color: rgb(255, 255, 255);\"/><span style=\"color: rgb(17, 17, 17); font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 13px; line-height: 23.399999618530273px; background-color: rgb(255, 255, 255);\">e或E ：光标右移一个字至字尾&nbsp;</span><br style=\"margin: 0px; padding: 0px; color: rgb(17, 17, 17); font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 13px; line-height: 23.399999618530273px; white-space: normal; background-color: rgb(255, 255, 255);\"/><span style=\"color: rgb(17, 17, 17); font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 13px; line-height: 23.399999618530273px; background-color: rgb(255, 255, 255);\">) ：光标移至句尾&nbsp;</span><br style=\"margin: 0px; padding: 0px; color: rgb(17, 17, 17); font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 13px; line-height: 23.399999618530273px; white-space: normal; background-color: rgb(255, 255, 255);\"/><span style=\"color: rgb(17, 17, 17); font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 13px; line-height: 23.399999618530273px; background-color: rgb(255, 255, 255);\">( ：光标移至句首&nbsp;</span><br style=\"margin: 0px; padding: 0px; color: rgb(17, 17, 17); font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 13px; line-height: 23.399999618530273px; white-space: normal; background-color: rgb(255, 255, 255);\"/><span style=\"color: rgb(17, 17, 17); font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 13px; line-height: 23.399999618530273px; background-color: rgb(255, 255, 255);\">}：光标移至段落开头&nbsp;</span><br style=\"margin: 0px; padding: 0px; color: rgb(17, 17, 17); font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 13px; line-height: 23.399999618530273px; white-space: normal; background-color: rgb(255, 255, 255);\"/><span style=\"color: rgb(17, 17, 17); font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 13px; line-height: 23.399999618530273px; background-color: rgb(255, 255, 255);\">{：光标移至段落结尾&nbsp;</span><br style=\"margin: 0px; padding: 0px; color: rgb(17, 17, 17); font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 13px; line-height: 23.399999618530273px; white-space: normal; background-color: rgb(255, 255, 255);\"/><span style=\"color: rgb(17, 17, 17); font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 13px; line-height: 23.399999618530273px; background-color: rgb(255, 255, 255);\">nG：光标移至第n行首&nbsp;</span><br style=\"margin: 0px; padding: 0px; color: rgb(17, 17, 17); font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 13px; line-height: 23.399999618530273px; white-space: normal; background-color: rgb(255, 255, 255);\"/><span style=\"color: rgb(17, 17, 17); font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 13px; line-height: 23.399999618530273px; background-color: rgb(255, 255, 255);\">n+：光标下移n行&nbsp;</span><br style=\"margin: 0px; padding: 0px; color: rgb(17, 17, 17); font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 13px; line-height: 23.399999618530273px; white-space: normal; background-color: rgb(255, 255, 255);\"/><span style=\"color: rgb(17, 17, 17); font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 13px; line-height: 23.399999618530273px; background-color: rgb(255, 255, 255);\">n-：光标上移n行&nbsp;</span><br style=\"margin: 0px; padding: 0px; color: rgb(17, 17, 17); font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 13px; line-height: 23.399999618530273px; white-space: normal; background-color: rgb(255, 255, 255);\"/><span style=\"color: rgb(17, 17, 17); font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 13px; line-height: 23.399999618530273px; background-color: rgb(255, 255, 255);\">n$：光标移至第n行尾&nbsp;</span><br style=\"margin: 0px; padding: 0px; color: rgb(17, 17, 17); font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 13px; line-height: 23.399999618530273px; white-space: normal; background-color: rgb(255, 255, 255);\"/><span style=\"color: rgb(17, 17, 17); font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 13px; line-height: 23.399999618530273px; background-color: rgb(255, 255, 255);\">H ：光标移至屏幕顶行&nbsp;</span><br style=\"margin: 0px; padding: 0px; color: rgb(17, 17, 17); font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 13px; line-height: 23.399999618530273px; white-space: normal; background-color: rgb(255, 255, 255);\"/><span style=\"color: rgb(17, 17, 17); font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 13px; line-height: 23.399999618530273px; background-color: rgb(255, 255, 255);\">M ：光标移至屏幕中间行&nbsp;</span><br style=\"margin: 0px; padding: 0px; color: rgb(17, 17, 17); font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 13px; line-height: 23.399999618530273px; white-space: normal; background-color: rgb(255, 255, 255);\"/><span style=\"color: rgb(17, 17, 17); font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 13px; line-height: 23.399999618530273px; background-color: rgb(255, 255, 255);\">L ：光标移至屏幕最后行&nbsp;</span><br style=\"margin: 0px; padding: 0px; color: rgb(17, 17, 17); font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 13px; line-height: 23.399999618530273px; white-space: normal; background-color: rgb(255, 255, 255);\"/><span style=\"color: rgb(17, 17, 17); font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 13px; line-height: 23.399999618530273px; background-color: rgb(255, 255, 255);\">0：（注意是数字零）光标移至当前行首&nbsp;</span><br style=\"margin: 0px; padding: 0px; color: rgb(17, 17, 17); font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 13px; line-height: 23.399999618530273px; white-space: normal; background-color: rgb(255, 255, 255);\"/><span style=\"color: rgb(17, 17, 17); font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 13px; line-height: 23.399999618530273px; background-color: rgb(255, 255, 255);\">$：光标移至当前行尾&nbsp;</span><br style=\"margin: 0px; padding: 0px; color: rgb(17, 17, 17); font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 13px; line-height: 23.399999618530273px; white-space: normal; background-color: rgb(255, 255, 255);\"/><br style=\"margin: 0px; padding: 0px; color: rgb(17, 17, 17); font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 13px; line-height: 23.399999618530273px; white-space: normal; background-color: rgb(255, 255, 255);\"/><span style=\"color: rgb(17, 17, 17); font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 13px; line-height: 23.399999618530273px; background-color: rgb(255, 255, 255);\">屏幕翻滚类命令&nbsp;</span><br style=\"margin: 0px; padding: 0px; color: rgb(17, 17, 17); font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 13px; line-height: 23.399999618530273px; white-space: normal; background-color: rgb(255, 255, 255);\"/><span style=\"color: rgb(17, 17, 17); font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 13px; line-height: 23.399999618530273px; background-color: rgb(255, 255, 255);\">Ctrl+u：向文件首翻半屏&nbsp;</span><br style=\"margin: 0px; padding: 0px; color: rgb(17, 17, 17); font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 13px; line-height: 23.399999618530273px; white-space: normal; background-color: rgb(255, 255, 255);\"/><span style=\"color: rgb(17, 17, 17); font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 13px; line-height: 23.399999618530273px; background-color: rgb(255, 255, 255);\">Ctrl+d：向文件尾翻半屏&nbsp;</span><br style=\"margin: 0px; padding: 0px; color: rgb(17, 17, 17); font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 13px; line-height: 23.399999618530273px; white-space: normal; background-color: rgb(255, 255, 255);\"/><span style=\"color: rgb(17, 17, 17); font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 13px; line-height: 23.399999618530273px; background-color: rgb(255, 255, 255);\">Ctrl+f：向文件尾翻一屏&nbsp;</span><br style=\"margin: 0px; padding: 0px; color: rgb(17, 17, 17); font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 13px; line-height: 23.399999618530273px; white-space: normal; background-color: rgb(255, 255, 255);\"/><span style=\"color: rgb(17, 17, 17); font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 13px; line-height: 23.399999618530273px; background-color: rgb(255, 255, 255);\">Ctrl＋b；向文件首翻一屏&nbsp;</span><br style=\"margin: 0px; padding: 0px; color: rgb(17, 17, 17); font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 13px; line-height: 23.399999618530273px; white-space: normal; background-color: rgb(255, 255, 255);\"/><span style=\"color: rgb(17, 17, 17); font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 13px; line-height: 23.399999618530273px; background-color: rgb(255, 255, 255);\">nz：将第n行滚至屏幕顶部，不指定n时将当前行滚至屏幕顶部。&nbsp;</span><br style=\"margin: 0px; padding: 0px; color: rgb(17, 17, 17); font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 13px; line-height: 23.399999618530273px; white-space: normal; background-color: rgb(255, 255, 255);\"/><br style=\"margin: 0px; padding: 0px; color: rgb(17, 17, 17); font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 13px; line-height: 23.399999618530273px; white-space: normal; background-color: rgb(255, 255, 255);\"/><span style=\"color: rgb(17, 17, 17); font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 13px; line-height: 23.399999618530273px; background-color: rgb(255, 255, 255);\">插入文本类命令&nbsp;</span><br style=\"margin: 0px; padding: 0px; color: rgb(17, 17, 17); font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 13px; line-height: 23.399999618530273px; white-space: normal; background-color: rgb(255, 255, 255);\"/><span style=\"color: rgb(17, 17, 17); font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 13px; line-height: 23.399999618530273px; background-color: rgb(255, 255, 255);\">i ：在光标前&nbsp;</span><br style=\"margin: 0px; padding: 0px; color: rgb(17, 17, 17); font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 13px; line-height: 23.399999618530273px; white-space: normal; background-color: rgb(255, 255, 255);\"/><span style=\"color: rgb(17, 17, 17); font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 13px; line-height: 23.399999618530273px; background-color: rgb(255, 255, 255);\">I ：在当前行首&nbsp;</span><br style=\"margin: 0px; padding: 0px; color: rgb(17, 17, 17); font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 13px; line-height: 23.399999618530273px; white-space: normal; background-color: rgb(255, 255, 255);\"/><span style=\"color: rgb(17, 17, 17); font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 13px; line-height: 23.399999618530273px; background-color: rgb(255, 255, 255);\">a：光标后&nbsp;</span><br style=\"margin: 0px; padding: 0px; color: rgb(17, 17, 17); font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 13px; line-height: 23.399999618530273px; white-space: normal; background-color: rgb(255, 255, 255);\"/><span style=\"color: rgb(17, 17, 17); font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 13px; line-height: 23.399999618530273px; background-color: rgb(255, 255, 255);\">A：在当前行尾&nbsp;</span><br style=\"margin: 0px; padding: 0px; color: rgb(17, 17, 17); font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 13px; line-height: 23.399999618530273px; white-space: normal; background-color: rgb(255, 255, 255);\"/><span style=\"color: rgb(17, 17, 17); font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 13px; line-height: 23.399999618530273px; background-color: rgb(255, 255, 255);\">o：在当前行之下新开一行&nbsp;</span><br style=\"margin: 0px; padding: 0px; color: rgb(17, 17, 17); font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 13px; line-height: 23.399999618530273px; white-space: normal; background-color: rgb(255, 255, 255);\"/><span style=\"color: rgb(17, 17, 17); font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 13px; line-height: 23.399999618530273px; background-color: rgb(255, 255, 255);\">O：在当前行之上新开一行&nbsp;</span><br style=\"margin: 0px; padding: 0px; color: rgb(17, 17, 17); font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 13px; line-height: 23.399999618530273px; white-space: normal; background-color: rgb(255, 255, 255);\"/><span style=\"color: rgb(17, 17, 17); font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 13px; line-height: 23.399999618530273px; background-color: rgb(255, 255, 255);\">r：替换当前字符&nbsp;</span><br style=\"margin: 0px; padding: 0px; color: rgb(17, 17, 17); font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 13px; line-height: 23.399999618530273px; white-space: normal; background-color: rgb(255, 255, 255);\"/><span style=\"color: rgb(17, 17, 17); font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 13px; line-height: 23.399999618530273px; background-color: rgb(255, 255, 255);\">R：替换当前字符及其后的字符，直至按ESC键&nbsp;</span><br style=\"margin: 0px; padding: 0px; color: rgb(17, 17, 17); font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 13px; line-height: 23.399999618530273px; white-space: normal; background-color: rgb(255, 255, 255);\"/><span style=\"color: rgb(17, 17, 17); font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 13px; line-height: 23.399999618530273px; background-color: rgb(255, 255, 255);\">s：从当前光标位置处开始，以输入的文本替代指定数目的字符&nbsp;</span><br style=\"margin: 0px; padding: 0px; color: rgb(17, 17, 17); font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 13px; line-height: 23.399999618530273px; white-space: normal; background-color: rgb(255, 255, 255);\"/><span style=\"color: rgb(17, 17, 17); font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 13px; line-height: 23.399999618530273px; background-color: rgb(255, 255, 255);\">S：删除指定数目的行，并以所输入文本代替之&nbsp;</span><br style=\"margin: 0px; padding: 0px; color: rgb(17, 17, 17); font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 13px; line-height: 23.399999618530273px; white-space: normal; background-color: rgb(255, 255, 255);\"/><span style=\"color: rgb(17, 17, 17); font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 13px; line-height: 23.399999618530273px; background-color: rgb(255, 255, 255);\">ncw或nCW：修改指定数目的字&nbsp;</span><br style=\"margin: 0px; padding: 0px; color: rgb(17, 17, 17); font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 13px; line-height: 23.399999618530273px; white-space: normal; background-color: rgb(255, 255, 255);\"/><span style=\"color: rgb(17, 17, 17); font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 13px; line-height: 23.399999618530273px; background-color: rgb(255, 255, 255);\">nCC：修改指定数目的行&nbsp;</span><br style=\"margin: 0px; padding: 0px; color: rgb(17, 17, 17); font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 13px; line-height: 23.399999618530273px; white-space: normal; background-color: rgb(255, 255, 255);\"/><br style=\"margin: 0px; padding: 0px; color: rgb(17, 17, 17); font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 13px; line-height: 23.399999618530273px; white-space: normal; background-color: rgb(255, 255, 255);\"/><span style=\"color: rgb(17, 17, 17); font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 13px; line-height: 23.399999618530273px; background-color: rgb(255, 255, 255);\">删除命令&nbsp;</span><br style=\"margin: 0px; padding: 0px; color: rgb(17, 17, 17); font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 13px; line-height: 23.399999618530273px; white-space: normal; background-color: rgb(255, 255, 255);\"/><span style=\"color: rgb(17, 17, 17); font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 13px; line-height: 23.399999618530273px; background-color: rgb(255, 255, 255);\">ndw或ndW：删除光标处开始及其后的n-1个字&nbsp;</span><br style=\"margin: 0px; padding: 0px; color: rgb(17, 17, 17); font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 13px; line-height: 23.399999618530273px; white-space: normal; background-color: rgb(255, 255, 255);\"/><span style=\"color: rgb(17, 17, 17); font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 13px; line-height: 23.399999618530273px; background-color: rgb(255, 255, 255);\">do：删至行首&nbsp;</span><br style=\"margin: 0px; padding: 0px; color: rgb(17, 17, 17); font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 13px; line-height: 23.399999618530273px; white-space: normal; background-color: rgb(255, 255, 255);\"/><span style=\"color: rgb(17, 17, 17); font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 13px; line-height: 23.399999618530273px; background-color: rgb(255, 255, 255);\">d$：删至行尾&nbsp;</span><br style=\"margin: 0px; padding: 0px; color: rgb(17, 17, 17); font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 13px; line-height: 23.399999618530273px; white-space: normal; background-color: rgb(255, 255, 255);\"/><span style=\"color: rgb(17, 17, 17); font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 13px; line-height: 23.399999618530273px; background-color: rgb(255, 255, 255);\">ndd：删除当前行及其后n-1行&nbsp;</span><br style=\"margin: 0px; padding: 0px; color: rgb(17, 17, 17); font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 13px; line-height: 23.399999618530273px; white-space: normal; background-color: rgb(255, 255, 255);\"/><span style=\"color: rgb(17, 17, 17); font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 13px; line-height: 23.399999618530273px; background-color: rgb(255, 255, 255);\">x或X：删除一个字符，x删除光标后的，而X删除光标前的&nbsp;</span><br style=\"margin: 0px; padding: 0px; color: rgb(17, 17, 17); font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 13px; line-height: 23.399999618530273px; white-space: normal; background-color: rgb(255, 255, 255);\"/><span style=\"color: rgb(17, 17, 17); font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 13px; line-height: 23.399999618530273px; background-color: rgb(255, 255, 255);\">Ctrl+u：删除输入方式下所输入的文本&nbsp;</span><br style=\"margin: 0px; padding: 0px; color: rgb(17, 17, 17); font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 13px; line-height: 23.399999618530273px; white-space: normal; background-color: rgb(255, 255, 255);\"/><br style=\"margin: 0px; padding: 0px; color: rgb(17, 17, 17); font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 13px; line-height: 23.399999618530273px; white-space: normal; background-color: rgb(255, 255, 255);\"/><span style=\"color: rgb(17, 17, 17); font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 13px; line-height: 23.399999618530273px; background-color: rgb(255, 255, 255);\">搜索及替换命令&nbsp;</span><br style=\"margin: 0px; padding: 0px; color: rgb(17, 17, 17); font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 13px; line-height: 23.399999618530273px; white-space: normal; background-color: rgb(255, 255, 255);\"/><span style=\"color: rgb(17, 17, 17); font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 13px; line-height: 23.399999618530273px; background-color: rgb(255, 255, 255);\">/pattern：从光标开始处向文件尾搜索pattern&nbsp;</span><br style=\"margin: 0px; padding: 0px; color: rgb(17, 17, 17); font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 13px; line-height: 23.399999618530273px; white-space: normal; background-color: rgb(255, 255, 255);\"/><span style=\"color: rgb(17, 17, 17); font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 13px; line-height: 23.399999618530273px; background-color: rgb(255, 255, 255);\">?pattern：从光标开始处向文件首搜索pattern&nbsp;</span><br style=\"margin: 0px; padding: 0px; color: rgb(17, 17, 17); font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 13px; line-height: 23.399999618530273px; white-space: normal; background-color: rgb(255, 255, 255);\"/><span style=\"color: rgb(17, 17, 17); font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 13px; line-height: 23.399999618530273px; background-color: rgb(255, 255, 255);\">n：在同一方向重复上一次搜索命令&nbsp;</span><br style=\"margin: 0px; padding: 0px; color: rgb(17, 17, 17); font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 13px; line-height: 23.399999618530273px; white-space: normal; background-color: rgb(255, 255, 255);\"/><span style=\"color: rgb(17, 17, 17); font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 13px; line-height: 23.399999618530273px; background-color: rgb(255, 255, 255);\">N：在反方向上重复上一次搜索命令&nbsp;</span><br style=\"margin: 0px; padding: 0px; color: rgb(17, 17, 17); font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 13px; line-height: 23.399999618530273px; white-space: normal; background-color: rgb(255, 255, 255);\"/><span style=\"color: rgb(17, 17, 17); font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 13px; line-height: 23.399999618530273px; background-color: rgb(255, 255, 255);\">：s/p1/p2/g：将当前行中所有p1均用p2替代&nbsp;</span><br style=\"margin: 0px; padding: 0px; color: rgb(17, 17, 17); font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 13px; line-height: 23.399999618530273px; white-space: normal; background-color: rgb(255, 255, 255);\"/><span style=\"color: rgb(17, 17, 17); font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 13px; line-height: 23.399999618530273px; background-color: rgb(255, 255, 255);\">：n1,n2s/p1/p2/g：将第n1至n2行中所有p1均用p2替代&nbsp;</span><br style=\"margin: 0px; padding: 0px; color: rgb(17, 17, 17); font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 13px; line-height: 23.399999618530273px; white-space: normal; background-color: rgb(255, 255, 255);\"/><span style=\"color: rgb(17, 17, 17); font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 13px; line-height: 23.399999618530273px; background-color: rgb(255, 255, 255);\">：g/p1/s//p2/g：将文件中所有p1均用p2替换&nbsp;</span><br style=\"margin: 0px; padding: 0px; color: rgb(17, 17, 17); font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 13px; line-height: 23.399999618530273px; white-space: normal; background-color: rgb(255, 255, 255);\"/><br style=\"margin: 0px; padding: 0px; color: rgb(17, 17, 17); font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 13px; line-height: 23.399999618530273px; white-space: normal; background-color: rgb(255, 255, 255);\"/><span style=\"color: rgb(17, 17, 17); font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 13px; line-height: 23.399999618530273px; background-color: rgb(255, 255, 255);\">选项设置&nbsp;</span><br style=\"margin: 0px; padding: 0px; color: rgb(17, 17, 17); font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 13px; line-height: 23.399999618530273px; white-space: normal; background-color: rgb(255, 255, 255);\"/><span style=\"color: rgb(17, 17, 17); font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 13px; line-height: 23.399999618530273px; background-color: rgb(255, 255, 255);\">all：列出所有选项设置情况&nbsp;</span><br style=\"margin: 0px; padding: 0px; color: rgb(17, 17, 17); font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 13px; line-height: 23.399999618530273px; white-space: normal; background-color: rgb(255, 255, 255);\"/><span style=\"color: rgb(17, 17, 17); font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 13px; line-height: 23.399999618530273px; background-color: rgb(255, 255, 255);\">term：设置终端类型&nbsp;</span><br style=\"margin: 0px; padding: 0px; color: rgb(17, 17, 17); font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 13px; line-height: 23.399999618530273px; white-space: normal; background-color: rgb(255, 255, 255);\"/><span style=\"color: rgb(17, 17, 17); font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 13px; line-height: 23.399999618530273px; background-color: rgb(255, 255, 255);\">ignorance：在搜索中忽略大小写&nbsp;</span><br style=\"margin: 0px; padding: 0px; color: rgb(17, 17, 17); font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 13px; line-height: 23.399999618530273px; white-space: normal; background-color: rgb(255, 255, 255);\"/><span style=\"color: rgb(17, 17, 17); font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 13px; line-height: 23.399999618530273px; background-color: rgb(255, 255, 255);\">list：显示制表位(Ctrl+I)和行尾标志（$)&nbsp;</span><br style=\"margin: 0px; padding: 0px; color: rgb(17, 17, 17); font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 13px; line-height: 23.399999618530273px; white-space: normal; background-color: rgb(255, 255, 255);\"/><span style=\"color: rgb(17, 17, 17); font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 13px; line-height: 23.399999618530273px; background-color: rgb(255, 255, 255);\">number：显示行号&nbsp;</span><br style=\"margin: 0px; padding: 0px; color: rgb(17, 17, 17); font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 13px; line-height: 23.399999618530273px; white-space: normal; background-color: rgb(255, 255, 255);\"/><span style=\"color: rgb(17, 17, 17); font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 13px; line-height: 23.399999618530273px; background-color: rgb(255, 255, 255);\">report：显示由面向行的命令修改过的数目&nbsp;</span><br style=\"margin: 0px; padding: 0px; color: rgb(17, 17, 17); font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 13px; line-height: 23.399999618530273px; white-space: normal; background-color: rgb(255, 255, 255);\"/><span style=\"color: rgb(17, 17, 17); font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 13px; line-height: 23.399999618530273px; background-color: rgb(255, 255, 255);\">terse：显示简短的警告信息&nbsp;</span><br style=\"margin: 0px; padding: 0px; color: rgb(17, 17, 17); font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 13px; line-height: 23.399999618530273px; white-space: normal; background-color: rgb(255, 255, 255);\"/><span style=\"color: rgb(17, 17, 17); font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 13px; line-height: 23.399999618530273px; background-color: rgb(255, 255, 255);\">warn：在转到别的文件时若没保存当前文件则显示NO write信息&nbsp;</span><br style=\"margin: 0px; padding: 0px; color: rgb(17, 17, 17); font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 13px; line-height: 23.399999618530273px; white-space: normal; background-color: rgb(255, 255, 255);\"/><span style=\"color: rgb(17, 17, 17); font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 13px; line-height: 23.399999618530273px; background-color: rgb(255, 255, 255);\">nomagic：允许在搜索模式中，使用前面不带“\\”的特殊字符&nbsp;</span><br style=\"margin: 0px; padding: 0px; color: rgb(17, 17, 17); font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 13px; line-height: 23.399999618530273px; white-space: normal; background-color: rgb(255, 255, 255);\"/><span style=\"color: rgb(17, 17, 17); font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 13px; line-height: 23.399999618530273px; background-color: rgb(255, 255, 255);\">nowrapscan：禁止vi在搜索到达文件两端时，又从另一端开始&nbsp;</span><br style=\"margin: 0px; padding: 0px; color: rgb(17, 17, 17); font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 13px; line-height: 23.399999618530273px; white-space: normal; background-color: rgb(255, 255, 255);\"/><span style=\"color: rgb(17, 17, 17); font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 13px; line-height: 23.399999618530273px; background-color: rgb(255, 255, 255);\">mesg：允许vi显示其他用户用write写到自己终端上的信息&nbsp;</span><br style=\"margin: 0px; padding: 0px; color: rgb(17, 17, 17); font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 13px; line-height: 23.399999618530273px; white-space: normal; background-color: rgb(255, 255, 255);\"/><br style=\"margin: 0px; padding: 0px; color: rgb(17, 17, 17); font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 13px; line-height: 23.399999618530273px; white-space: normal; background-color: rgb(255, 255, 255);\"/><span style=\"color: rgb(17, 17, 17); font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 13px; line-height: 23.399999618530273px; background-color: rgb(255, 255, 255);\">最后行方式命令&nbsp;</span><br style=\"margin: 0px; padding: 0px; color: rgb(17, 17, 17); font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 13px; line-height: 23.399999618530273px; white-space: normal; background-color: rgb(255, 255, 255);\"/><span style=\"color: rgb(17, 17, 17); font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 13px; line-height: 23.399999618530273px; background-color: rgb(255, 255, 255);\">：n1,n2 co n3：将n1行到n2行之间的内容拷贝到第n3行下&nbsp;</span><br style=\"margin: 0px; padding: 0px; color: rgb(17, 17, 17); font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 13px; line-height: 23.399999618530273px; white-space: normal; background-color: rgb(255, 255, 255);\"/><span style=\"color: rgb(17, 17, 17); font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 13px; line-height: 23.399999618530273px; background-color: rgb(255, 255, 255);\">：n1,n2 m n3：将n1行到n2行之间的内容移至到第n3行下&nbsp;</span><br style=\"margin: 0px; padding: 0px; color: rgb(17, 17, 17); font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 13px; line-height: 23.399999618530273px; white-space: normal; background-color: rgb(255, 255, 255);\"/><span style=\"color: rgb(17, 17, 17); font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 13px; line-height: 23.399999618530273px; background-color: rgb(255, 255, 255);\">：n1,n2 d ：将n1行到n2行之间的内容删除&nbsp;</span><br style=\"margin: 0px; padding: 0px; color: rgb(17, 17, 17); font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 13px; line-height: 23.399999618530273px; white-space: normal; background-color: rgb(255, 255, 255);\"/><span style=\"color: rgb(17, 17, 17); font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 13px; line-height: 23.399999618530273px; background-color: rgb(255, 255, 255);\">：w ：保存当前文件&nbsp;</span><br style=\"margin: 0px; padding: 0px; color: rgb(17, 17, 17); font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 13px; line-height: 23.399999618530273px; white-space: normal; background-color: rgb(255, 255, 255);\"/><span style=\"color: rgb(17, 17, 17); font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 13px; line-height: 23.399999618530273px; background-color: rgb(255, 255, 255);\">：e filename：打开文件filename进行编辑&nbsp;</span><br style=\"margin: 0px; padding: 0px; color: rgb(17, 17, 17); font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 13px; line-height: 23.399999618530273px; white-space: normal; background-color: rgb(255, 255, 255);\"/><span style=\"color: rgb(17, 17, 17); font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 13px; line-height: 23.399999618530273px; background-color: rgb(255, 255, 255);\">：x：保存当前文件并退出&nbsp;</span><br style=\"margin: 0px; padding: 0px; color: rgb(17, 17, 17); font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 13px; line-height: 23.399999618530273px; white-space: normal; background-color: rgb(255, 255, 255);\"/><span style=\"color: rgb(17, 17, 17); font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 13px; line-height: 23.399999618530273px; background-color: rgb(255, 255, 255);\">：q：退出vi&nbsp;</span><br style=\"margin: 0px; padding: 0px; color: rgb(17, 17, 17); font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 13px; line-height: 23.399999618530273px; white-space: normal; background-color: rgb(255, 255, 255);\"/><span style=\"color: rgb(17, 17, 17); font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 13px; line-height: 23.399999618530273px; background-color: rgb(255, 255, 255);\">：q!：不保存文件并退出vi&nbsp;</span><br style=\"margin: 0px; padding: 0px; color: rgb(17, 17, 17); font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 13px; line-height: 23.399999618530273px; white-space: normal; background-color: rgb(255, 255, 255);\"/><span style=\"color: rgb(17, 17, 17); font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 13px; line-height: 23.399999618530273px; background-color: rgb(255, 255, 255);\">：!command：执行shell命令command&nbsp;</span><br style=\"margin: 0px; padding: 0px; color: rgb(17, 17, 17); font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 13px; line-height: 23.399999618530273px; white-space: normal; background-color: rgb(255, 255, 255);\"/><span style=\"color: rgb(17, 17, 17); font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 13px; line-height: 23.399999618530273px; background-color: rgb(255, 255, 255);\">：n1,n2 w!command：将文件中n1行至n2行的内容作为command的输入并执行之，若不指定n1，n2，则表示将整个文件内容作为command的输入&nbsp;</span><br style=\"margin: 0px; padding: 0px; color: rgb(17, 17, 17); font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 13px; line-height: 23.399999618530273px; white-space: normal; background-color: rgb(255, 255, 255);\"/><span style=\"color: rgb(17, 17, 17); font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 13px; line-height: 23.399999618530273px; background-color: rgb(255, 255, 255);\">：r!command：将命令command的输出结果放到当前行&nbsp;</span><br style=\"margin: 0px; padding: 0px; color: rgb(17, 17, 17); font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 13px; line-height: 23.399999618530273px; white-space: normal; background-color: rgb(255, 255, 255);\"/><br style=\"margin: 0px; padding: 0px; color: rgb(17, 17, 17); font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 13px; line-height: 23.399999618530273px; white-space: normal; background-color: rgb(255, 255, 255);\"/><span style=\"color: rgb(17, 17, 17); font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 13px; line-height: 23.399999618530273px; background-color: rgb(255, 255, 255);\">寄存器操作&nbsp;</span><br style=\"margin: 0px; padding: 0px; color: rgb(17, 17, 17); font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 13px; line-height: 23.399999618530273px; white-space: normal; background-color: rgb(255, 255, 255);\"/><span style=\"color: rgb(17, 17, 17); font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 13px; line-height: 23.399999618530273px; background-color: rgb(255, 255, 255);\">&quot;?nyy：将当前行及其下n行的内容保存到寄存器？中，其中?为一个字母，n为一个数字&nbsp;</span><br style=\"margin: 0px; padding: 0px; color: rgb(17, 17, 17); font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 13px; line-height: 23.399999618530273px; white-space: normal; background-color: rgb(255, 255, 255);\"/><span style=\"color: rgb(17, 17, 17); font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 13px; line-height: 23.399999618530273px; background-color: rgb(255, 255, 255);\">&quot;?nyw：将当前行及其下n个字保存到寄存器？中，其中?为一个字母，n为一个数字&nbsp;</span><br style=\"margin: 0px; padding: 0px; color: rgb(17, 17, 17); font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 13px; line-height: 23.399999618530273px; white-space: normal; background-color: rgb(255, 255, 255);\"/><span style=\"color: rgb(17, 17, 17); font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 13px; line-height: 23.399999618530273px; background-color: rgb(255, 255, 255);\">&quot;?nyl：将当前行及其下n个字符保存到寄存器？中，其中?为一个字母，n为一个数字&nbsp;</span><br style=\"margin: 0px; padding: 0px; color: rgb(17, 17, 17); font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 13px; line-height: 23.399999618530273px; white-space: normal; background-color: rgb(255, 255, 255);\"/><span style=\"color: rgb(17, 17, 17); font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 13px; line-height: 23.399999618530273px; background-color: rgb(255, 255, 255);\">&quot;?p：取出寄存器？中的内容并将其放到光标位置处。这里？可以是一个字母，也可以是一个数字&nbsp;</span><br style=\"margin: 0px; padding: 0px; color: rgb(17, 17, 17); font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 13px; line-height: 23.399999618530273px; white-space: normal; background-color: rgb(255, 255, 255);\"/><span style=\"color: rgb(17, 17, 17); font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 13px; line-height: 23.399999618530273px; background-color: rgb(255, 255, 255);\">ndd：将当前行及其下共n行文本删除，并将所删内容放到1号删除寄存器中。</span></p><p><font color=\"#111111\" face=\"Verdana, Arial, Helvetica, sans-serif\" size=\"2\"><span style=\"line-height: 23.399999618530273px; background-color: rgb(255, 255, 255);\">转自：<a href=\"http://www.cnblogs.com/88999660/articles/1581524.html\" target=\"_blank\">http://www.cnblogs.com/88999660/articles/1581524.html</a></span></font></p>', '2014-05-24', 'vi操作相关命令', '34', null, null, '1', 'vi', 'vi操作', '0', '32', '0', null, null, null);
INSERT INTO `cms_article` VALUES ('45', 'black', '<ol class=\" list-paddingleft-2\" style=\"list-style-type: decimal;\"><li><p><span style=\"color: rgb(51, 51, 51); font-size: 14px; line-height: 26px; font-family: &#39;Courier New&#39;; background-color: rgb(255, 255, 255);\">机制：spring mvc的入口是servlet，而struts2是filter（这里要指出，filter和servlet是不同的。以前认为filter是servlet的一种特殊），这样就导致了二者的机制不同，</span><span style=\"color: rgb(51, 51, 51); font-size: 14px; line-height: 26px; font-family: &#39;Courier New&#39;; background-color: rgb(255, 255, 255);\">这里就牵涉到servlet和filter的区别了。</span></p></li><li><p><span style=\"color: rgb(51, 51, 51); font-size: 14px; line-height: 26px; font-family: &#39;Courier New&#39;; background-color: rgb(255, 255, 255);\"><span style=\"color: rgb(51, 51, 51); font-size: 14px; line-height: 26px; font-family: &#39;Courier New&#39;; background-color: rgb(255, 255, 255);\">性能：spring会稍微比struts快。</span><span style=\"font-size: 14px; line-height: 26px; color: rgb(255, 0, 0); font-family: &#39;Courier New&#39;; background-color: rgb(255, 255, 255);\">spring mvc是基于方法的设计</span><span style=\"color: rgb(51, 51, 51); font-size: 14px; line-height: 26px; font-family: &#39;Courier New&#39;; background-color: rgb(255, 255, 255);\">，</span><span style=\"font-size: 14px; line-height: 26px; color: rgb(255, 0, 0); font-family: &#39;Courier New&#39;; background-color: rgb(255, 255, 255);\">而sturts是基于类</span><span style=\"color: rgb(51, 51, 51); font-size: 14px; line-height: 26px; font-family: &#39;Courier New&#39;; background-color: rgb(255, 255, 255);\">，每次发一次请求都会实例一个action，每个action都会被注入属性，而spring基于方法，粒度更细，但要小心把握像在servlet控制数据一样。</span><span style=\"color: rgb(51, 51, 51); font-size: 14px; line-height: 26px; font-family: &#39;Courier New&#39;; background-color: rgb(255, 255, 255);\">spring3 mvc是方法级别的拦截，拦截到方法后根据参数上的注解，把request数据注入进去，在spring3 mvc中，一个方法对应一个request上下文。</span><span style=\"color: rgb(51, 51, 51); font-size: 14px; line-height: 26px; font-family: &#39;Courier New&#39;; background-color: rgb(255, 255, 255);\">而struts2框架是类级别的拦截，每次来了请求就创建一个Action，然后调用setter getter方法把request中的数据注入；struts2实际上是通过setter getter方法与request打交道的；struts2中，一个Action对象对应一个request上下文。</span></span></p></li><li><p><span style=\"color: rgb(51, 51, 51); font-size: 14px; line-height: 26px; font-family: &#39;Courier New&#39;; background-color: rgb(255, 255, 255);\"><span style=\"color: rgb(51, 51, 51); font-family: &#39;Courier New&#39;; font-size: 14px; line-height: 26px; background-color: rgb(255, 255, 255);\">参数传递：struts是在接受参数的时候，可以用属性来接受参数，这就说明参数是让多个方法共享的。</span></span></p></li><li><p><span style=\"color: rgb(51, 51, 51); font-size: 14px; line-height: 26px; font-family: &#39;Courier New&#39;; background-color: rgb(255, 255, 255);\"><span style=\"color: rgb(51, 51, 51); font-family: &#39;Courier New&#39;; font-size: 14px; line-height: 26px; background-color: rgb(255, 255, 255);\">设计思想上：</span><span style=\"font-family: &#39;Courier New&#39;; font-size: 14px; line-height: 26px; color: rgb(255, 0, 0); background-color: rgb(255, 255, 255);\">struts更加符合oop的编程思想</span><span style=\"color: rgb(51, 51, 51); font-family: &#39;Courier New&#39;; font-size: 14px; line-height: 26px; background-color: rgb(255, 255, 255);\">， spring就比较谨慎，在servlet上扩展。</span></span></p></li><li><p><span style=\"color: rgb(51, 51, 51); font-size: 14px; line-height: 26px; font-family: &#39;Courier New&#39;; background-color: rgb(255, 255, 255);\"><span style=\"color: rgb(51, 51, 51); font-size: 14px; line-height: 26px; font-family: &#39;Courier New&#39;; background-color: rgb(255, 255, 255);\">intercepter的实现机制：struts有以自己的interceptor机制，</span><span style=\"font-size: 14px; line-height: 26px; color: rgb(255, 0, 0); font-family: &#39;Courier New&#39;; background-color: rgb(255, 255, 255);\">spring mvc用的是独立的AOP方式</span><span style=\"color: rgb(51, 51, 51); font-size: 14px; line-height: 26px; font-family: &#39;Courier New&#39;; background-color: rgb(255, 255, 255);\">。这样导致struts的配置文件量还是比spring mvc大，虽然struts的配置能继承，所以我觉得论使用上来讲，spring mvc使用更加简洁，</span><span style=\"color: rgb(51, 51, 51); font-size: 14px; line-height: 26px; font-family: &#39;Courier New&#39;; background-color: rgb(255, 255, 255);\">开发效率Spring MVC确实比struts2高</span><span style=\"color: rgb(51, 51, 51); font-size: 14px; line-height: 26px; font-family: &#39;Courier New&#39;; background-color: rgb(255, 255, 255);\">。</span><span style=\"color: rgb(51, 51, 51); font-size: 14px; line-height: 26px; font-family: &#39;Courier New&#39;; background-color: rgb(255, 255, 255);\">spring mvc是方法级别的拦截，一个方法对应一个request上下文，而方法同时又跟一个url对应，所以说从架构本身上<span style=\"color: rgb(255, 0, 0);\">spring3 mvc就容易实现restful url</span>。</span><span style=\"color: rgb(51, 51, 51); font-size: 14px; line-height: 26px; font-family: &#39;Courier New&#39;; background-color: rgb(255, 255, 255);\">struts2是类级别的拦截，一个类对应一个request上下文；实现restful url要费劲，因为struts2 action的一个方法可以对应一个url；而其类属性却被所有方法共享，这也就无法用注解或其他方式标识其所属方法了。</span><span style=\"color: rgb(51, 51, 51); font-size: 14px; line-height: 26px; font-family: &#39;Courier New&#39;; background-color: rgb(255, 255, 255);\">spring3 mvc的方法之间基本上独立的，独享request response数据，请求数据通过参数获取，处理结果通过ModelMap交回给框架方法之间不共享变量，</span><span style=\"color: rgb(51, 51, 51); font-size: 14px; line-height: 26px; font-family: &#39;Courier New&#39;; background-color: rgb(255, 255, 255);\">而struts2搞的就比较乱，虽然方法之间也是独立的，但其所有Action变量是共享的，这不会影响程序运行，却给我们编码，读程序时带来麻烦。</span></span></p></li><li><p><span style=\"color: rgb(51, 51, 51); font-size: 14px; line-height: 26px; font-family: &#39;Courier New&#39;; background-color: rgb(255, 255, 255);\"><span style=\"color: rgb(51, 51, 51); font-size: 14px; line-height: 26px; font-family: &#39;Courier New&#39;; background-color: rgb(255, 255, 255);\">另外，spring3 mvc的验证也是一个亮点，支持JSR303，</span><span style=\"font-size: 14px; line-height: 26px; font-family: &#39;Courier New&#39;; color: rgb(255, 0, 0); background-color: rgb(255, 255, 255);\">处理ajax的请求更是方便</span><span style=\"color: rgb(51, 51, 51); font-size: 14px; line-height: 26px; font-family: &#39;Courier New&#39;; background-color: rgb(255, 255, 255);\">，只需一个注解</span><span style=\"font-size: 14px; line-height: 26px; font-family: &#39;Courier New&#39;; color: rgb(51, 51, 255); background-color: rgb(255, 255, 255);\">@ResponseBody</span><span style=\"color: rgb(51, 51, 51); font-size: 14px; line-height: 26px; font-family: &#39;Courier New&#39;; background-color: rgb(255, 255, 255);\">&nbsp;，然后直接返回响应文本即可。</span><span style=\"color: rgb(51, 51, 51); font-size: 14px; line-height: 26px; font-family: &#39;Courier New&#39;; background-color: rgb(255, 255, 255);\">送上一段代码：</span></span></p></li></ol><pre class=\"brush:java;toolbar:false\">RequestMapping(value=&quot;/whitelists&quot;)\r\npublic&nbsp;String&nbsp;index(ModelMap&nbsp;map)&nbsp;{\r\nAccount&nbsp;account&nbsp;=&nbsp;accountManager.getByDigitId(SecurityContextHolder.get().getDigitId());\r\nList&lt;Group&gt;&nbsp;groupList&nbsp;=&nbsp;groupManager.findAllGroup(account.getId());\r\nmap.put(&quot;account&quot;,&nbsp;account);\r\nmap.put(&quot;groupList&quot;,&nbsp;groupList);\r\nreturn&nbsp;&quot;/group/group-index&quot;;\r\n}\r\n\r\n//&nbsp;@ResponseBody&nbsp;ajax响应，处理Ajax请求也很方便\r\n@RequestMapping(value=&quot;/whitelist/{whiteListId}/del&quot;)\r\n@ResponseBody\r\npublic&nbsp;String&nbsp;delete(@PathVariable&nbsp;Integer&nbsp;whiteListId)&nbsp;{\r\nwhiteListManager.deleteWhiteList(whiteListId);\r\nreturn&nbsp;&quot;success&quot;;\r\n}</pre><p>转自：<a href=\"http://blog.csdn.net/ya2dan/article/details/7395458\" target=\"_blank\" title=\"springmvc与struts比较\">http://blog.csdn.net/ya2dan/article/details/7395458</a></p><p></p>', '2014-05-26', 'springmvc与struts的比较', '41', null, null, '1', 'spring,struts', 'spring mvc与strusts比较', '0', '29', '0', null, null, null);
INSERT INTO `cms_article` VALUES ('46', 'black', '<p style=\"text-indent: 2em;\">最近在看厚黑学。脸皮要厚如城墙，心要黑如煤炭，方能干大事，按照我的理解，人要想成功，那就是一个字——“贱”。不过，看了厚黑学，在看看身边的人，的确如此。</p><p style=\"text-indent: 2em;\">厚黑分3个阶段：</p><p style=\"text-indent: 2em;\">1.脸皮要厚如城墙，心要黑如煤炭；</p><p style=\"text-indent: 2em;\">2.厚而硬，黑而发亮；</p><p style=\"text-indent: 2em;\">3.厚黑而无形...有点无剑胜有剑的感觉；</p><p style=\"text-indent: 2em;\">看了过后，感觉自己第一个阶段都还没有达到，脸皮又不厚，心又不黑。厚黑学里说，这种人要能成功，那便奇了怪了。瞬间感觉整个人生都没希望了，要我把厚黑学练到第一个阶段都不太可能。哎，只能直接练最高阶段了，厚黑而无形。。厚黑的最高阶段---你厚黑，别人看不出来你厚黑，不告诉别人你厚黑..</p><p style=\"text-indent: 2em;\"><br/></p>', '2014-05-27', '', '41', null, null, '1', '厚黑', '厚黑学之我见', '0', '30', '0', '2014-06-12', null, '5');
INSERT INTO `cms_article` VALUES ('47', 'black', '<p style=\"text-indent: 2em;\">maven相比其他传统项目的几大好处，在这儿总结一下<br/></p><p style=\"text-indent: 2em;\">1.<span style=\"color: rgb(255, 0, 0);\">maven统一管理包</span>，它把你所有的包都放在一个地方，不用像比如myeclipse项目一样需要把包都放到项目下的lib下边，统一管理包，大大减小了对包的维护成本；</p><p style=\"text-indent: 2em;\">2.<span style=\"color: rgb(255, 0, 0);\">对应用包的升级方便</span>，相比传统项目，要升级一类包的时候，必须要把原来的包找出来删掉，在把新的包放进去，这样很麻烦。用maven只需要改一下pom文件中相应的版本即可；</p><p style=\"text-indent: 2em;\">3.<span style=\"color: rgb(255, 0, 0);\">开发项目不依赖与开发工具</span>，你可以随意挑选支持maven的IDE；</p><p style=\"text-indent: 2em;\">4.<span style=\"color: rgb(255, 0, 0);\">集成编译，测试，打包，发布，部署，等一条龙服务</span>；</p><p style=\"text-indent: 2em;\">5.<span style=\"color: rgb(255, 0, 0);\">拥有各种插件</span>，例如，生成api，生成测试报告，pdf报表等功能，当然你也可以自己开发插件；</p><p style=\"text-indent: 2em;\"><br/></p><p style=\"text-indent: 2em;\">先总结这些，以后想到再写。。。</p><p style=\"text-indent: 2em;\"><br/></p>', '2014-05-27', '​maven相比其他传统项目的几大好处，在这儿总结一下。。。', '29', null, null, '1', 'maven', 'maven相比传统项目的几大好处', '0', '29', '0', null, null, null);
INSERT INTO `cms_article` VALUES ('48', 'black', '<p dir=\"ltr\" style=\"text-indent: 2em;\">nginx代理tomcat的时候，tomcat获取的客户端不是客户端传过来的ip，出现这种情况的原因很明显，nginx作为代理服务器先拦截客户端发来的请求，它再以localhost的身份转发给tomcat去处理。解决办法在nginx配置中的location节点中加入以下：<br/></p><p dir=\"ltr\" style=\"text-indent: 2em;\"><span style=\"font-size: 14px; font-family: Helvetica, Tahoma, Arial, sans-serif; background-color: rgb(255, 255, 255);\">proxy_set_header Host $host;</span><br style=\"font-size: 14px; white-space: normal; font-family: Helvetica, Tahoma, Arial, sans-serif; background-color: rgb(255, 255, 255);\"/><span style=\"font-size: 14px; font-family: Helvetica, Tahoma, Arial, sans-serif; background-color: rgb(255, 255, 255);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;proxy_set_header X-Real-IP $remote_addr;</span><br style=\"font-size: 14px; white-space: normal; font-family: Helvetica, Tahoma, Arial, sans-serif; background-color: rgb(255, 255, 255);\"/><span style=\"font-size: 14px; font-family: Helvetica, Tahoma, Arial, sans-serif; background-color: rgb(255, 255, 255);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;proxy_set_header REMOTE-HOST $remote_addr;</span><br style=\"font-size: 14px; white-space: normal; font-family: Helvetica, Tahoma, Arial, sans-serif; background-color: rgb(255, 255, 255);\"/><span style=\"font-size: 14px; font-family: Helvetica, Tahoma, Arial, sans-serif; background-color: rgb(255, 255, 255);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;</span></p><p dir=\"ltr\" style=\"text-indent: 2em;\"><span style=\"font-size: 14px; font-family: Helvetica, Tahoma, Arial, sans-serif; background-color: rgb(255, 255, 255);\"><br/></span></p><p dir=\"ltr\" style=\"text-indent: 2em;\"><span style=\"font-family:Helvetica, Tahoma, Arial, sans-serif\"><span style=\"font-size: 14px; background-color: rgb(255, 255, 255);\">java可以这样获取远程ip</span></span></p><pre class=\"brush:java;toolbar:false\">public&nbsp;static&nbsp;String&nbsp;getIpAddr(HttpServletRequest&nbsp;request)&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;String&nbsp;ip&nbsp;=&nbsp;request.getHeader(&quot;x-forwarded-for&quot;);\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(ip&nbsp;==&nbsp;null&nbsp;||&nbsp;ip.length()&nbsp;==&nbsp;0&nbsp;||&nbsp;&quot;unknown&quot;.equalsIgnoreCase(ip))&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ip&nbsp;=&nbsp;request.getHeader(&quot;Proxy-Client-IP&quot;);\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(ip&nbsp;==&nbsp;null&nbsp;||&nbsp;ip.length()&nbsp;==&nbsp;0&nbsp;||&nbsp;&quot;unknown&quot;.equalsIgnoreCase(ip))&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ip&nbsp;=&nbsp;request.getHeader(&quot;WL-Proxy-Client-IP&quot;);\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(ip&nbsp;==&nbsp;null&nbsp;||&nbsp;ip.length()&nbsp;==&nbsp;0&nbsp;||&nbsp;&quot;unknown&quot;.equalsIgnoreCase(ip))&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ip&nbsp;=&nbsp;request.getRemoteAddr();\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;ip;\r\n}</pre><p dir=\"ltr\" style=\"text-indent: 2em;\"><span style=\"font-family:Helvetica, Tahoma, Arial, sans-serif\"><span style=\"font-size: 14px; background-color: rgb(255, 255, 255);\"></span></span><br/></p><p dir=\"ltr\" style=\"text-indent: 2em;\"><span style=\"font-size: 14px; font-family: Helvetica, Tahoma, Arial, sans-serif; background-color: rgb(255, 255, 255);\"><br/></span></p><p dir=\"ltr\" style=\"text-indent: 2em;\"><span style=\"font-size: 14px; font-family: Helvetica, Tahoma, Arial, sans-serif; background-color: rgb(255, 255, 255);\">OK！</span></p><p dir=\"ltr\" style=\"text-indent: 2em;\"><span style=\"font-size: 14px; font-family: Helvetica, Tahoma, Arial, sans-serif; color: rgb(255, 192, 0); background-color: rgb(255, 255, 255);\">纯属搬运</span></p><p dir=\"ltr\" style=\"text-indent: 2em;\"><span style=\"font-size: 14px; font-family: Helvetica, Tahoma, Arial, sans-serif; background-color: rgb(255, 255, 255);\"><br/></span></p><p dir=\"ltr\" style=\"text-indent: 2em;\"><span style=\"font-size: 14px; font-family: Helvetica, Tahoma, Arial, sans-serif; background-color: rgb(255, 255, 255);\"><br/></span></p>', '2014-05-28', 'nginx代理tomcat的时候，tomcat获取的客户端不是客户端传过来的ip，出现这种情况的原因很明显，nginx作为代理服务器先拦截客户端发来的请求。。。', '50', null, null, '1', 'nginx', 'nginx代理tomcat系统不能获取真实ip解决办法', '0', '29', '0', null, null, null);
INSERT INTO `cms_article` VALUES ('49', 'black', '<p>js原型链扩展一些很实用的方法：</p><pre class=\"brush:js;toolbar:false\">/**\r\n&nbsp;*&nbsp;格式化日期\r\n&nbsp;*&nbsp;@param&nbsp;format\r\n&nbsp;*&nbsp;@returns\r\n&nbsp;*/\r\nDate.prototype.format&nbsp;=&nbsp;function(format)&nbsp;{\r\n	var&nbsp;o&nbsp;=&nbsp;{\r\n		&quot;M+&quot;&nbsp;:&nbsp;this.getMonth()&nbsp;+&nbsp;1,&nbsp;//&nbsp;month\r\n		&quot;d+&quot;&nbsp;:&nbsp;this.getDate(),&nbsp;//&nbsp;day\r\n		&quot;h+&quot;&nbsp;:&nbsp;this.getHours(),&nbsp;//&nbsp;hour\r\n		&quot;m+&quot;&nbsp;:&nbsp;this.getMinutes(),&nbsp;//&nbsp;minute\r\n		&quot;s+&quot;&nbsp;:&nbsp;this.getSeconds(),&nbsp;//&nbsp;second\r\n		&quot;q+&quot;&nbsp;:&nbsp;Math.floor((this.getMonth()&nbsp;+&nbsp;3)&nbsp;/&nbsp;3),&nbsp;//&nbsp;quarter\r\n		&quot;S&quot;&nbsp;:&nbsp;this.getMilliseconds()\r\n	//&nbsp;millisecond\r\n	};\r\n\r\n	if&nbsp;(/(y+)/.test(format))&nbsp;{\r\n		format&nbsp;=&nbsp;format.replace(RegExp.$1,&nbsp;(this.getFullYear()&nbsp;+&nbsp;&quot;&quot;)\r\n				.substr(4&nbsp;-&nbsp;RegExp.$1.length));\r\n	}\r\n\r\n	for&nbsp;(&nbsp;var&nbsp;k&nbsp;in&nbsp;o)&nbsp;{\r\n		if&nbsp;(new&nbsp;RegExp(&quot;(&quot;&nbsp;+&nbsp;k&nbsp;+&nbsp;&quot;)&quot;).test(format))&nbsp;{\r\n			format&nbsp;=&nbsp;format.replace(RegExp.$1,&nbsp;RegExp.$1.length&nbsp;==&nbsp;1&nbsp;?&nbsp;o[k]\r\n					:&nbsp;(&quot;00&quot;&nbsp;+&nbsp;o[k]).substr((&quot;&quot;&nbsp;+&nbsp;o[k]).length));\r\n		}\r\n	}\r\n	return&nbsp;format;\r\n};\r\n//使用\r\nalert(new&nbsp;Date().format(&quot;yyyy-MM-dd&quot;))\r\n\r\n/**\r\n&nbsp;*&nbsp;js原型链实现replaceAll\r\n&nbsp;*/\r\nString.prototype.replaceAll&nbsp;&nbsp;=&nbsp;function(s1,s2){\r\n&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;this.replace(new&nbsp;RegExp(s1,&quot;gm&quot;),s2);\r\n};\r\n\r\n/**\r\n&nbsp;*&nbsp;js实现endWith\r\n&nbsp;*/\r\nString.prototype.endWith=function(str){\r\n	if(str==null||str==&quot;&quot;||this.length==0||str.length&gt;this.length)\r\n	&nbsp;&nbsp;return&nbsp;false;\r\n	if(this.substring(this.length-str.length)==str)\r\n	&nbsp;&nbsp;return&nbsp;true;\r\n	else\r\n	&nbsp;&nbsp;return&nbsp;false;\r\n	return&nbsp;true;\r\n}\r\n\r\n/**\r\n&nbsp;*&nbsp;js实现startWith\r\n&nbsp;*/\r\nString.prototype.startWith=function(str){\r\n	if(str==null||str==&quot;&quot;||this.length==0||str.length&gt;this.length)\r\n	&nbsp;&nbsp;return&nbsp;false;\r\n	if(this.substr(0,str.length)==str)\r\n	&nbsp;&nbsp;return&nbsp;true;\r\n	else\r\n	&nbsp;&nbsp;return&nbsp;false;\r\n	return&nbsp;true;\r\n}\r\n\r\n/**\r\n&nbsp;*&nbsp;数组扩展---根据下标删除某元素\r\n&nbsp;*/\r\nArray.prototype.del=function(n)&nbsp;{\r\n	if(n&lt;0)&nbsp;return&nbsp;this;\r\n	else\r\n		return&nbsp;this.slice(0,n).concat(this.slice(n+1,this.length));\r\n};\r\n\r\n/**\r\n&nbsp;*&nbsp;数组扩展---根据一个值删除某元素\r\n&nbsp;*/\r\nArray.prototype.delByValue=function(value)&nbsp;{\r\n	for(var&nbsp;i&nbsp;=&nbsp;0;i&lt;this.length;i++){\r\n		if(this[i]&nbsp;==&nbsp;value){\r\n			this.del(i);\r\n		}\r\n	}\r\n};\r\n\r\n/**\r\n&nbsp;*&nbsp;数组扩展判断某值知否在数组中\r\n&nbsp;*/\r\nArray.prototype.isContainsValue=function(value)&nbsp;{\r\n	for(var&nbsp;i&nbsp;in&nbsp;this){\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(this[i]==value){\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;true;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\r\n&nbsp;&nbsp;&nbsp;&nbsp;}\r\n&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;false;\r\n};\r\n\r\n/**\r\n&nbsp;*&nbsp;js阻止冒泡事件\r\n&nbsp;*/\r\nfunction&nbsp;stopPropagation(e)&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;e&nbsp;=&nbsp;e&nbsp;||&nbsp;window.event;\r\n&nbsp;&nbsp;&nbsp;&nbsp;if(e.stopPropagation)&nbsp;{&nbsp;//W3C阻止冒泡方法\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;e.stopPropagation();\r\n&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;else&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;e.cancelBubble&nbsp;=&nbsp;true;&nbsp;//IE阻止冒泡方法\r\n&nbsp;&nbsp;&nbsp;&nbsp;}\r\n}</pre><p><br/></p>', '2014-05-28', 'js原型链扩展一些很实用的方法', '20', null, null, '1', 'js', 'js扩展一些比较有用的方法', '0', '30', '0', null, null, null);
INSERT INTO `cms_article` VALUES ('50', 'green', '<p><span style=\"font-family:宋体\">&nbsp;&nbsp;&nbsp;&nbsp;好久没有写博客了，还记得去年的这个时候，自己基本一周写一篇博客来梳理自己一周的生活以及所学的东西，可现在人开始慢慢的失去了当年的那些激情，开始和大多数工作人士一样，所谓的随了现实。</span></p><p>&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"font-family:宋体\">来新公司刚好两个月了，从毕业的第一份工作的天天加班到现在工作的几乎不加班，我也不知道是迷茫的开始还是对生活的态度开始变得从容了，之前一直都不太喜欢懒散的生活，而现在的自己开始变得懒散</span> <span style=\"font-family:宋体\">，在工作上，每次领导安排任务后，我第一时间不是去想怎么完成任务，而是着手做自己的事情，不到最后</span> <span style=\"font-family:宋体\">紧急时候是不得开始动手做工作上面的事情。也许再过两年，三年，甚至更久，我和身边的很多</span> <span style=\"font-family:宋体\">朋友的差距就会形成了，我会变得毫无</span> <span style=\"font-family:宋体\">竞争力可言，当他们拿着</span>1<span style=\"font-family:宋体\">万或者</span>2<span style=\"font-family:宋体\">万的工资时，或许我还在</span>7<span style=\"font-family:宋体\">千，甚至还在为工作而发愁。</span></p><p>&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"font-family:宋体\">每当人在忙的时候，总闲着如何清闲，但是这时是拥有很强烈的安全感的，但是当自己</span> <span style=\"font-family:宋体\">长时间清闲时，自己的危机感随时产生。我不知道自己还能这样多久，或许我的迷茫是我根本不知道</span> <span style=\"font-family:宋体\">自己该做什么，自己能做什么</span> <span style=\"font-family:宋体\">，自己</span> <span style=\"font-family:宋体\">在做什么。</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"font-family:宋体\">我的同学，朋友，他们在想什么，他们在做什么，他们迷茫吗，好想和他们一起喝场酒，谈谈自己的人生，听听他们的人生，可是感觉这一切好难好难。</span></p><p>&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"font-family:宋体\">距离毕业也快一年了，毕业的之前的迷茫现在开始浮现在我的头脑里面，看着身边的同学开着各式各样的车，听着某些同学的生活经历以及各种晒，才发现生活是随着时间在拉开差距，上学的时候大家的起跑线和终点都一样，可是在毕业后，才发现我们已经输在了起跑线上面了，而且感觉我们起跑都很困难，难道我们真的差那么一截吗？</span></p><p>&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"font-family:宋体\">又到了夜深人静的时候了，今天暂时写到这儿，后面给大家谈谈我的工作经历以及</span> <span style=\"font-family:宋体\">生活。</span></p><p><br/></p>', '2014-05-28', '生活是不公平的，但你得适应它', '36', null, null, '1', '生活,迷茫,工作,第一次', '开始迷茫的生活', '0', '34', '0', null, null, null);
INSERT INTO `cms_article` VALUES ('51', 'black', '<p>后台代码：</p><pre class=\"brush:java;toolbar:false\">@RequestMapping(value=&quot;/jsonp.json&quot;)\r\n@ResponseBody\r\npublic&nbsp;JSONPObject&nbsp;getJsonp(ModelMap&nbsp;map,@RequestParam&nbsp;String&nbsp;callback){\r\n&nbsp;&nbsp;&nbsp;&nbsp;map.put(&quot;msg&quot;,&nbsp;&quot;hello,jsonp&quot;);\r\n&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;new&nbsp;JSONPObject(callback,&nbsp;map);\r\n}</pre><p>这里应用的JSONPObject为com.fasterxml.jackson.databind.util.JSONPObject</p><p><br/></p><p>前端代码：<br/></p><pre class=\"brush:js;toolbar:false\">&lt;script&nbsp;type=&quot;text/javascript&quot;&nbsp;src=&quot;http://libs.baidu.com/jquery/1.9.0/jquery.js&quot;&gt;&lt;/script&gt;\r\n&lt;script&nbsp;type=&quot;text/javascript&quot;&gt;\r\n	$(function(){\r\n		$.getJSON(&quot;http://127.0.0.1:8084/thinker/finance/jsonp.json?callback=?&quot;,\r\n			function(data){\r\n			&nbsp;&nbsp;alert(data.msg);\r\n		});\r\n	})\r\n&lt;/script&gt;</pre><p><br/></p><p><br/></p>', '2014-06-03', 'jquery springmvc实现跨域', '55', null, null, '1', '跨域,jquery,java', 'jquery springmvc实现跨域', '0', '29', '0', '2014-06-03', '5', null);
INSERT INTO `cms_article` VALUES ('52', 'black', '<p dir=\"ltr\" style=\"text-indent: 2em;\"><strong>实例说明</strong></p><p dir=\"ltr\" style=\"text-indent: 2em;\">什么是适配器（Adapter）设计模式？笔者先通过一个实际生活中的例子进行介绍。</p><p style=\"text-indent: 2em;\">例如，一般的家用电器要求的电压是 220V，有个别电器则要求使用110V 电压，这样就必须有一个能把 220V 电压转换成 110V 电压的变压器，这个变压器就是一个适配器。</p><p dir=\"ltr\" style=\"text-indent: 2em;\"><strong>关键技术</strong></p><p dir=\"ltr\" style=\"text-indent: 2em;\">适配器模式把一个类的接口变换成客户端所期待的另一种接口，从而使原本接口不匹配而无法在一起工作的两个类能够在一起工作。</p><p style=\"text-indent: 2em;\">在以下情况下可以使用适配器模式：</p><ul class=\" list-paddingleft-2\" style=\"list-style-type: disc;\"><ul class=\" list-paddingleft-2\" style=\"list-style-type: square;\"><li><p style=\"text-indent: 0em;\"><span style=\"text-indent: 2em;\">系统需要使用现有的类，而此类的接口不符合系统的要求。</span></p></li><li><p style=\"white-space: normal;\">要建立一个可以重复使用的类，用于与该类之间关联不大的一些类，包括工作中引进的类。这些基类不一定存在复杂的接口。</p></li></ul></ul><p style=\"text-indent: 2em;\">类的适配器模式使用起来有点像多重继承机制，利用接口的特性，把一些零散类组织到一起，成为一个新的类来实现调用，并且看起来像是对一个类的操作。实际上，适配器模式更多的是强调对代码的组织，而不是功能的实现。</p><p style=\"text-indent: 2em;\">用通俗的语言来说，为了方便代码的组织与模型的准确表示，该模式在组织代码中的作用是可以把一个类中的成员插到另一个类的继承子类中，从而让这个继承的子类看起来像一个新类，同时可以对父类减少依赖。</p><p style=\"text-indent: 2em;\">举一个例子，类 1：虎；类 2：鸟。</p><p style=\"text-indent: 2em;\">继承一个虎，然后用适配器模式把鸟的翅膀成员拿过来，成为一个有翅膀的虎类，故有成语“如虎添翼”。如何将翅膀成员拿过来呢？这就是适配器的作用。</p><p style=\"text-indent: 2em;\"><strong>设计过程</strong></p><ol class=\"custom_num list-paddingleft-1\"><p style=\"text-indent: 0em;\"><span style=\"text-indent: 0em;\">&nbsp;&nbsp;&nbsp;&nbsp;(1)定义适配器接口。代码如下：</span><span style=\"text-indent: 0em;\">&nbsp; </span></p><pre class=\"brush:java;toolbar:false\">public&nbsp;interface&nbsp;IAdapter&nbsp;&nbsp;&nbsp;&nbsp;\r\n//适配器接口\r\n{\r\nString&nbsp;Drive();\r\n}</pre><p style=\"text-indent: 0em;\"><span style=\"text-indent: 0em;\">&nbsp;&nbsp;&nbsp;&nbsp;(2)定义适配器类 Adapter，实现 IAdapter 接口。代码如下：</span></p><p style=\"text-indent: 0em;\"><span style=\"text-indent: 0em;\"></span></p><pre class=\"brush:java;toolbar:false\">public&nbsp;class&nbsp;Adapter&nbsp;implements&nbsp;IAdapter\r\n//适配器类\r\n{\r\npublic&nbsp;String&nbsp;Drive()\r\n{\r\nreturn&nbsp;&quot;变压器&quot;;\r\n}\r\n}</pre><p style=\"text-indent: 0em;\"><span style=\"text-indent: 0em;\">&nbsp;&nbsp;&nbsp;&nbsp;(3)定义改变适配器类，该类主要实现将变压器的电压从 110V 改变为 220V。代码如下：</span></p><p style=\"text-indent: 0em;\"><span style=\"text-indent: 0em;\"></span></p><pre class=\"brush:java;toolbar:false\">public&nbsp;class&nbsp;ChangeAdapter\r\n//改变适配器类\r\n{\r\npublic&nbsp;String&nbsp;Web(String&nbsp;str)\r\n{\r\nreturn&nbsp;str;\r\n}\r\n}</pre><p style=\"text-indent: 0em;\"><span style=\"text-indent: 0em;\">&nbsp;&nbsp;&nbsp;&nbsp;(4)定义输出电压为 110V 的变压器类。代码如下：</span></p><pre class=\"brush:java;toolbar:false\">public&nbsp;class&nbsp;CClass&nbsp;extends&nbsp;ChangeAdapter&nbsp;implements&nbsp;IAdapter\r\n//实现类适配器\r\n{\r\npublic&nbsp;String&nbsp;Drive()\r\n{\r\nreturn&nbsp;this.Web(&quot;（1）输出电压：110V&quot;);\r\n}\r\n}</pre><p style=\"text-indent: 0em;\"><span style=\"text-indent: 0em;\">&nbsp;&nbsp;&nbsp;&nbsp;(5)定义输出电压为 220V 的变压器类。代码如下：</span></p><p style=\"text-indent: 0em;\"><span style=\"text-indent: 0em;\"></span></p><pre class=\"brush:java;toolbar:false\">public&nbsp;class&nbsp;CObject&nbsp;implements&nbsp;IAdapter&nbsp;&nbsp;&nbsp;&nbsp;\r\n//实现对象适配器\r\n{\r\nprivate&nbsp;ChangeAdapter&nbsp;changeAdapter;\r\npublic&nbsp;CObject()\r\n{\r\nchangeAdapter&nbsp;=&nbsp;new&nbsp;ChangeAdapter();\r\n}\r\npublic&nbsp;String&nbsp;Drive()\r\n{\r\nreturn&nbsp;changeAdapter.Web(&quot;（2）输出电压：220V&quot;);\r\n}\r\n}</pre><p style=\"text-indent: 0em;\"><span style=\"text-indent: 0em;\"></span><br/></p><p style=\"text-indent: 0em;\"><span style=\"text-indent: 0em;\">&nbsp;&nbsp;&nbsp;&nbsp;(6)在 main()方法中使用变压器将 110V 的电压变压为 220V。代码如下：</span></p><p style=\"text-indent: 0em;\"><span style=\"text-indent: 0em;\"></span></p><pre class=\"brush:java;toolbar:false\">class&nbsp;Program&nbsp;&nbsp;&nbsp;&nbsp;\r\n{\r\npublic&nbsp;static&nbsp;void&nbsp;main(String[]&nbsp;args)\r\n{\r\nIAdapter&nbsp;dap&nbsp;=&nbsp;new&nbsp;Adapter();\r\nSystem.out.println((dap.Drive()));\r\ndap&nbsp;=&nbsp;new&nbsp;CClass();\r\n//调用第一个适配器\r\nSystem.out.println((dap.Drive()));\r\ndap&nbsp;=&nbsp;new&nbsp;CObject();\r\n//调用第二个适配器\r\nSystem.out.println((dap.Drive()));\r\n}\r\n}</pre><p style=\"text-indent: 0em;\"><span style=\"text-indent: 0em;\"></span><strong>&nbsp;&nbsp;&nbsp;&nbsp;秘笈心法</strong></p></ol>', '2014-06-06', '例如，一般的家用电器要求的电压是 220V，有个别电器则要求使用\r\n110V 电压，这样就必须有一个能把 220V 电压转换成 110V 电压的变压器，\r\n这个变压器就是一个适配器。', '27', null, null, '1', '设计模式', '设计模式-接口型模式-适配器模式', '0', '29', '0', '2014-06-06', '5', '5');
INSERT INTO `cms_article` VALUES ('53', 'black', '<p><strong>实例说明</strong></p><p style=\"text-indent: 2em;\">什么是外观（Facade）模式？笔者先通过一个实际生活中的例子进行介绍。</p><p style=\"text-indent: 2em;\">例如，打开电脑时，在电脑的内部需要执行以下几步，即启动电源、主板、硬盘，最后启动操作系统；关闭电脑时需要执行的步骤与之正好相反。</p><p><strong style=\"white-space: normal;\">实例说明</strong></p><p style=\"text-indent: 2em;\">下面详细介绍外观模式的意图、动机和适用性。</p><p>（1）意图</p><p style=\"text-indent: 2em;\"><span style=\"text-indent: 2em;\">为子系统中的一组接口提供一个一致的界面。此模式定义了一个高层接口，</span><span style=\"text-indent: 2em;\">该接口使得这一子系统更易使用。</span></p><p>（2）动机</p><p style=\"text-indent: 2em;\">将一个系统划分为若干个子系统有利于降低系统的复杂性。在实际开发中，一种比较常见的设计目标是使子系统间的通信和相互依赖关系达到最小。达到该目标的途径之一就是引入一个外观对象，为各个子系统提供一个单一而简单的界面。</p><p>（3）适用性</p><p>在以下情况下可以使用外观模式:</p><ul class=\" list-paddingleft-2\" style=\"list-style-type: disc;\"><li><p>要为一个复杂子系统提供一个简单接口时。子系统往往因为不断演化而变得越来越复杂。大多数模式使用时都会产生更多更小的类，这使得子系统更具可重用性，也更容易对子系统进行定制，但这也给那些不需要定制子系统的用户带来一些使用上的困难。Facade 可以提供一个简单的默认视图，这一视图对大多数用户来说已经足够，而那些需要更多可定制性的用户可以越过Facade 层。</p></li><li><p>客户程序与抽象类的实现部分之间存在着很大的依赖性。引入 Facade 将这个子系统与客户以及其他的子系统分离，可以提高子系统的独立性和可移植性。</p></li><li><p>当需要构建一个层次结构的子系统时，可以使用 Facade 模式定义子系统中每层的入口点。如果子系统之间是相互依赖的，可以让它们仅通过 Facade 进行通信，从而简化它们之间的依赖关系。</p></li></ul><p><strong>设计过程</strong></p><p>（1）定义电源类 Power，并实现启动电源和关闭电源的方法。代码如下：</p><pre class=\"brush:java;toolbar:false\">public&nbsp;class&nbsp;Power&nbsp;{\r\n	public&nbsp;void&nbsp;Connect()&nbsp;{\r\n		System.out.println(&quot;Power&nbsp;Connect&quot;);\r\n	}\r\n\r\n	public&nbsp;void&nbsp;Disconnect()&nbsp;{\r\n		System.out.println(&quot;Power&nbsp;Disconnect&quot;);\r\n	}\r\n}</pre><p>（2）定义主板类 MainBoard。代码如下：</p><pre class=\"brush:java;toolbar:false\">public&nbsp;class&nbsp;MainBoard\r\n//&nbsp;主板\r\n{\r\n	public&nbsp;void&nbsp;On()&nbsp;{\r\n		System.out.println(&quot;MainBoard&nbsp;On&quot;);\r\n	}\r\n\r\n	public&nbsp;void&nbsp;Off()&nbsp;{\r\n		System.out.println(&quot;MainBoard&nbsp;Off&quot;);\r\n	}\r\n}</pre><p>（3）定义硬盘类 HardDisk。代码如下：</p><pre class=\"brush:java;toolbar:false\">public&nbsp;class&nbsp;HardDisk\r\n//&nbsp;硬盘\r\n{\r\n	public&nbsp;void&nbsp;Run()&nbsp;{\r\n		System.out.println(&quot;HardDisk&nbsp;Run&quot;);\r\n	}\r\n\r\n	public&nbsp;void&nbsp;Stop()&nbsp;{\r\n		System.out.println(&quot;HardDisk&nbsp;Stop&quot;);\r\n	}\r\n}</pre><p>（4）定义操作系统类 OperateionSystem。代码如下：</p><pre class=\"brush:java;toolbar:false\">public&nbsp;class&nbsp;OperateionSystem\r\n//&nbsp;操作系统\r\n{\r\n	public&nbsp;void&nbsp;Startup()&nbsp;{\r\n		System.out.println(&quot;OperateionSystem&nbsp;Startup&quot;);\r\n	}\r\n\r\n	public&nbsp;void&nbsp;Shutdown()&nbsp;{\r\n		System.out.println(&quot;OperateionSystem&nbsp;Shutdown&quot;);\r\n	}\r\n}</pre><p>（5）定义计算机类 Computer，并实现打开电脑和关闭电脑的方法。代码如下：</p><pre class=\"brush:java;toolbar:false\">public&nbsp;class&nbsp;Computer&nbsp;{\r\n	Power&nbsp;power;\r\n	MainBoard&nbsp;mainBoard;\r\n	HardDisk&nbsp;hardDisk;\r\n	OperateionSystem&nbsp;operateionSystem;\r\n\r\n	public&nbsp;Computer(Power&nbsp;power,&nbsp;MainBoard&nbsp;mainBoard,&nbsp;HardDisk&nbsp;hardDisk,\r\n			OperateionSystem&nbsp;operateionSystem)&nbsp;{\r\n		this.power&nbsp;=&nbsp;power;\r\n		this.mainBoard&nbsp;=&nbsp;mainBoard;\r\n		this.hardDisk&nbsp;=&nbsp;hardDisk;\r\n		this.operateionSystem&nbsp;=&nbsp;operateionSystem;\r\n	}\r\n\r\n	public&nbsp;void&nbsp;Startup()\r\n	//&nbsp;启动计算机\r\n	{\r\n		this.power.Connect();\r\n		this.mainBoard.On();\r\n		this.hardDisk.Run();\r\n		this.operateionSystem.Startup();\r\n	}\r\n\r\n	public&nbsp;void&nbsp;Shutdown()\r\n	//&nbsp;关闭计算机\r\n	{\r\n		this.operateionSystem.Shutdown();\r\n		this.hardDisk.Stop();\r\n		this.mainBoard.Off();\r\n		this.power.Disconnect();\r\n	}\r\n}</pre><p>（6）在 main()方法中，分别创建电源、主板、硬盘、操作系统及计算机类的实例，然后执行打开电脑和关闭电脑的操作。代码如下：</p><pre class=\"brush:java;toolbar:false\">public&nbsp;class&nbsp;Program&nbsp;{\r\n	public&nbsp;static&nbsp;void&nbsp;main(String[]&nbsp;args)&nbsp;{\r\n		Power&nbsp;power&nbsp;=&nbsp;new&nbsp;Power();\r\n		//&nbsp;创建电源对象\r\n		MainBoard&nbsp;mainBoard&nbsp;=&nbsp;new&nbsp;MainBoard();\r\n		//&nbsp;创建主板对象\r\n		HardDisk&nbsp;hardDisk&nbsp;=&nbsp;new&nbsp;HardDisk();\r\n		//&nbsp;创建硬盘对象\r\n		OperateionSystem&nbsp;operationSystem&nbsp;=&nbsp;new&nbsp;OperateionSystem();\r\n		//&nbsp;创建操作系统对象\r\n		Computer&nbsp;computer&nbsp;=&nbsp;new&nbsp;Computer(power,&nbsp;mainBoard,&nbsp;hardDisk,\r\n				operationSystem);\r\n		//&nbsp;创建计算机对象\r\n		computer.Startup();\r\n		//&nbsp;启动电脑\r\n		System.out.println(&quot;关闭电脑&quot;);\r\n		computer.Shutdown();\r\n		//&nbsp;关闭电脑\r\n	}\r\n}</pre>', '2014-06-06', '用户要打开电脑，首先得启动电源，接着启动主板，然后启动硬盘，最后启动操作系统。', '20', null, null, '1', '设计模式', '设计模式-接口型模式-外观模式', '0', '29', '0', '2014-06-06', '5', '5');
INSERT INTO `cms_article` VALUES ('54', 'black', '<p><strong>实例说明</strong></p><p>组合（Composite）模式有时又称部分－整体模式，它将对象组织到树形结构中，可以用来描述整体与部分的关系。组合模式可以使客户端将单纯元素与复合元素同等看待。文件夹与文件就是组合模式的典型应用。</p><p><strong>关键技术</strong></p><p>根据所实现接口的不同，组合模式可分为两种，即透明模式和安全模式。组合模式可以不提供父对象的管理方法，但它必须在合适的地方提供子对象的管理方法（例如 Add()方法、Remove()方法等）。</p><ul class=\" list-paddingleft-2\" style=\"list-style-type: disc;\"><li><p>透明模式</p></li></ul><p style=\"text-indent: 2em;\">在组合结构中声明所有用来管理子类对象的方法，包括 Add()方法和 Remove()方法。这样做的好处是所有的构件类都有相同的接口。在客户端看来，树叶类对象与组合类对象的区别起码在接口层次上消失了，客户端可以等同地对待所有对象。这就是透明形式的组合模式。</p><p style=\"text-indent: 2em;\">透明模式的缺点是不够安全，因为树叶类对象和组合类对象在本质上是有所区别的。树叶类对象不可能有下一个层次的对象，因此 Add()方法、Remove()方法没有意义，但在编译时不会出错，而只会在运行时才会出错。</p><ul class=\" list-paddingleft-2\" style=\"list-style-type: disc;\"><li><p style=\"text-indent: 0em;\">安全模式</p></li></ul><p style=\"text-indent: 2em;\">在组合结构类中声明所有用来管理子类对象的方法。这样做比较安全，因为树叶类型的对象根本就没有管理子类对象的方法，因此如果客户端对树叶类对象使用这些方法，程序会在编译时出错。</p><p style=\"text-indent: 2em;\">安全模式的缺点是不够透明，因为树叶类和组合类将具有不同的接口。</p><p style=\"text-indent: 2em;\">这两种形式各有优缺点，需要根据软件的具体情况作出取舍决定。</p><p style=\"text-indent: 0em;\"><strong>设计过程</strong></p><p style=\"text-indent: 0em;\">（1）定义一个抽象类 AComponent，并声明相关接口。代码如下：</p><pre class=\"brush:java;toolbar:false\">public&nbsp;abstract&nbsp;class&nbsp;AComponent&nbsp;{\r\n	protected&nbsp;String&nbsp;name;\r\n\r\n	public&nbsp;AComponent(String&nbsp;name)&nbsp;{\r\n		System.out.println(name);\r\n	}\r\n\r\n	abstract&nbsp;public&nbsp;void&nbsp;Add(AComponent&nbsp;c);\r\n\r\n	//&nbsp;添加节点\r\n	abstract&nbsp;public&nbsp;void&nbsp;Remove(AComponent&nbsp;c);\r\n\r\n	//&nbsp;移除节点\r\n	abstract&nbsp;public&nbsp;void&nbsp;Display(int&nbsp;AComponent);\r\n	//&nbsp;输出节点结构\r\n}</pre><p>（2）定义一个类 Composite，继承抽象类 AComponent，该类用来实现组合设计模式的核心功能（本例为组合树状结构的子节点）。代码如下</p><pre class=\"brush:java;toolbar:false\">public&nbsp;class&nbsp;Composite&nbsp;extends&nbsp;AComponent&nbsp;{\r\n	static&nbsp;AComponent&nbsp;component;\r\n	private&nbsp;ArrayList&nbsp;children&nbsp;=&nbsp;new&nbsp;ArrayList();\r\n\r\n	public&nbsp;Composite(String&nbsp;name)&nbsp;{\r\n		super(name);\r\n	}\r\n\r\n	public&nbsp;void&nbsp;Add(AComponent&nbsp;component)&nbsp;{\r\n		this.component&nbsp;=&nbsp;component;\r\n		children.add(component);\r\n	}\r\n\r\n	public&nbsp;void&nbsp;Remove(AComponent&nbsp;component)&nbsp;{\r\n		children.remove(component);\r\n	}\r\n\r\n	public&nbsp;void&nbsp;Display(int&nbsp;i)&nbsp;{\r\n		Iterator&nbsp;iter&nbsp;=&nbsp;children.iterator();\r\n		AComponent&nbsp;ac&nbsp;=&nbsp;null;\r\n		ac&nbsp;=&nbsp;(AComponent)&nbsp;iter.next();\r\n		while&nbsp;(iter.hasNext()&nbsp;&amp;&amp;&nbsp;iter.next().equals(null))&nbsp;{\r\n			System.out.println(ac.name);\r\n		}\r\n	}\r\n}</pre><p>（3）定义一个类 Leaf，用来向树状结构中添加子项。代码如下：</p><pre class=\"brush:java;toolbar:false\">public&nbsp;class&nbsp;Leaf&nbsp;extends&nbsp;AComponent&nbsp;{\r\n	public&nbsp;Leaf(String&nbsp;name)&nbsp;{\r\n		super(name);\r\n	}\r\n\r\n	public&nbsp;void&nbsp;Add(AComponent&nbsp;c)&nbsp;{\r\n		System.out.println(&quot;不能添加子项！&quot;);\r\n	}\r\n\r\n	public&nbsp;void&nbsp;Remove(AComponent&nbsp;c)&nbsp;{\r\n		System.out.println(&quot;不能移出子项！&quot;);\r\n	}\r\n\r\n	public&nbsp;void&nbsp;Display(int&nbsp;AComponent)&nbsp;{\r\n		System.out.println(new&nbsp;String()&nbsp;+&nbsp;name);\r\n	}\r\n}</pre><p style=\"margin-top: 5px;\">（4）在 main()方法中利用透明形式的组合模式生成一个树状结构，实现代码如下：<br/></p><pre class=\"brush:java;toolbar:false\">public&nbsp;class&nbsp;Program&nbsp;{\r\n	public&nbsp;static&nbsp;void&nbsp;main(String[]&nbsp;args)&nbsp;{\r\n		//&nbsp;建立一个树形结构\r\n		Composite&nbsp;root&nbsp;=&nbsp;new&nbsp;Composite(&quot;根目录&quot;);\r\n		//&nbsp;创建一个根元素（根元素也是复合元素）\r\n		root.Add(new&nbsp;Leaf(&quot;----子项&nbsp;A&quot;));\r\n		root.Add(new&nbsp;Leaf(&quot;----子项&nbsp;B&quot;));\r\n		Composite&nbsp;comp&nbsp;=&nbsp;new&nbsp;Composite(&quot;组合&nbsp;X&quot;);\r\n		//&nbsp;创建一个复合元素\r\n		comp.Add(new&nbsp;Leaf(&quot;---子项&nbsp;XA&quot;));\r\n		//&nbsp;为复合元素添加单纯元素\r\n		comp.Add(new&nbsp;Leaf(&quot;---子项&nbsp;XB&quot;));\r\n		root.Add(comp);\r\n		//&nbsp;将复合元素添加到根元素\r\n		root.Add(new&nbsp;Leaf(&quot;--子项&nbsp;C&quot;));\r\n		//&nbsp;将单纯元素添加到根元素\r\n		//&nbsp;添加和移出一个子项\r\n		Leaf&nbsp;l&nbsp;=&nbsp;new&nbsp;Leaf(&quot;--子项&nbsp;D&quot;);\r\n		root.Add(l);\r\n		root.Remove(l);\r\n		//&nbsp;递归输出子节点\r\n		root.Display(1);\r\n	}\r\n}</pre><p><strong><br/></strong><br/></p>', '2014-06-06', '组合（Composite）模式有时又称部分－整体模式，它将对象组织到树形结构中，可以用来描述整体与部分的关系。组合模式可以使客户端将单纯元素与复合元素同等看待。文件夹与文件就是组合模式的典型应用', '13', null, null, '1', '设计模式', '设计模式-接口型模式-组合模式', '0', '29', '0', '2014-06-06', '5', null);
INSERT INTO `cms_article` VALUES ('55', 'black', '<p><strong>实例说明</strong></p><p>什么是桥接设计模式，笔者先通过一个实际生活中的例子进行介绍。<strong><br/></strong></p><p>通讯录和游戏是每款手机必备的软件，假设手机品牌 A 和品牌 B 中都包含这两款软件，如果这两款手机中又增加了计算器软件或再增加一款品牌为 C 的手机，每次变化都需要添加许多类，而且越往后需要添加的类就越多，按照此种状况发展下去，就会出现类爆炸（增长为不可控制的庞然大物）。</p><p><strong>关键技术</strong></p><p style=\"text-indent: 2em;\">在面向对象的设计中，有一个很重要的设计原则，那就是合成/聚合复用原则，即设计类的层次结构时优先使用对象合成/聚合，而不是类继承。</p><p style=\"text-indent: 2em;\">合成（Composition，也可称为组合）和聚合（Aggregation）都是关联的特殊类型。合成是一种强的“拥有”关系，体现了严格的部分和整体的关系，部分和整体的生命周期一样；聚合表示弱的“拥有”关系，体现的是A 对象可以包含 B 对象，但 B 对象不是 A 对象的一部分。</p><p> 说明：例如，一个类中包含一个子类，类和子类之间便是合成关系；两个互不包含的平行类，但一个类中</p><p>的数据成员引用另一个类的类型，那么这两个类之间是聚合关系。</p><p style=\"text-indent: 2em;\">合成/聚合复用原则的好处是：优先使用对象的合成/聚合将有助于保持每个类被封装，并被集中在单个任务上。这样类和类继承层次会保持较小规模，并且不太可能出现类爆炸。本实例中对象有“手机品牌”和“手机软件”两个职责，首先分别定义“手机品牌”和“手机软件”两个抽象类，让不同的品牌和功能分别继承于它们，这样要增加新的品牌或新的功能就不用影响其他类了。最后还要确认手机品牌和手机软件的关系，手机品牌包含有手机软件，但软件并不是品牌的一部分，所以它们之间是聚合关系。</p><p style=\"text-indent: 2em;\"><br/></p><p style=\"text-align:center\"><img src=\"/upload/20140606/30771402043252030.png\" title=\"QQ截图20140606162722.png\"/></p><p style=\"text-indent: 2em;\"><strong><br/></strong><strong>设计过程</strong></p><p style=\"text-indent: 0em; text-align: left;\">（1）定义手机软件的抽象类。代码如下：<strong><br/></strong></p><pre class=\"brush:java;toolbar:false\">public&nbsp;abstract&nbsp;class&nbsp;HandsetSoft\r\n//&nbsp;手机软件抽象类\r\n{\r\n	public&nbsp;abstract&nbsp;void&nbsp;Run();\r\n}</pre><p style=\"text-indent: 0em; text-align: left;\">（2）定义游戏、通讯录的具体类，继承 HandsetSoft 类，然后实现 Run()方法。代码如下：</p><pre class=\"brush:java;toolbar:false\">public&nbsp;class&nbsp;HandsetGame&nbsp;extends&nbsp;HandsetSoft\r\n//&nbsp;手机游戏\r\n{\r\n	public&nbsp;void&nbsp;Run()&nbsp;{\r\n		System.out.println(&quot;运行手机游戏&quot;);\r\n	}\r\n}\r\n\r\npublic&nbsp;class&nbsp;HandsetAddressList&nbsp;extends&nbsp;HandsetSoft&nbsp;//&nbsp;手机通讯录\r\n{\r\n	public&nbsp;void&nbsp;Run()&nbsp;{\r\n		System.out.println(&quot;打开手机通讯录&quot;);\r\n	}\r\n}</pre><p style=\"text-indent: 0em; text-align: left;\">（3）定义手机品牌的抽象类，其中聚合手机软件抽象类。代码如下：</p><pre class=\"brush:java;toolbar:false\">public&nbsp;abstract&nbsp;class&nbsp;HandsetBrand\r\n//&nbsp;手机品牌\r\n{\r\n	protected&nbsp;HandsetSoft&nbsp;soft;\r\n\r\n	//&nbsp;设置手机软件\r\n	public&nbsp;void&nbsp;SetHandsetSoft(HandsetSoft&nbsp;soft)&nbsp;{\r\n		this.soft&nbsp;=&nbsp;soft;\r\n	}\r\n\r\n	public&nbsp;abstract&nbsp;void&nbsp;Run();\r\n}</pre><p style=\"text-indent: 0em; text-align: left;\">（4）定义手机品牌 A、手机品牌 B 的具体类，继承 HandsetBrand 类，然后实现 Run()方法。代码如下：</p><pre class=\"brush:java;toolbar:false\">public&nbsp;class&nbsp;HandsetBrandA&nbsp;extends&nbsp;HandsetBrand\r\n//&nbsp;手机品牌&nbsp;A\r\n{\r\n	public&nbsp;void&nbsp;Run()&nbsp;{\r\n		soft.Run();\r\n	}\r\n}\r\n\r\npublic&nbsp;class&nbsp;HandsetBrandB&nbsp;extends&nbsp;HandsetBrand\r\n//&nbsp;手机品牌&nbsp;B\r\n{\r\n	public&nbsp;void&nbsp;Run()&nbsp;{\r\n		soft.Run();\r\n	}\r\n}</pre><p>（5）在 main()方法中应用桥接模式，分别运行品牌 A 和品牌 B 中的通讯录和游戏。代码如下</p><pre class=\"brush:java;toolbar:false\">public&nbsp;class&nbsp;Program&nbsp;{\r\n	public&nbsp;static&nbsp;void&nbsp;main(String[]&nbsp;args)&nbsp;{\r\n		HandsetBrand&nbsp;hb;\r\n		hb&nbsp;=&nbsp;new&nbsp;HandsetBrandA();\r\n		hb.SetHandsetSoft(new&nbsp;HandsetAddressList());\r\n		hb.Run();\r\n		hb.SetHandsetSoft(new&nbsp;HandsetGame());\r\n		hb.Run();\r\n		hb&nbsp;=&nbsp;new&nbsp;HandsetBrandB();\r\n		hb.SetHandsetSoft(new&nbsp;HandsetAddressList());\r\n		hb.Run();\r\n		hb.SetHandsetSoft(new&nbsp;HandsetGame());\r\n		hb.Run();\r\n	}\r\n}</pre><p><br/></p>', '2014-06-06', '通讯录和游戏是每款手机必备的软件，假设手机品牌 A 和品牌 B 中都包含这两款软件，类的继承结构通常。。。', '11', null, null, '1', '设计模式', '设计模式-接口型模式-桥接模式', '0', '29', '0', '2014-06-06', '5', null);
INSERT INTO `cms_article` VALUES ('56', 'black', '<p><strong>实例说明</strong></p><p>在某种程度上，单例（Singleton）模式是限制而不是改进类的创建。单例模式可以保证一个类有且只有一个实例，并提供一个访问它的全局访问点。在程序设计过程中，有很多情况需要保证一个类只有一个实例。</p><p>单例模式的特点：</p><ul class=\" list-paddingleft-2\" style=\"list-style-type: disc;\"><li><p>单例类只能有一个实例。</p></li><li><p>单例类必须自己创建其唯一实例。</p></li><li><p>单例类必须给所有其他对象提供这一实例</p></li></ul><p>使用单例模式需要注意以下几点：</p><ul class=\" list-paddingleft-2\" style=\"list-style-type: disc;\"><li><p>使用 Singleton 模式有一个必要条件，即在一个系统要求一个类只有一个实例时才应当使用单例模式；反过来，如果一个类可以有几个实例共存，就不要使用单例模式。</p></li><li><p>不要使用单例模式存取全局变量。这违背了单例模式的用意，最好放到对应类的静态成员中。</p></li><li><p>不要将数据库连接做成单例，因为一个系统可能会与数据库有多个连接，并且在有连接池的情况下，应当尽可能及时释放连接。Singleton 模式由于使用静态成员存储类实例，所以可能会造成资源无法及时释放的问题。</p></li></ul><p>本实例中实现服务器负载均衡的功能时应用了单例模式，以保证每次都使用唯一的任务分配实例挑选服务器并分配任务。</p><p><strong>关键技术</strong></p><p>（1）在 LoadBalancer 类中创建一个类型为 LoadBalancer 的静态变量 Balancer，代码如下：</p><pre class=\"brush:java;toolbar:false\">private&nbsp;static&nbsp;LoadBalancer&nbsp;Balancer;</pre><p>（2）在 LoadBalancer 类中创建一个返回类型为 LoadBalancer 引用类型的静态方法 GetLoadBalancer()，在该方法中，首先判断静态变量 Balancer 是否为空。如果为空，调用 LoadBalancer 类的构造函数创建 LoadBalancer类的实例对象；如果静态变量 Balancer 不为空，则在方法中直接返回该变量。代码如下：</p><pre class=\"brush:java;toolbar:false\">public&nbsp;static&nbsp;synchronized&nbsp;LoadBalancer&nbsp;GetLoadBalancer()\r\n{\r\nif&nbsp;(Balancer==null)\r\nBalancer&nbsp;=&nbsp;new&nbsp;LoadBalancer();\r\nreturn&nbsp;Balancer;\r\n}</pre><p>（3）隐藏 LoadBalancer 类的构造函数，即将构造函数的成员访问修饰符更改为 protected，强制用户只能通过 GetLoadBalancer()方法这个唯一的入口创建 LoadBalancer 类的实例对象。代码如下：</p><pre class=\"brush:java;toolbar:false\">protected&nbsp;LoadBalancer()\r\n//构造函数\r\n{\r\nArrayList_Server.add(&quot;服务器&nbsp;I&quot;);\r\nArrayList_Server.add(&quot;服务器&nbsp;II&quot;);\r\nArrayList_Server.add(&quot;服务器&nbsp;III&quot;);\r\nArrayList_Server.add(&quot;服务器&nbsp;IV&quot;);\r\nArrayList_Server.add(&quot;服务器&nbsp;V&quot;);\r\n}</pre><p><strong>设计过程</strong></p><p>下面利用 Singleton 模式实现负载均衡实例对象。在负载均衡模型中，有多台服务器可提供服务，任务分配器随机挑选一台服务器提供服务，以确保任务均衡（实际情况比这个复杂得多）。这里，任务分配实例只能有一个，负责挑选服务器并分配任务。</p><p>程序主要代码如下：</p><pre class=\"brush:java;toolbar:false\">import&nbsp;java.util.*;\r\nclass&nbsp;LoadBalancer\r\n{\r\nprivate&nbsp;static&nbsp;LoadBalancer&nbsp;Balancer;\r\nprivate&nbsp;ArrayList&nbsp;ArrayList_Server&nbsp;=&nbsp;new&nbsp;ArrayList();\r\nprivate&nbsp;Random&nbsp;random&nbsp;=&nbsp;new&nbsp;Random();\r\nprotected&nbsp;LoadBalancer()\r\n//构造函数\r\n{\r\nArrayList_Server.add(&quot;服务器&nbsp;I&quot;);\r\nArrayList_Server.add(&quot;服务器&nbsp;II&quot;);\r\nArrayList_Server.add(&quot;服务器&nbsp;III&quot;);\r\nArrayList_Server.add(&quot;服务器&nbsp;IV&quot;);\r\nArrayList_Server.add(&quot;服务器&nbsp;V&quot;);\r\n}\r\n//创建实例的唯一入口\r\npublic&nbsp;static&nbsp;synchronized&nbsp;LoadBalancer&nbsp;GetLoadBalancer()\r\n{\r\nif&nbsp;(Balancer==null)\r\nBalancer&nbsp;=&nbsp;new&nbsp;LoadBalancer();\r\nreturn&nbsp;Balancer;\r\n}\r\npublic&nbsp;String&nbsp;Server()\r\n{\r\nObject&nbsp;array[]&nbsp;=&nbsp;ArrayList_Server.toArray();\r\nreturn&nbsp;array[random.nextInt(array.length)].toString();\r\n}\r\n}\r\npublic&nbsp;class&nbsp;SingletonApp\r\n{\r\npublic&nbsp;static&nbsp;void&nbsp;main(String[]&nbsp;args)\r\n{\r\nLoadBalancer&nbsp;b1&nbsp;=&nbsp;LoadBalancer.GetLoadBalancer();\r\n//创建类的实例\r\nLoadBalancer&nbsp;b2&nbsp;=&nbsp;LoadBalancer.GetLoadBalancer();\r\nLoadBalancer&nbsp;b3&nbsp;=&nbsp;LoadBalancer.GetLoadBalancer();\r\nLoadBalancer&nbsp;b4&nbsp;=&nbsp;LoadBalancer.GetLoadBalancer();\r\nif&nbsp;((b1&nbsp;==&nbsp;b2)&nbsp;&amp;&amp;&nbsp;(b2&nbsp;==&nbsp;b3)&nbsp;&amp;&amp;&nbsp;(b3&nbsp;==&nbsp;b4))\r\n//判断实例是否相同\r\nSystem.out.println(&quot;同步运行相同的实例对象&quot;);\r\nSystem.out.println(b1.Server());\r\nSystem.out.println(b2.Server());\r\nSystem.out.println(b3.Server());\r\nSystem.out.println(b4.Server());\r\n}\r\n}</pre><p><br/></p><p><strong><br/></strong><br/></p>', '2014-06-06', '在某种程度上，单例（Singleton）模式是限制而不是改进类的创建。单例模式可以保证一个类有且只有一个实例，并提供一个访问它的全局访问点。在程序设计过程中，有很多情况需要保证一个类只有一个实例。', '14', null, null, '1', '设计模式', '设计模式-责任型模式-单例模式', '0', '29', '0', '2014-06-06', '5', null);
INSERT INTO `cms_article` VALUES ('57', 'black', '<p><strong>实例说明</strong></p><p>建造者（Builder）模式可以将一个产品的内部表象与产品的生成过程分割开来，从而可以使一个建造过程生成具有不同内部表象的产品对象。</p><p>建造者模式的性质：</p><p>&nbsp;&nbsp;&nbsp;&nbsp;1.一个对象都会有一些比较重要的性质，在它们没有恰当的值之前，对象不能作为一个完整的产品使用。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;例如，一个 Email 有发件人地址、收件人地址、主题、内容和附件等部分，如果收件人地址未被赋值，那么这个 Email 是不能发出的。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;2.一个对象的一些性质必须按照某个顺序赋值才有意义。在某个性质没有赋值之前，另一个性质无法赋值，这样性质本身的建造涉及到复杂的商业逻辑。</p><p>因此，对象相当于一个待建造的产品，而对象的这些性质相当于产品的零件，建造产品的过程就是组合零</p><p>件的过程。由于组合零件的过程很复杂，因此这些“零件”的组合过程往往被“外部化”到一个称为建造者的</p><p>对象中，建造者返还给客户端的是一个全部零件都建造完毕的产品对象。</p><p>在以下情况下应当使用建造者模式：<br/></p><p>&nbsp;&nbsp;&nbsp;&nbsp;1.需要生成的产品对象有复杂的内部结构。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;2.需要生成的产品对象的属性相互依赖，建造者模式可以强迫生成顺序。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;3.在对象创建过程中会用到系统中的一些其他对象，这些对象在产品对象的创建过程中不易得到。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;4.建造者模式的使用使得产品的内部表象可以独立地变化，客户端不必知道产品内部组成的细节。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;5.每一个“建造者”都相对独立，而与其他的“建造者”无关。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;6.使用该模式建造的最终产品更易于控制。本实例将应用建造者模式分别建造小汽车对象和摩托车对象，并显示建造的内容。</p><p><strong>关键技术</strong></p><p>应用建造者模式之前，必须知道建造者模式的优点。该模式具有以下优点：</p><p>&nbsp;&nbsp;&nbsp;&nbsp;1.可以使得产品内部的表象独立变化。在原来的工厂方法模式中，产品内部的表象是由产品自身来决定的；而在建造者模式中，则“外部化”为由建造者来负责。这样定义一个新的具体建造者角 &nbsp; &nbsp;&nbsp;&nbsp;&nbsp;色就可以改变产品的内部表象，符合“开闭原则”。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;2.使得客户不需要知道太多产品内部的细节。它将复杂对象的组建和表示方式封装在一个具体的建造者角色中，而且由指导者协调建造者角色来得到具体的产品实例。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;3.每一个具体建造者角色是毫无关系的。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;4.建造者模式可以对复杂产品的创建进行更加精细的控制。产品的组成是由指导者角色调用具体建造者角色来逐步完成的，所以比起其他创建型模式，能够更好地反映产品的构造过程。</p><p><strong>设计过程</strong></p><p>（1）在 main()方法中分别创建工厂类、小汽车建造类和摩托车建造类的实例对象，使用工厂对象分别建造</p><p>小汽车对象和摩托车对象，并显示建造的内容。代码如下：</p><pre class=\"brush:java;toolbar:false\">public&nbsp;class&nbsp;BuilderApp\r\n{\r\npublic&nbsp;static&nbsp;void&nbsp;main(String[]&nbsp;args)\r\n{\r\n//创建摩托车\r\nMotorCycleBuilder&nbsp;builder1&nbsp;=&nbsp;new&nbsp;MotorCycleBuilder();\r\nVehicle&nbsp;director1&nbsp;=&nbsp;new&nbsp;Vehicle(builder1);\r\n//创建小汽车\r\nCarBuilder&nbsp;builder2&nbsp;=&nbsp;new&nbsp;CarBuilder();\r\nVehicle&nbsp;director2&nbsp;=&nbsp;new&nbsp;Vehicle(builder2);\r\ndirector1.construct();\r\ndirector2.construct();\r\n//显示创建产品\r\nbuilder1.shop.show();\r\nbuilder2.shop.show();\r\n}\r\n}</pre><p>（2）定义交通工具建造的接口（包含 Vehicle 属性），声明实现建造过程的各个方法。代码如下：</p><pre class=\"brush:java;toolbar:false\">interface&nbsp;VehicleBuilder\r\n//建造者\r\n{\r\nvoid&nbsp;BuildFrame();\r\nvoid&nbsp;BuildEngine();\r\nvoid&nbsp;BuildWheels();\r\nvoid&nbsp;BuildDoors();\r\nvoid&nbsp;Buider();\r\n}</pre><p>（3）定义摩托车建造类，继承交通工具建造抽象类，并实现抽象类中定义的方法。代码如下：</p><pre class=\"brush:java;toolbar:false\">class&nbsp;MotorCycleBuilder&nbsp;implements&nbsp;VehicleBuilder\r\n//具体建造者&nbsp;1\r\n{\r\nShop&nbsp;shop&nbsp;=&nbsp;new&nbsp;Shop();\r\npublic&nbsp;void&nbsp;Buider()\r\n{\r\nshop.object(&quot;type&quot;,&nbsp;&quot;摩托车&quot;);\r\n}\r\npublic&nbsp;void&nbsp;BuildFrame()\r\n{\r\nshop.object(&quot;frame&quot;,&quot;摩托车&nbsp;框架&quot;);\r\n}\r\npublic&nbsp;void&nbsp;BuildEngine()\r\n{\r\nshop.object(&quot;engine&quot;,&quot;500&nbsp;毫升&quot;);\r\n}\r\npublic&nbsp;void&nbsp;BuildWheels()\r\n{\r\nshop.object(&quot;wheels&quot;,&nbsp;&quot;2&nbsp;个车轮&quot;);\r\n}\r\npublic&nbsp;void&nbsp;BuildDoors()\r\n{\r\nshop.object(&quot;doors&quot;,&quot;没有车门&quot;);\r\n}\r\n}</pre><p>（4）定义小汽车建造类，继承交通工具建造抽象类，并实现抽象类中定义的方法。代码如下：</p><pre class=\"brush:java;toolbar:false\">class&nbsp;CarBuilder&nbsp;implements&nbsp;VehicleBuilder\r\n//具体建造者&nbsp;2\r\n{\r\nShop&nbsp;shop&nbsp;=&nbsp;new&nbsp;Shop();\r\npublic&nbsp;void&nbsp;Buider(){\r\nshop.object(&quot;type&quot;,&quot;轿车&quot;);\r\n}\r\npublic&nbsp;void&nbsp;BuildFrame()\r\n{\r\nshop.object(&quot;frame&quot;,&quot;轿车&nbsp;框架&quot;);\r\n}\r\npublic&nbsp;void&nbsp;BuildEngine()\r\n{\r\nshop.object(&quot;engine&quot;,&quot;2500&nbsp;毫升&quot;);\r\n}\r\npublic&nbsp;void&nbsp;BuildWheels()\r\n{\r\nshop.object(&quot;wheels&quot;,&nbsp;&quot;4&nbsp;个车轮&quot;);\r\n}\r\npublic&nbsp;void&nbsp;BuildDoors()\r\n{\r\nshop.object(&quot;doors&quot;,&quot;4&nbsp;个车门&quot;);\r\n}\r\n}</pre><p>（5）定义交通工具类，该类主要实现记录并显示交通工具的建造内容。代码如下：<br/></p><pre class=\"brush:java;toolbar:false\">class&nbsp;Vehicle\r\n{\r\nprivate&nbsp;VehicleBuilder&nbsp;builder;\r\npublic&nbsp;Vehicle(&nbsp;VehicleBuilder&nbsp;builder&nbsp;)\r\n{\r\nthis.builder&nbsp;=&nbsp;builder;\r\n}\r\n//这是将部件装成汽车的过程\r\npublic&nbsp;void&nbsp;construct()\r\n{\r\nbuilder.BuildFrame();\r\nbuilder.BuildEngine();\r\nbuilder.BuildDoors();\r\nbuilder.BuildWheels();\r\nbuilder.Buider();\r\n}\r\n}</pre><p>（6）定义建造交通工具的工厂类，在工厂类中规定交通工具的建造步骤。代码如下：</p><pre class=\"brush:java;toolbar:false\">class&nbsp;Shop\r\n{\r\nString&nbsp;type;\r\nHashtable&nbsp;parts&nbsp;=&nbsp;new&nbsp;Hashtable();\r\npublic&nbsp;void&nbsp;object&nbsp;(String&nbsp;key,&nbsp;String&nbsp;value)\r\n{\r\nparts.put(key&nbsp;,&nbsp;value);\r\n}\r\npublic&nbsp;void&nbsp;show()&nbsp;{\r\nSystem.out.println(&quot;--------&quot;&nbsp;+&nbsp;parts.get(&quot;type&quot;)+&quot;--------&quot;);\r\nSystem.out.println(&quot;框架&nbsp;：&nbsp;&quot;&nbsp;+&nbsp;parts.get(&quot;frame&quot;));\r\nSystem.out.println(&quot;发动机&nbsp;：&nbsp;&quot;&nbsp;+&nbsp;parts.get(&quot;engine&quot;));\r\nSystem.out.println(&quot;车轮数量：&nbsp;&quot;&nbsp;+&nbsp;parts.get(&quot;wheels&quot;));\r\nSystem.out.println(&quot;车门数量：&nbsp;&quot;&nbsp;+&nbsp;parts.get(&quot;doors&quot;));\r\n}\r\n}</pre><p><br/></p>', '2014-06-06', '建造者（Builder）模式可以将一个产品的内部表象与产品的生成过程分割开来，从而可以使一个建造过程生成具有不同内部表象的产品对象。', '14', null, null, '1', '设计模式', '设计模式-责任型模式-建造者模式', '0', '29', '0', '2014-06-06', '5', '5');
INSERT INTO `cms_article` VALUES ('58', 'black', '<p><span style=\"font-family:宋体\">&nbsp; &nbsp; 在大学的时候，天天学习着一些基本的技术知识，总想有一天成为所谓的“高手”，但是学到最后才发现，之前学的很多东西怎么不会用，或者是该用到哪儿，在迷迷糊糊中知道了很多技术，但是就是不知道技术的具体内容，所以感觉我们知道很多，其实我们什么都不会。</span></p><p>&nbsp; &nbsp;&nbsp;<span style=\"font-family:宋体\">到了开始工作的时候，我们开始回忆以前学习的东西，总认为之前学习的知识是很牛逼的知识，总想在工作之余把那些技术拿出来倒腾一下，然后倒腾出一些自认为很有成就感的技术成果，等到一段时间过后，我们才反省过来，我做出来的这个东西有用吗？</span> </p><p>&nbsp; &nbsp;&nbsp;<span style=\"font-family:宋体\">我高中有一个同学，在读高中的时候对计算机非常痴迷，天天除了看课本就是关注电脑杂志以及电脑有关的书籍，每天活在计算机的世界里面。在大家都会认为他大学一定会学习计算机相关的专业时，他却没有选择计算机专业，而是转向了法律。在一次同学聚会上面，问起缘由时，他说：“计算机是他当时的爱好，如果他当时继续选择学习计算机相关专业，他有一天终会因为它而没有啥子兴趣的。”当时听到这个我心里顿生不屑之意，用鄙视的心里打量了一下他。在回来寂静的环境里面一个人思考的时候，我在想，我喜欢什么，我该做什么，我现在所做的技术能给我带来什么。再仔细想想那位同学，他有着一份很好的律师事务的工作，然后偶尔在电脑旁折腾一下个人的网站，并且把自己所知道的法律纠纷用普通的语言放在的网络里面，让更多的法律爱好者通过他的博客了解到法律。</span></p><p>&nbsp; &nbsp;&nbsp;<span style=\"font-family:宋体\">而我们呢？天天和计算机共处事，假如有一天，我们的朋友问及我们现在的工作时，问起我们平时一般做什么时，我们能拿出什么东西来告诉他们我们做过什么？我们在公司敲了代码？我们在公司学习了很多新奇的技术？可到了他们眼里，他们能知道什么？他们会问：“代码是什么？什么是新奇的技术？”其实只要你说了几句，你便和他们没有共同的语言了。因为很多不懂技术的人只会考虑事情的结果，而技术人员往往很在意过程，结果只是一个产物而已，技术与人打交道时完全不同，技术人员注重过程，喜欢专研，而非技术人员注重事情结果，过程只针对他们做人。</span></p><p>&nbsp; &nbsp;&nbsp;<span style=\"font-family:宋体\">我们在技术上面遇到过很多棘手的问题，有时解决的头疼，解决的很疲惫，我们只在乎解决了那一刻的轻松，我们会完全忘了解决的那种痛苦。在解决中，我们有时会思考，技术到底能给我们带来什么。我该从事技术工作，还是从事非技术工作，我们该转行吗？</span></p><p>&nbsp; &nbsp;&nbsp;<span style=\"font-family:宋体\">我身边的很多同学总认为很多优秀的同学拿着高工资是因为他的技术很牛逼，然后自己平时拼命的学习技术，但是学完了发现自己还是不如别人，自己的工资还是没有别人的高。</span></p><p><span style=\"font-family:宋体\">很多同学可以做出很多东西，可以运用很多新颖的技术做出很多很炫的东西，但是他们却不知道技术的精度和深度。我有一个同学，高深技术之类的什么都不会，但是他就会</span>seo<span style=\"font-family:宋体\">，而且做</span>seo<span style=\"font-family:宋体\">也就一年的时间，但是他每个月能拿到</span>8k<span style=\"font-family:宋体\">的样子，而且还是在成都一个二流的公司，正是因为他只会</span>seo<span style=\"font-family:宋体\">，同时其他技术都不做，每天就研究一些如何让自己的网站做到百度搜索头条，想着用户怎么输入才会找到自己的关键词，更神奇的是，他大学学的是心理学专业。从这里我们不难看出，技术只是一门工具，真正要我们使用好这个工具的是我们能拿这个工具来做什么，工具可以产生任何东西，但是工具能否精雕细琢出一个产物还得看我们个人的修为。</span></p><p>&nbsp; &nbsp;&nbsp;<span style=\"font-family:宋体\">技术到底是什么，我一直在思考。我拿技术来做什么，我也在思考。夜已深，</span>session<span style=\"font-family:宋体\">多半过时了，明天来发表吧</span>~~~</p><p style=\"text-align: center;\">&nbsp; &nbsp;&nbsp;<img src=\"/upload/20140609/35551402293458435.gif\" title=\"meileche.gif\"/></p><p><br/></p>', '2014-06-09', '技术到底是什么，我一直在思考。我拿技术来做什么，我也在思考。', '26', null, null, '1', '技术,程序员,思考,技术是什么', '技术到底该是什么', '0', '34', '0', '2014-06-09', '8', null);
INSERT INTO `cms_article` VALUES ('59', 'black', '<p><strong>实例说明</strong></p><p style=\"text-indent: 2em;\">什么是中介者（Mediator）模式？笔者先通过一个实际生活中的例子进行介绍。例如，卖房者和买房者一般都通过房屋中介公司进行房产交易，卖房者先到中介公司进行售房登记，买房者到中介公司查询到满意的房源信息后，通知中介公司看房，中介公司再通知卖房者……，在整个房屋买卖的过程中，买房者和卖房者不直接联系，而是通过中介公司。通过中介公司进行房屋买卖是一种标准的中介者模式。</p><p style=\"text-indent: 0em;\"><strong>关键技术</strong></p><p style=\"text-indent: 2em;\">应用中介者模式之前必须掌握中介者模式的概念及适用性，下面分别介绍。</p><p style=\"text-indent: 2em;\">(1).中介者模式的概念</p><p style=\"text-indent: 2em;\">用一个中介对象来封装一系列的对象交互。中介者使各对象不需要显式地相互引用，从而使其耦合松散，而且可以独立地改变它们之间的交互。</p><p style=\"text-indent: 2em;\"><span style=\"text-indent: 32px;\">(2).</span><span style=\"text-indent: 32px;\">中介者模式的适用性,在下列情况下使用中介者模式</span></p><ul class=\" list-paddingleft-2\" style=\"list-style-type: disc;\"><ul class=\" list-paddingleft-2\" style=\"list-style-type: square;\"><li><p dir=\"ltr\" style=\"text-indent: 0em;\"><span style=\"text-indent: 32px;\">一组对象以定义良好但是复杂的方式进行通信，产生的相互依赖关系结构混乱且难以理解。</span></p></li><li><p dir=\"ltr\" style=\"text-indent: 0em;\"><span style=\"text-indent: 32px;\">一个对象引用其他很多对象并且直接与这些对象通信，导致难以复用该对象。</span></p></li><li><p dir=\"ltr\" style=\"text-indent: 0em;\"><span style=\"text-indent: 32px;\">想定制一个分布在多个类中的行为，而又不想生成太多的子类。</span></p></li></ul></ul><p style=\"text-indent: 0em;\"><strong><span style=\"text-indent: 32px;\">设计过程</span></strong></p><p style=\"text-indent: 2em;\"><span style=\"text-indent: 32px;\">(1).定义中介者的抽象类 Mediator，并声明发送消息方法 Send()。代码如下:</span></p><pre class=\"brush:java;toolbar:false\">abstract&nbsp;class&nbsp;Mediator\r\n//中介者抽象类\r\n{\r\npublic&nbsp;abstract&nbsp;void&nbsp;Send(String&nbsp;message,&nbsp;Colleague&nbsp;colleague);&nbsp;//发送消息的方法\r\n}</pre><p style=\"text-indent: 2em;\"><span style=\"text-indent: 32px;\"><span style=\"text-indent: 32px;\">(2).</span><span style=\"text-indent: 32px;\">定义具体的中介者类 ConcreteMediator，继承 Mediator 类。代码如下：</span></span></p><pre class=\"brush:java;toolbar:false\">class&nbsp;ConcreteMediator&nbsp;extends&nbsp;Mediator\r\n//具体的中介者类\r\n{\r\nConcreteColleague1&nbsp;colleague1;\r\nConcreteColleague2&nbsp;colleague2;\r\npublic&nbsp;void&nbsp;Send(String&nbsp;message,Colleague&nbsp;colleague)\r\n//重写发送消息的方法，根据对象作出选择判断，通知对象\r\n{\r\nif&nbsp;(colleague&nbsp;==&nbsp;colleague1)\r\n{\r\ncolleague2.Notify(message);\r\n}\r\nelse\r\n{\r\ncolleague1.Notify(message);\r\n}\r\n}\r\n}</pre><p style=\"text-indent: 2em;\"><span style=\"text-indent: 32px;\"><span style=\"text-indent: 32px;\"><span style=\"text-indent: 32px;\">(3).</span><span style=\"text-indent: 32px;\">定义同事抽象类 Colleague，主要实现在构造函数中获得中介者类。代码如下：</span></span></span></p><pre class=\"brush:java;toolbar:false\">abstract&nbsp;class&nbsp;Colleague\r\n//同事抽象类\r\n{\r\nprotected&nbsp;Mediator&nbsp;mediator;\r\npublic&nbsp;Colleague(Mediator&nbsp;mediator)\r\n//构造函数，得到中介者\r\n{\r\nthis.mediator&nbsp;=&nbsp;mediator;\r\n}\r\n}</pre><p style=\"text-indent: 2em;\"><span style=\"text-indent: 32px;\"><span style=\"text-indent: 32px;\"><span style=\"text-indent: 32px;\"><span style=\"text-indent: 32px;\">(4).</span><span style=\"text-indent: 32px;\">定义第 1 个具体的同事类，并实现发送消息和接收消息的方法。代码如下：</span></span></span></span></p><pre class=\"brush:java;toolbar:false\">class&nbsp;ConcreteColleague1&nbsp;extends&nbsp;Colleague\r\n//具体的同事类&nbsp;1\r\n{\r\npublic&nbsp;ConcreteColleague1(Mediator&nbsp;mediator)\r\n{super(mediator);}\r\npublic&nbsp;void&nbsp;Send(String&nbsp;message)\r\n{\r\nmediator.Send(message,&nbsp;this);\r\n//发送消息时通常是中介者发送出去的\r\n}\r\npublic&nbsp;void&nbsp;Notify(String&nbsp;message)\r\n{\r\nSystem.out.println(&quot;同事&nbsp;A&nbsp;收到消息：&quot;&nbsp;+&nbsp;message);\r\n}\r\n}</pre><p style=\"text-indent: 2em;\"><span style=\"text-indent: 32px;\"><span style=\"text-indent: 32px;\"><span style=\"text-indent: 32px;\"><span style=\"text-indent: 32px;\"><span style=\"text-indent: 32px;\">(5).</span><span style=\"text-indent: 32px;\">定义第 2 个具体的同事类，并实现发送消息和接收消息的方法。代码如下：</span></span></span></span></span></p><p style=\"text-indent: 2em;\"><span style=\"text-indent: 32px;\"><span style=\"text-indent: 32px;\"><span style=\"text-indent: 32px;\"><span style=\"text-indent: 32px;\"><span style=\"text-indent: 32px;\"></span></span></span></span></span></p><pre class=\"brush:java;toolbar:false\">class&nbsp;ConcreteColleague2&nbsp;extends&nbsp;Colleague\r\n//具体的同事类&nbsp;2\r\n{\r\npublic&nbsp;ConcreteColleague2(Mediator&nbsp;mediator)\r\n{super(mediator);}\r\npublic&nbsp;void&nbsp;Send(String&nbsp;message)\r\n{\r\nmediator.Send(message,&nbsp;this);\r\n}\r\npublic&nbsp;void&nbsp;Notify(String&nbsp;message)\r\n{\r\nSystem.out.println(&quot;同事&nbsp;B&nbsp;收到消息：&nbsp;&quot;&nbsp;+&nbsp;message);\r\n}\r\n}</pre><p style=\"text-indent: 2em;\"><span style=\"text-indent: 32px;\"><span style=\"text-indent: 32px;\"><span style=\"text-indent: 32px;\"><span style=\"text-indent: 32px;\"><span style=\"text-indent: 32px;\">(6).</span></span></span></span></span>在 main()方法中，分别创建中介对象和两个同事对象，然后让两个同事对象与中介对象互相了解，最后同事 B 发送消息，同事 A 回复消息（都是通过中介对象转发）。代码如下：</p><p style=\"text-indent: 2em;\"><span style=\"text-indent: 32px;\"><span style=\"text-indent: 32px;\"><span style=\"text-indent: 32px;\"><span style=\"text-indent: 32px;\"><span style=\"text-indent: 32px;\"></span></span></span></span></span></p><pre class=\"brush:java;toolbar:false\">class&nbsp;Program\r\n{\r\npublic&nbsp;static&nbsp;void&nbsp;main(String[]&nbsp;args)\r\n{\r\nConcreteMediator&nbsp;m&nbsp;=&nbsp;new&nbsp;ConcreteMediator();\r\n//创建具体中介者对象\r\nConcreteColleague1&nbsp;c1&nbsp;=&nbsp;new&nbsp;ConcreteColleague1(m);\r\n//让两个具体的同事类认识中介者对象\r\nConcreteColleague2&nbsp;c2&nbsp;=&nbsp;new&nbsp;ConcreteColleague2(m);\r\nm.colleague1&nbsp;=&nbsp;c1;\r\n//让中介者对象认识同事对象\r\nm.colleague2&nbsp;=&nbsp;c2;\r\nc1.Send(&quot;How&nbsp;are&nbsp;you?&quot;);\r\n//具体同事对象的发送信息都是通过中介者转发的\r\nc2.Send(&quot;Fine,&nbsp;thanks&quot;);\r\n}\r\n}</pre><p style=\"text-indent: 2em;\"><br/></p>', '2014-06-10', '什么是中介者（Mediator）模式？笔者先通过一个实际生活中的例子进行介绍。例如，卖房者和买房者一般\r\n都通过房屋中介公司进行房产交易，卖房者先到中介公司进行售房登记，买房者到中介公司查询到满意的房源\r\n信息后，通知中介公司看房，中介公司再通知卖房者……，在整个房屋买卖的过程中，买房者和卖房者不直接联系，而是通过中介公司。通过中介公司进行房屋买卖是一种标准的中介者模式。', '56', null, null, '1', '设计模式', '设计模式-责任型模式-中介者模式', '0', '29', '0', '2014-06-10', '5', null);
INSERT INTO `cms_article` VALUES ('60', 'black', '<p><strong>实例说明</strong></p><p style=\"text-indent: 2em;\">什么是责任链模式？笔者先通过一个实际生活中的例子进行介绍。</p><p dir=\"ltr\" style=\"text-indent: 2em;\">例如，笔者为明日公司的一名员工，由于特殊原因需要请 7 天假。首先到 Java 部门经理那去请，部门经理说我只有权准许你请一天假；于是笔者又到总监那去请，总监说我只有权准许你请 3 天假；最后没办法，只能到总经理那去请，结果总经理同意了。</p><p style=\"text-indent: 2em;\">以上的请假流程可以使用责任链模式来实现，部门经理、总监、总经理都是责任链中的一环，他们都有自己的责任（如总监只有权准许下属请 3 天假），如果在自己责任范围内可以直接处理，如果不在自己责任范围内可以报送上级处理。</p><p dir=\"ltr\" style=\"text-indent: 2em;\">本实例主要演示应用责任链模式实现笔者的请假流程，</p><p style=\"text-indent: 0em;\"><strong>关键技术</strong></p><p style=\"text-indent: 2em;\">应用责任链模式之前必须掌握责任链模式的概念和适用性，下面分别介绍。<strong><br/></strong></p><p style=\"text-indent: 2em;\">（1）责任链模式的概念</p><p style=\"text-indent: 2em;\">责任链模式是使多个对象都有机会处理请求，从而避免请求的发送者和接收者之间的耦合关系。将这些对象连成一条链，并沿着这条链传递该请求，直到有一个对象处理它为止。</p><p style=\"text-indent: 2em;\">（2）责任链模式的适用性，满足以下条件时可以使用责任链模式：</p><ul class=\" list-paddingleft-2\" style=\"list-style-type: disc;\"><ul class=\" list-paddingleft-2\" style=\"list-style-type: square;\"><li><p style=\"text-indent: 0em;\">有多个对象可以处理一个请求，哪个对象处理该请求运行时自动确定。</p></li><li><p style=\"text-indent: 0em;\">想在不明确指定接收者的情况下，向多个对象中的一个提交一个请求。</p></li><li><p style=\"text-indent: 0em;\">可处理一个请求的对象集合应被动态指定。</p></li></ul></ul><p style=\"text-indent: 0em;\"><strong style=\"white-space: normal;\">设计过程</strong></p><p style=\"text-indent: 2em;\"><strong style=\"white-space: normal;\"></strong></p><p style=\"text-indent: 2em;\">（1）定义申请类 Request，包含申请类别（如请假）、申请内容和申请数量（如请假天数）3 个属性。代码如下：</p><pre class=\"brush:java;toolbar:false\">class&nbsp;Request\r\n//申请\r\n{\r\npublic&nbsp;String&nbsp;RequestType&nbsp;;\r\n//申请类别\r\npublic&nbsp;String&nbsp;RequestContent;\r\n//申请内容\r\npublic&nbsp;int&nbsp;RequestNumber;\r\n//申请数量\r\npublic&nbsp;Request(String&nbsp;requestType,&nbsp;String&nbsp;requestContent,&nbsp;int&nbsp;requestNumber)\r\n{\r\nthis.RequestType&nbsp;=&nbsp;requestType;\r\nthis.RequestContent&nbsp;=&nbsp;requestContent;\r\nthis.RequestNumber&nbsp;=&nbsp;requestNumber;\r\n}\r\n}</pre><p style=\"text-indent: 2em;\">（2）定义管理者抽象类，该类主要实现设置管理者的上级和处理请求。代码如下：</p><pre class=\"brush:java;toolbar:false\">abstract&nbsp;class&nbsp;Manager\r\n//管理者抽象类\r\n{\r\nprotected&nbsp;String&nbsp;name;\r\nprotected&nbsp;Manager&nbsp;superior;\r\npublic&nbsp;Manager(String&nbsp;name)\r\n{&nbsp;this.name&nbsp;=&nbsp;name;&nbsp;}\r\npublic&nbsp;void&nbsp;SetSuperior(Manager&nbsp;superior)\r\n//设置管理者的上级\r\n{\r\nthis.superior&nbsp;=&nbsp;superior;\r\n}\r\nabstract&nbsp;public&nbsp;void&nbsp;RequestApplications(Request&nbsp;request);</pre><p style=\"text-indent: 2em;\">（3）定义部门经理类 CommonManager，继承 Manager 类，并实现 RequestApplications()方法。代码如下：</p><pre class=\"brush:java;toolbar:false\">class&nbsp;CommonManager&nbsp;extends&nbsp;Manager\r\n//部门经理\r\n{\r\npublic&nbsp;CommonManager(String&nbsp;name)\r\n{\r\nsuper(name);\r\n}\r\npublic&nbsp;void&nbsp;RequestApplications(Request&nbsp;request)\r\n{\r\nif&nbsp;(request.RequestType&nbsp;==&nbsp;&quot;请假&quot;&nbsp;&amp;&amp;&nbsp;request.RequestNumber&nbsp;&lt;=&nbsp;1)\r\n//部门经理有权准许下属&nbsp;1&nbsp;天内的假期\r\n{\r\nSystem.out.println(&nbsp;name&nbsp;+&quot;:&quot;+&nbsp;request.RequestContent+&nbsp;&quot;&nbsp;数量&quot;+&nbsp;request.RequestNumber+&quot;&nbsp;被批准&quot;);\r\n}\r\nelse\r\n{\r\nif&nbsp;(superior&nbsp;!=&nbsp;null)\r\n{\r\nsuperior.RequestApplications(request);\r\n//其余的申请需转到上级\r\n}\r\n}\r\n}\r\n}</pre><p style=\"text-indent: 2em;\">（4）定义总监类 Majordomo，继承 Manager 类，并实现 RequestApplications()方法。代码如下：</p><pre class=\"brush:java;toolbar:false\">class&nbsp;Majordomo&nbsp;extends&nbsp;Manager\r\n//总监\r\n{\r\npublic&nbsp;Majordomo(String&nbsp;name)\r\n{\r\nsuper(name);\r\n}\r\npublic&nbsp;void&nbsp;RequestApplications(Request&nbsp;request)\r\n{\r\nif&nbsp;(request.RequestType&nbsp;==&nbsp;&quot;请假&quot;&nbsp;&amp;&amp;&nbsp;request.RequestNumber&nbsp;&lt;=&nbsp;3)\r\n//总监有权准许下属&nbsp;3&nbsp;天内的假期\r\n{\r\nSystem.out.println(&nbsp;name&nbsp;+&quot;:&quot;+&nbsp;request.RequestContent+&nbsp;&quot;&nbsp;数量&quot;+&nbsp;request.RequestNumber+&quot;&nbsp;被批准&quot;);\r\n}\r\nelse\r\n{\r\nif&nbsp;(superior&nbsp;!=&nbsp;null)\r\n{\r\nsuperior.RequestApplications(request);\r\n//其余的申请需转到上级\r\n}\r\n}\r\n}\r\n}</pre><p style=\"text-indent: 2em;\">（5）定义总经理类 GeneralManager，继承 Manager 类，并实现 RequestApplications()方法。代码如下：</p><pre class=\"brush:java;toolbar:false\">class&nbsp;GeneralManager&nbsp;extends&nbsp;Manager\r\n//总经理\r\n{\r\npublic&nbsp;GeneralManager(String&nbsp;name)\r\n{\r\nsuper(name);\r\n}\r\npublic&nbsp;void&nbsp;RequestApplications(Request&nbsp;request)\r\n{\r\nif&nbsp;(request.RequestType&nbsp;==&nbsp;&quot;请假&quot;)\r\n//总经理有权准许下属任意天的假期\r\n{\r\nSystem.out.println(&nbsp;name&nbsp;+&quot;:&quot;+&nbsp;request.RequestContent+&nbsp;&quot;&nbsp;数量&quot;+&nbsp;request.RequestNumber+&quot;&nbsp;被批准&quot;);\r\n}\r\nelse&nbsp;if&nbsp;(request.RequestType&nbsp;==&nbsp;&quot;加薪&quot;&nbsp;&amp;&amp;&nbsp;request.RequestNumber&nbsp;&lt;=&nbsp;1000)&nbsp;//加薪在&nbsp;1000&nbsp;以内,经理不心疼\r\n{\r\nSystem.out.println(&nbsp;name&nbsp;+&quot;:&quot;+&nbsp;request.RequestContent+&nbsp;&quot;&nbsp;数量&quot;+&nbsp;request.RequestNumber+&quot;&nbsp;被批准&quot;);\r\n}\r\nelse\r\n//要求太高，不能批准\r\n{\r\nSystem.out.println(&nbsp;name&nbsp;+&quot;:&quot;+&nbsp;request.RequestContent+&nbsp;&quot;&nbsp;数量&quot;+&nbsp;request.RequestNumber+&quot;&nbsp;被批准&quot;);\r\n}\r\n}\r\n}</pre><p style=\"text-indent: 2em;\">（6）在 main()方法中，分别创建部门经理、总监和总经理类的实例，然后设置部门经理的上级是总监，总监的上级是总经理，最后分别申请 1 天、3 天和 7 天假。代码如下：</p><pre class=\"brush:java;toolbar:false\">class&nbsp;Program\r\n{\r\npublic&nbsp;static&nbsp;void&nbsp;main(String[]&nbsp;args)\r\n{\r\nCommonManager&nbsp;com&nbsp;=&nbsp;new&nbsp;CommonManager(&quot;房大伟&quot;);\r\n//部门经理类\r\nMajordomo&nbsp;maj&nbsp;=&nbsp;new&nbsp;Majordomo(&quot;宋坤&quot;);\r\n//总监类\r\nGeneralManager&nbsp;gen&nbsp;=&nbsp;new&nbsp;GeneralManager(&quot;赛奎春&quot;);\r\n//总经理类\r\ncom.SetSuperior(maj);\r\n//设置部门经理的上级是总监，可根据实际情况更改设置\r\nmaj.SetSuperior(gen);\r\n//设置总监的上级是总经理\r\nRequest&nbsp;req1&nbsp;=&nbsp;new&nbsp;Request(&quot;请假&quot;,&nbsp;&quot;云峰要请假&quot;,&nbsp;1);\r\n//申请&nbsp;1&nbsp;天假\r\ncom.RequestApplications(req1);\r\n//上级领导处理\r\nRequest&nbsp;req2&nbsp;=&nbsp;new&nbsp;Request(&quot;请假&quot;,&nbsp;&quot;云峰要请假&quot;,&nbsp;3);\r\ncom.RequestApplications(req2);\r\nRequest&nbsp;req3&nbsp;=&nbsp;new&nbsp;Request(&quot;请假&quot;,&nbsp;&quot;云峰要请假&quot;,&nbsp;7);\r\ncom.RequestApplications(req3);\r\n}\r\n}</pre>', '2014-06-10', '例如，笔者为明日公司的一名员工，由于特殊原因需要请 7 天假。首先到 Java 部门经理那去请，部门经理说我只有权准许你请一天假；于是笔者又到总监那去请，总监说我只有权准许你请 3 天假；最后没办法，只能到总经理那去请，结果总经理同意了。', '23', null, null, '1', '设计模式', '设计模式-责任型模式-责任链模式', '0', '29', '0', '2014-06-10', '5', null);
INSERT INTO `cms_article` VALUES ('61', 'black', '<p style=\"text-indent: 2em;\">不知道怎么说，最近貌似又进入疲劳期了，下班后回来只想看看新闻，看看视频，然后躺着休息。博客和thinker功能上也还有很多没完成的地方，但是连eclipse都不想打开，或者打开也没心情写代码。</p><p style=\"text-indent: 2em;\">今天朋友叫我一起做一个系统，赚点外快。哎，可能要拒绝了，一是感觉功能挺多的，才4000块钱，费力不讨好；二是最近事还挺多的周末又要去学车，平时上班搞得自己也很累，三是还是不敢做不太确定的事，怕到时候出很多问题，搞得自己很麻烦。<br/></p><p style=\"text-indent: 2em;\">审视一下自己最近一段时间表现，表面看上去很有斗志，实际上很无力啊。希望能尽快找回“3个小时不写代码头痛“的的状态才对啊。</p><p style=\"text-indent: 2em;\"><span style=\"font-size: 24px; color: rgb(255, 0, 0);\">要成功，先发疯,风风火火向前冲！</span><img src=\"/assets/comp/ueditor/dialogs/emotion/images/tsj/t_0003.gif\"/></p>', '2014-06-17', '不知道怎么说，最近貌似又进入疲劳期了，下班后回来只想看看新闻，看看视频，然后躺着休息。博客和thinker功能上也还有很多没完成的地方，但是连。。。', '7', null, null, '1', '日记', '【日记】写于2014-6-17', '0', '26', '0', '2014-06-17', '5', '5');

-- ----------------------------
-- Table structure for cms_category
-- ----------------------------
DROP TABLE IF EXISTS `cms_category`;
CREATE TABLE `cms_category` (
  `id` bigint(20) NOT NULL AUTO_INCREMENT,
  `description` varchar(255) DEFAULT NULL,
  `image` varchar(255) DEFAULT NULL,
  `keywords` varchar(255) DEFAULT NULL,
  `module` varchar(255) DEFAULT NULL,
  `name` varchar(255) DEFAULT NULL,
  `PARENT_ID` bigint(20) DEFAULT NULL,
  `grade` int(11) NOT NULL,
  `isShow` int(11) NOT NULL,
  `orderNo` int(11) NOT NULL,
  `site_id` bigint(20) DEFAULT NULL,
  `url` varchar(255) DEFAULT NULL,
  PRIMARY KEY (`id`),
  KEY `FK2478CF34EA0C9E18` (`PARENT_ID`) USING BTREE,
  KEY `FK2478CF341EEC3DA4` (`site_id`) USING BTREE,
  CONSTRAINT `cms_category_ibfk_1` FOREIGN KEY (`site_id`) REFERENCES `cms_site` (`id`),
  CONSTRAINT `cms_category_ibfk_2` FOREIGN KEY (`PARENT_ID`) REFERENCES `cms_category` (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=36 DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of cms_category
-- ----------------------------
INSERT INTO `cms_category` VALUES ('25', '最高级栏目', '', '', '', '栏目', null, '0', '1', '0', '1', null);
INSERT INTO `cms_category` VALUES ('26', '记录日记的栏目', null, '日记', 'article', '日记', '25', '1', '0', '1', '1', '');
INSERT INTO `cms_category` VALUES ('27', '说技术的', null, '技术', 'article', '技术', '25', '1', '0', '0', '1', '');
INSERT INTO `cms_category` VALUES ('28', '我TM就这样', null, 'about me', 'link', '关于我', '25', '1', '0', '4', '1', 'http://www.rguess.com/blog/article/35.html');
INSERT INTO `cms_category` VALUES ('29', '关于java的技术博客', null, 'java', 'article', 'java', '27', '2', '0', '0', '1', '');
INSERT INTO `cms_category` VALUES ('30', 'js包含jquery相关技术博客', null, 'js', 'article', 'js', '27', '2', '0', '1', '1', '');
INSERT INTO `cms_category` VALUES ('31', '想说什么说什么', null, '随意', 'article', '随意', '25', '1', '0', '3', '1', null);
INSERT INTO `cms_category` VALUES ('32', 'linux相关文章', null, 'linux', 'article', 'linux', '27', '2', '0', '2', '1', '');
INSERT INTO `cms_category` VALUES ('33', '', null, '', 'article', '小伙伴', '25', '1', '0', '3', '1', '');
INSERT INTO `cms_category` VALUES ('34', '', null, '', 'article', 'syc', '33', '2', '0', '0', '1', '');
INSERT INTO `cms_category` VALUES ('35', '', null, '', 'link', '友情链接', '25', '1', '1', '4', '1', '');

-- ----------------------------
-- Table structure for cms_comment
-- ----------------------------
DROP TABLE IF EXISTS `cms_comment`;
CREATE TABLE `cms_comment` (
  `id` bigint(20) NOT NULL AUTO_INCREMENT,
  `auditDate` date DEFAULT NULL,
  `content` varchar(255) DEFAULT NULL,
  `createDate` datetime DEFAULT NULL,
  `delFlag` int(11) NOT NULL,
  `email` varchar(255) DEFAULT NULL,
  `ip` varchar(255) DEFAULT NULL,
  `name` varchar(255) DEFAULT NULL,
  `url` varchar(255) DEFAULT NULL,
  `article_id` bigint(20) DEFAULT NULL,
  `auditer_id` bigint(20) DEFAULT NULL,
  `headPath` varchar(255) DEFAULT NULL,
  PRIMARY KEY (`id`),
  KEY `FKF7A9BD69C09E6470` (`article_id`) USING BTREE,
  KEY `FKF7A9BD696F3C6204` (`auditer_id`) USING BTREE,
  CONSTRAINT `cms_comment_ibfk_1` FOREIGN KEY (`auditer_id`) REFERENCES `sys_user` (`id`),
  CONSTRAINT `cms_comment_ibfk_2` FOREIGN KEY (`article_id`) REFERENCES `cms_article` (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=20 DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of cms_comment
-- ----------------------------

-- ----------------------------
-- Table structure for cms_link
-- ----------------------------
DROP TABLE IF EXISTS `cms_link`;
CREATE TABLE `cms_link` (
  `id` bigint(20) NOT NULL AUTO_INCREMENT,
  `color` varchar(255) DEFAULT NULL,
  `href` varchar(255) DEFAULT NULL,
  `image` varchar(255) DEFAULT NULL,
  `title` varchar(255) DEFAULT NULL,
  `weight` int(11) DEFAULT NULL,
  `weightDate` date DEFAULT NULL,
  `CATEGORY_ID` bigint(20) DEFAULT NULL,
  PRIMARY KEY (`id`),
  KEY `FK7BC64D30CA4E9944` (`CATEGORY_ID`) USING BTREE,
  CONSTRAINT `cms_link_ibfk_1` FOREIGN KEY (`CATEGORY_ID`) REFERENCES `cms_category` (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=14 DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of cms_link
-- ----------------------------
INSERT INTO `cms_link` VALUES ('3', 'black', 'http://www.aipp.me/', 'http://www.aipp.me/favicon.ico', 'b0y\'s blog', '1', null, '35');
INSERT INTO `cms_link` VALUES ('5', 'black', 'http://www.super-man.cc/', 'http://www.super-man.cc/content/templates/loper/images/favicon.ico', '陌小染\'s blog', '1', null, '35');
INSERT INTO `cms_link` VALUES ('6', 'black', 'http://www.scyy520.cc/', 'http://www.scyy520.cc/favicon.ico', '苏晨‘s Blog', '1', null, '35');
INSERT INTO `cms_link` VALUES ('7', 'black', 'http://114.215.121.37:8080/meileche/', 'http://114.215.121.37:8080/meileche/image/meileche.jpg', '美乐车', '1', null, '35');
INSERT INTO `cms_link` VALUES ('8', 'black', 'http://www.tiejiang.org/', 'http://www.google.com/s2/favicons?domain=www.tiejiang.org', '铁匠运维网', '1', null, '35');
INSERT INTO `cms_link` VALUES ('9', 'black', 'http://www.duoluosb.com/', 'http://www.duoluosb.com/Favicon.ico', '堕络\'s Blog', '1', null, '35');
INSERT INTO `cms_link` VALUES ('10', 'black', 'http://0ol.org/', 'http://www.google.com/s2/favicons?domain=0ol.org', '星少‘S Blog', '1', null, '35');
INSERT INTO `cms_link` VALUES ('11', 'black', 'http://www.bccsafe.com/', 'http://www.bccsafe.com/wp-content/themes/20130801171447/images/favicon.ico', 'BccSafe\'s Blog', '1', null, '35');
INSERT INTO `cms_link` VALUES ('12', 'black', 'http://www.hkzn.cn/', 'http://www.hkzn.cn/wp-content/themes/fengying/images/favicon.ico', '指南针Sec', '1', null, '35');
INSERT INTO `cms_link` VALUES ('13', 'black', 'http://prsec.ml/', 'http://www.google.com/s2/favicons?domain=www.prsec.ml', 'Passer\'s Blog', '1', null, '35');

-- ----------------------------
-- Table structure for cms_site
-- ----------------------------
DROP TABLE IF EXISTS `cms_site`;
CREATE TABLE `cms_site` (
  `id` bigint(20) NOT NULL AUTO_INCREMENT,
  `copyright` varchar(255) DEFAULT NULL,
  `description` varchar(255) DEFAULT NULL,
  `keywords` varchar(255) DEFAULT NULL,
  `logo` varchar(255) DEFAULT NULL,
  `name` varchar(255) DEFAULT NULL,
  `theme` varchar(255) DEFAULT NULL,
  `title` varchar(255) DEFAULT NULL,
  PRIMARY KEY (`id`),
  UNIQUE KEY `name_UNIQUE` (`name`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=3 DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of cms_site
-- ----------------------------
INSERT INTO `cms_site` VALUES ('1', '@copy2014', '西都汇', 'blog', 'blog', 'xdh', 'xdh', '西都汇');

-- ----------------------------
-- Table structure for sys_icon
-- ----------------------------
DROP TABLE IF EXISTS `sys_icon`;
CREATE TABLE `sys_icon` (
  `id` bigint(20) NOT NULL AUTO_INCREMENT,
  `description` varchar(255) DEFAULT NULL,
  `mark` varchar(255) DEFAULT NULL,
  `type` varchar(255) DEFAULT NULL,
  PRIMARY KEY (`id`),
  UNIQUE KEY `mark_UNIQUE` (`mark`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=364 DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of sys_icon
-- ----------------------------
INSERT INTO `sys_icon` VALUES ('1', null, 'icon-adjust', 'css');
INSERT INTO `sys_icon` VALUES ('2', null, 'icon-exclamation-sign', 'css');
INSERT INTO `sys_icon` VALUES ('3', null, 'icon-money', 'css');
INSERT INTO `sys_icon` VALUES ('4', null, 'icon-signal', 'css');
INSERT INTO `sys_icon` VALUES ('5', null, 'icon-asterisk', 'css');
INSERT INTO `sys_icon` VALUES ('6', null, 'icon-external-link', 'css');
INSERT INTO `sys_icon` VALUES ('7', null, 'icon-move', 'css');
INSERT INTO `sys_icon` VALUES ('8', null, 'icon-signin', 'css');
INSERT INTO `sys_icon` VALUES ('9', null, 'icon-ban-circle', 'css');
INSERT INTO `sys_icon` VALUES ('10', null, 'icon-eye-close', 'css');
INSERT INTO `sys_icon` VALUES ('11', null, 'icon-music', 'css');
INSERT INTO `sys_icon` VALUES ('12', null, 'icon-signout', 'css');
INSERT INTO `sys_icon` VALUES ('13', null, 'icon-bar-chart', 'css');
INSERT INTO `sys_icon` VALUES ('14', null, 'icon-eye-open', 'css');
INSERT INTO `sys_icon` VALUES ('15', null, 'icon-off', 'css');
INSERT INTO `sys_icon` VALUES ('16', null, 'icon-sitemap', 'css');
INSERT INTO `sys_icon` VALUES ('20', null, 'icon-barcode', 'css');
INSERT INTO `sys_icon` VALUES ('21', null, 'icon-facetime-video', 'css');
INSERT INTO `sys_icon` VALUES ('22', null, 'icon-ok', 'css');
INSERT INTO `sys_icon` VALUES ('23', null, 'icon-sort', 'css');
INSERT INTO `sys_icon` VALUES ('24', null, 'icon-beaker', 'css');
INSERT INTO `sys_icon` VALUES ('25', null, 'icon-film', 'css');
INSERT INTO `sys_icon` VALUES ('26', null, 'icon-ok-circle', 'css');
INSERT INTO `sys_icon` VALUES ('27', null, 'icon-sort-down', 'css');
INSERT INTO `sys_icon` VALUES ('28', null, 'icon-bell', 'css');
INSERT INTO `sys_icon` VALUES ('29', null, 'icon-filter', 'css');
INSERT INTO `sys_icon` VALUES ('30', null, 'icon-ok-sign', 'css');
INSERT INTO `sys_icon` VALUES ('31', null, 'icon-sort-up', 'css');
INSERT INTO `sys_icon` VALUES ('32', null, ' icon-bolt', 'css');
INSERT INTO `sys_icon` VALUES ('33', null, 'icon-fire', 'css');
INSERT INTO `sys_icon` VALUES ('34', null, 'icon-pencil', 'css');
INSERT INTO `sys_icon` VALUES ('35', null, 'icon-star', 'css');
INSERT INTO `sys_icon` VALUES ('36', null, 'icon-book', 'css');
INSERT INTO `sys_icon` VALUES ('37', null, 'icon-flag', 'css');
INSERT INTO `sys_icon` VALUES ('38', null, 'icon-picture', 'css');
INSERT INTO `sys_icon` VALUES ('39', null, 'icon-star-empty', 'css');
INSERT INTO `sys_icon` VALUES ('40', null, 'icon-bookmark', 'css');
INSERT INTO `sys_icon` VALUES ('41', null, 'icon-folder-close', 'css');
INSERT INTO `sys_icon` VALUES ('42', null, 'icon-plane', 'css');
INSERT INTO `sys_icon` VALUES ('43', null, 'icon-star-half', 'css');
INSERT INTO `sys_icon` VALUES ('44', null, 'icon-bookmark-empty', 'css');
INSERT INTO `sys_icon` VALUES ('45', null, 'icon-folder-open', 'css');
INSERT INTO `sys_icon` VALUES ('46', null, 'icon-plus', 'css');
INSERT INTO `sys_icon` VALUES ('47', null, 'icon-tag', 'css');
INSERT INTO `sys_icon` VALUES ('48', null, 'icon-briefcase', 'css');
INSERT INTO `sys_icon` VALUES ('49', null, 'icon-gift', 'css');
INSERT INTO `sys_icon` VALUES ('50', null, 'icon-plus-sign', 'css');
INSERT INTO `sys_icon` VALUES ('51', null, 'icon-tags', 'css');
INSERT INTO `sys_icon` VALUES ('52', null, 'icon-bullhorn', 'css');
INSERT INTO `sys_icon` VALUES ('53', null, 'icon-glass', 'css');
INSERT INTO `sys_icon` VALUES ('54', null, 'icon-print', 'css');
INSERT INTO `sys_icon` VALUES ('55', null, 'icon-tasks', 'css');
INSERT INTO `sys_icon` VALUES ('56', null, 'icon-calendar', 'css');
INSERT INTO `sys_icon` VALUES ('57', null, 'icon-globe', 'css');
INSERT INTO `sys_icon` VALUES ('58', null, 'icon-pushpin', 'css');
INSERT INTO `sys_icon` VALUES ('59', null, 'icon-thumbs-down', 'css');
INSERT INTO `sys_icon` VALUES ('60', null, 'icon-camera', 'css');
INSERT INTO `sys_icon` VALUES ('61', null, 'icon-group', 'css');
INSERT INTO `sys_icon` VALUES ('62', null, 'icon-qrcode', 'css');
INSERT INTO `sys_icon` VALUES ('63', null, 'icon-thumbs-up', 'css');
INSERT INTO `sys_icon` VALUES ('64', null, 'icon-camera-retro', 'css');
INSERT INTO `sys_icon` VALUES ('65', null, 'icon-certificate', 'css');
INSERT INTO `sys_icon` VALUES ('66', null, 'icon-check', 'css');
INSERT INTO `sys_icon` VALUES ('67', null, 'icon-check-empty', 'css');
INSERT INTO `sys_icon` VALUES ('68', null, 'icon-cloud', 'css');
INSERT INTO `sys_icon` VALUES ('69', null, 'icon-cog', 'css');
INSERT INTO `sys_icon` VALUES ('70', null, 'icon-cogs', 'css');
INSERT INTO `sys_icon` VALUES ('71', null, 'icon-comment', 'css');
INSERT INTO `sys_icon` VALUES ('72', null, 'icon-comment-alt', 'css');
INSERT INTO `sys_icon` VALUES ('73', null, 'icon-comments', 'css');
INSERT INTO `sys_icon` VALUES ('74', null, 'icon-comments-alt', 'css');
INSERT INTO `sys_icon` VALUES ('75', null, 'icon-credit-card', 'css');
INSERT INTO `sys_icon` VALUES ('76', null, 'icon-dashboard', 'css');
INSERT INTO `sys_icon` VALUES ('77', null, 'icon-download', 'css');
INSERT INTO `sys_icon` VALUES ('78', null, 'icon-download-alt', 'css');
INSERT INTO `sys_icon` VALUES ('79', null, 'icon-edit', 'css');
INSERT INTO `sys_icon` VALUES ('80', null, 'icon-envelope', 'css');
INSERT INTO `sys_icon` VALUES ('81', null, 'icon-envelope-alt', 'css');
INSERT INTO `sys_icon` VALUES ('82', null, 'icon-hdd', 'css');
INSERT INTO `sys_icon` VALUES ('83', null, 'icon-headphones', 'css');
INSERT INTO `sys_icon` VALUES ('84', null, 'icon-heart', 'css');
INSERT INTO `sys_icon` VALUES ('85', null, 'icon-heart-empty', 'css');
INSERT INTO `sys_icon` VALUES ('86', null, 'icon-home', 'css');
INSERT INTO `sys_icon` VALUES ('87', null, 'icon-inbox', 'css');
INSERT INTO `sys_icon` VALUES ('88', null, 'icon-info-sign', 'css');
INSERT INTO `sys_icon` VALUES ('89', null, 'icon-key', 'css');
INSERT INTO `sys_icon` VALUES ('90', null, 'icon-leaf', 'css');
INSERT INTO `sys_icon` VALUES ('91', null, 'icon-legal', 'css');
INSERT INTO `sys_icon` VALUES ('92', null, 'icon-lemon', 'css');
INSERT INTO `sys_icon` VALUES ('93', null, 'icon-lock', 'css');
INSERT INTO `sys_icon` VALUES ('94', null, 'icon-unlock', 'css');
INSERT INTO `sys_icon` VALUES ('95', null, 'icon-magic', 'css');
INSERT INTO `sys_icon` VALUES ('96', null, 'icon-magnet', 'css');
INSERT INTO `sys_icon` VALUES ('97', null, 'icon-map-marker', 'css');
INSERT INTO `sys_icon` VALUES ('98', null, 'icon-minus', 'css');
INSERT INTO `sys_icon` VALUES ('99', null, 'icon-minus-sign', 'css');
INSERT INTO `sys_icon` VALUES ('100', null, 'icon-question-sign', 'css');
INSERT INTO `sys_icon` VALUES ('101', null, 'icon-random', 'css');
INSERT INTO `sys_icon` VALUES ('102', null, 'icon-refresh', 'css');
INSERT INTO `sys_icon` VALUES ('103', null, 'icon-remove', 'css');
INSERT INTO `sys_icon` VALUES ('104', null, 'icon-remove-circle', 'css');
INSERT INTO `sys_icon` VALUES ('105', null, 'icon-remove-sign', 'css');
INSERT INTO `sys_icon` VALUES ('106', null, 'icon-reorder', 'css');
INSERT INTO `sys_icon` VALUES ('107', null, 'icon-resize-horizontal', 'css');
INSERT INTO `sys_icon` VALUES ('108', null, 'icon-resize-vertical', 'css');
INSERT INTO `sys_icon` VALUES ('109', null, 'icon-retweet', 'css');
INSERT INTO `sys_icon` VALUES ('110', null, 'icon-road', 'css');
INSERT INTO `sys_icon` VALUES ('111', null, 'icon-rss', 'css');
INSERT INTO `sys_icon` VALUES ('112', null, 'icon-screenshot', 'css');
INSERT INTO `sys_icon` VALUES ('113', null, 'icon-search', 'css');
INSERT INTO `sys_icon` VALUES ('114', null, 'icon-share', 'css');
INSERT INTO `sys_icon` VALUES ('115', null, 'icon-share-alt', 'css');
INSERT INTO `sys_icon` VALUES ('116', null, 'icon-shopping-cart', 'css');
INSERT INTO `sys_icon` VALUES ('117', null, 'icon-time', 'css');
INSERT INTO `sys_icon` VALUES ('118', null, 'icon-tint', 'css');
INSERT INTO `sys_icon` VALUES ('119', null, 'icon-trash', 'css');
INSERT INTO `sys_icon` VALUES ('120', null, 'icon-trophy', 'css');
INSERT INTO `sys_icon` VALUES ('121', null, 'icon-truck', 'css');
INSERT INTO `sys_icon` VALUES ('122', null, 'icon-umbrella', 'css');
INSERT INTO `sys_icon` VALUES ('123', null, 'icon-upload', 'css');
INSERT INTO `sys_icon` VALUES ('124', null, 'icon-upload-alt', 'css');
INSERT INTO `sys_icon` VALUES ('125', null, 'icon-user', 'css');
INSERT INTO `sys_icon` VALUES ('126', null, 'icon-user-md', 'css');
INSERT INTO `sys_icon` VALUES ('127', null, 'icon-volume-off', 'css');
INSERT INTO `sys_icon` VALUES ('128', null, 'icon-volume-down', 'css');
INSERT INTO `sys_icon` VALUES ('129', null, 'icon-volume-up', 'css');
INSERT INTO `sys_icon` VALUES ('130', null, 'icon-warning-sign', 'css');
INSERT INTO `sys_icon` VALUES ('131', null, 'icon-wrench', 'css');
INSERT INTO `sys_icon` VALUES ('132', null, 'icon-zoom-in', 'css');
INSERT INTO `sys_icon` VALUES ('133', null, 'icon-zoom-out', 'css');
INSERT INTO `sys_icon` VALUES ('134', null, 'ztree_edit', 'png');
INSERT INTO `sys_icon` VALUES ('135', null, 'ztree_root_close', 'png');
INSERT INTO `sys_icon` VALUES ('136', null, 'ztree_root_open', 'png');
INSERT INTO `sys_icon` VALUES ('137', null, 'ztree_star', 'png');
INSERT INTO `sys_icon` VALUES ('138', null, 'ztree_calendar', 'png');
INSERT INTO `sys_icon` VALUES ('139', null, 'ztree_heart', 'png');
INSERT INTO `sys_icon` VALUES ('140', null, 'ztree_save', 'png');
INSERT INTO `sys_icon` VALUES ('141', null, 'ztree_msg', 'png');
INSERT INTO `sys_icon` VALUES ('142', null, 'ztree_report', 'png');
INSERT INTO `sys_icon` VALUES ('143', null, 'ztree_setting', 'png');
INSERT INTO `sys_icon` VALUES ('148', null, 'ztree_folder_open', 'png');
INSERT INTO `sys_icon` VALUES ('149', null, 'ztree_folder_close', 'png');
INSERT INTO `sys_icon` VALUES ('150', null, 'ztree_file2', 'png');
INSERT INTO `sys_icon` VALUES ('151', null, 'ztree_edit2', 'png');
INSERT INTO `sys_icon` VALUES ('152', null, 'ztree_delete', 'png');
INSERT INTO `sys_icon` VALUES ('153', null, 'ztree_arrow', 'png');
INSERT INTO `sys_icon` VALUES ('154', null, 'ztree_plus', 'png');
INSERT INTO `sys_icon` VALUES ('155', null, 'ztree_minus', 'png');
INSERT INTO `sys_icon` VALUES ('156', null, 'ztree_add', 'png');
INSERT INTO `sys_icon` VALUES ('157', null, 'ztree_cicle_arrow_left1', 'png');
INSERT INTO `sys_icon` VALUES ('158', null, 'ztree_cicle_arrow_right1', 'png');
INSERT INTO `sys_icon` VALUES ('159', null, 'ztree_cicle_arrow_left2', 'png');
INSERT INTO `sys_icon` VALUES ('160', null, 'ztree_cicle_arrow_right2', 'png');
INSERT INTO `sys_icon` VALUES ('161', null, 'ztree_cicle_arrow', 'png');
INSERT INTO `sys_icon` VALUES ('162', null, 'ztree_star_light', 'png');
INSERT INTO `sys_icon` VALUES ('163', null, 'ztree_star_dark', 'png');
INSERT INTO `sys_icon` VALUES ('164', null, 'diy_icon_01_01', 'png');
INSERT INTO `sys_icon` VALUES ('165', null, 'diy_icon_01_02', 'png');
INSERT INTO `sys_icon` VALUES ('166', null, 'diy_icon_01_03', 'png');
INSERT INTO `sys_icon` VALUES ('167', null, 'diy_icon_01_04', 'png');
INSERT INTO `sys_icon` VALUES ('168', null, 'diy_icon_01_05', 'png');
INSERT INTO `sys_icon` VALUES ('169', null, 'diy_icon_01_06', 'png');
INSERT INTO `sys_icon` VALUES ('170', null, 'diy_icon_01_07', 'png');
INSERT INTO `sys_icon` VALUES ('171', null, 'diy_icon_01_08', 'png');
INSERT INTO `sys_icon` VALUES ('172', null, 'diy_icon_01_09', 'png');
INSERT INTO `sys_icon` VALUES ('173', null, 'diy_icon_01_10', 'png');
INSERT INTO `sys_icon` VALUES ('174', null, 'diy_icon_01_11', 'png');
INSERT INTO `sys_icon` VALUES ('175', null, 'diy_icon_01_12', 'png');
INSERT INTO `sys_icon` VALUES ('176', null, 'diy_icon_01_13', 'png');
INSERT INTO `sys_icon` VALUES ('177', null, 'diy_icon_01_14', 'png');
INSERT INTO `sys_icon` VALUES ('178', null, 'diy_icon_01_15', 'png');
INSERT INTO `sys_icon` VALUES ('179', null, 'diy_icon_01_16', 'png');
INSERT INTO `sys_icon` VALUES ('180', null, 'diy_icon_01_17', 'png');
INSERT INTO `sys_icon` VALUES ('181', null, 'diy_icon_01_18', 'png');
INSERT INTO `sys_icon` VALUES ('182', null, 'diy_icon_01_19', 'png');
INSERT INTO `sys_icon` VALUES ('183', null, 'diy_icon_01_20', 'png');
INSERT INTO `sys_icon` VALUES ('184', null, 'diy_icon_01_21', 'png');
INSERT INTO `sys_icon` VALUES ('185', null, 'diy_icon_01_22', 'png');
INSERT INTO `sys_icon` VALUES ('186', null, 'diy_icon_01_23', 'png');
INSERT INTO `sys_icon` VALUES ('187', null, 'diy_icon_01_24', 'png');
INSERT INTO `sys_icon` VALUES ('188', null, 'diy_icon_01_25', 'png');
INSERT INTO `sys_icon` VALUES ('189', null, 'diy_icon_01_26', 'png');
INSERT INTO `sys_icon` VALUES ('190', null, 'diy_icon_01_27', 'png');
INSERT INTO `sys_icon` VALUES ('191', null, 'diy_icon_01_28', 'png');
INSERT INTO `sys_icon` VALUES ('192', null, 'diy_icon_01_29', 'png');
INSERT INTO `sys_icon` VALUES ('193', null, 'diy_icon_01_30', 'png');
INSERT INTO `sys_icon` VALUES ('194', null, 'diy_icon_01_31', 'png');
INSERT INTO `sys_icon` VALUES ('195', null, 'diy_icon_01_32', 'png');
INSERT INTO `sys_icon` VALUES ('196', null, 'diy_icon_01_33', 'png');
INSERT INTO `sys_icon` VALUES ('197', null, 'diy_icon_01_34', 'png');
INSERT INTO `sys_icon` VALUES ('198', null, 'diy_icon_01_35', 'png');
INSERT INTO `sys_icon` VALUES ('199', null, 'diy_icon_01_36', 'png');
INSERT INTO `sys_icon` VALUES ('200', null, 'diy_icon_01_37', 'png');
INSERT INTO `sys_icon` VALUES ('201', null, 'diy_icon_01_38', 'png');
INSERT INTO `sys_icon` VALUES ('202', null, 'diy_icon_01_39', 'png');
INSERT INTO `sys_icon` VALUES ('203', null, 'diy_icon_01_40', 'png');
INSERT INTO `sys_icon` VALUES ('204', null, 'diy_icon_01_41', 'png');
INSERT INTO `sys_icon` VALUES ('205', null, 'diy_icon_01_42', 'png');
INSERT INTO `sys_icon` VALUES ('206', null, 'diy_icon_01_43', 'png');
INSERT INTO `sys_icon` VALUES ('207', null, 'diy_icon_01_44', 'png');
INSERT INTO `sys_icon` VALUES ('208', null, 'diy_icon_01_45', 'png');
INSERT INTO `sys_icon` VALUES ('209', null, 'diy_icon_01_46', 'png');
INSERT INTO `sys_icon` VALUES ('210', null, 'diy_icon_01_47', 'png');
INSERT INTO `sys_icon` VALUES ('211', null, 'diy_icon_01_48', 'png');
INSERT INTO `sys_icon` VALUES ('212', null, 'diy_icon_01_49', 'png');
INSERT INTO `sys_icon` VALUES ('213', null, 'diy_icon_01_50', 'png');
INSERT INTO `sys_icon` VALUES ('214', null, 'diy_icon_02_01', 'png');
INSERT INTO `sys_icon` VALUES ('215', null, 'diy_icon_02_02', 'png');
INSERT INTO `sys_icon` VALUES ('216', null, 'diy_icon_02_03', 'png');
INSERT INTO `sys_icon` VALUES ('217', null, 'diy_icon_02_04', 'png');
INSERT INTO `sys_icon` VALUES ('218', null, 'diy_icon_02_05', 'png');
INSERT INTO `sys_icon` VALUES ('219', null, 'diy_icon_02_06', 'png');
INSERT INTO `sys_icon` VALUES ('220', null, 'diy_icon_02_07', 'png');
INSERT INTO `sys_icon` VALUES ('221', null, 'diy_icon_02_08', 'png');
INSERT INTO `sys_icon` VALUES ('222', null, 'diy_icon_02_09', 'png');
INSERT INTO `sys_icon` VALUES ('223', null, 'diy_icon_02_10', 'png');
INSERT INTO `sys_icon` VALUES ('224', null, 'diy_icon_02_11', 'png');
INSERT INTO `sys_icon` VALUES ('225', null, 'diy_icon_02_12', 'png');
INSERT INTO `sys_icon` VALUES ('226', null, 'diy_icon_02_13', 'png');
INSERT INTO `sys_icon` VALUES ('227', null, 'diy_icon_02_14', 'png');
INSERT INTO `sys_icon` VALUES ('228', null, 'diy_icon_02_15', 'png');
INSERT INTO `sys_icon` VALUES ('229', null, 'diy_icon_02_16', 'png');
INSERT INTO `sys_icon` VALUES ('230', null, 'diy_icon_02_17', 'png');
INSERT INTO `sys_icon` VALUES ('231', null, 'diy_icon_02_18', 'png');
INSERT INTO `sys_icon` VALUES ('232', null, 'diy_icon_02_19', 'png');
INSERT INTO `sys_icon` VALUES ('233', null, 'diy_icon_02_20', 'png');
INSERT INTO `sys_icon` VALUES ('234', null, 'diy_icon_02_21', 'png');
INSERT INTO `sys_icon` VALUES ('235', null, 'diy_icon_02_22', 'png');
INSERT INTO `sys_icon` VALUES ('236', null, 'diy_icon_02_23', 'png');
INSERT INTO `sys_icon` VALUES ('237', null, 'diy_icon_02_24', 'png');
INSERT INTO `sys_icon` VALUES ('238', null, 'diy_icon_02_25', 'png');
INSERT INTO `sys_icon` VALUES ('239', null, 'diy_icon_02_26', 'png');
INSERT INTO `sys_icon` VALUES ('240', null, 'diy_icon_02_27', 'png');
INSERT INTO `sys_icon` VALUES ('241', null, 'diy_icon_02_28', 'png');
INSERT INTO `sys_icon` VALUES ('242', null, 'diy_icon_02_29', 'png');
INSERT INTO `sys_icon` VALUES ('243', null, 'diy_icon_02_30', 'png');
INSERT INTO `sys_icon` VALUES ('244', null, 'diy_icon_02_31', 'png');
INSERT INTO `sys_icon` VALUES ('245', null, 'diy_icon_02_32', 'png');
INSERT INTO `sys_icon` VALUES ('246', null, 'diy_icon_02_33', 'png');
INSERT INTO `sys_icon` VALUES ('247', null, 'diy_icon_02_34', 'png');
INSERT INTO `sys_icon` VALUES ('248', null, 'diy_icon_02_35', 'png');
INSERT INTO `sys_icon` VALUES ('249', null, 'diy_icon_02_36', 'png');
INSERT INTO `sys_icon` VALUES ('250', null, 'diy_icon_02_37', 'png');
INSERT INTO `sys_icon` VALUES ('251', null, 'diy_icon_02_38', 'png');
INSERT INTO `sys_icon` VALUES ('252', null, 'diy_icon_02_39', 'png');
INSERT INTO `sys_icon` VALUES ('253', null, 'diy_icon_02_40', 'png');
INSERT INTO `sys_icon` VALUES ('254', null, 'diy_icon_02_41', 'png');
INSERT INTO `sys_icon` VALUES ('255', null, 'diy_icon_02_42', 'png');
INSERT INTO `sys_icon` VALUES ('256', null, 'diy_icon_02_43', 'png');
INSERT INTO `sys_icon` VALUES ('257', null, 'diy_icon_02_44', 'png');
INSERT INTO `sys_icon` VALUES ('258', null, 'diy_icon_02_45', 'png');
INSERT INTO `sys_icon` VALUES ('259', null, 'diy_icon_02_46', 'png');
INSERT INTO `sys_icon` VALUES ('260', null, 'diy_icon_02_47', 'png');
INSERT INTO `sys_icon` VALUES ('261', null, 'diy_icon_02_48', 'png');
INSERT INTO `sys_icon` VALUES ('262', null, 'diy_icon_02_49', 'png');
INSERT INTO `sys_icon` VALUES ('263', null, 'diy_icon_02_50', 'png');
INSERT INTO `sys_icon` VALUES ('264', null, 'diy_icon_03_01', 'png');
INSERT INTO `sys_icon` VALUES ('265', null, 'diy_icon_03_02', 'png');
INSERT INTO `sys_icon` VALUES ('266', null, 'diy_icon_03_03', 'png');
INSERT INTO `sys_icon` VALUES ('267', null, 'diy_icon_03_04', 'png');
INSERT INTO `sys_icon` VALUES ('268', null, 'diy_icon_03_05', 'png');
INSERT INTO `sys_icon` VALUES ('269', null, 'diy_icon_03_06', 'png');
INSERT INTO `sys_icon` VALUES ('270', null, 'diy_icon_03_07', 'png');
INSERT INTO `sys_icon` VALUES ('271', null, 'diy_icon_03_08', 'png');
INSERT INTO `sys_icon` VALUES ('272', null, 'diy_icon_03_09', 'png');
INSERT INTO `sys_icon` VALUES ('273', null, 'diy_icon_03_10', 'png');
INSERT INTO `sys_icon` VALUES ('274', null, 'diy_icon_03_11', 'png');
INSERT INTO `sys_icon` VALUES ('275', null, 'diy_icon_03_12', 'png');
INSERT INTO `sys_icon` VALUES ('276', null, 'diy_icon_03_13', 'png');
INSERT INTO `sys_icon` VALUES ('277', null, 'diy_icon_03_14', 'png');
INSERT INTO `sys_icon` VALUES ('278', null, 'diy_icon_03_15', 'png');
INSERT INTO `sys_icon` VALUES ('279', null, 'diy_icon_03_16', 'png');
INSERT INTO `sys_icon` VALUES ('280', null, 'diy_icon_03_17', 'png');
INSERT INTO `sys_icon` VALUES ('281', null, 'diy_icon_03_18', 'png');
INSERT INTO `sys_icon` VALUES ('282', null, 'diy_icon_03_19', 'png');
INSERT INTO `sys_icon` VALUES ('283', null, 'diy_icon_03_20', 'png');
INSERT INTO `sys_icon` VALUES ('284', null, 'diy_icon_03_21', 'png');
INSERT INTO `sys_icon` VALUES ('285', null, 'diy_icon_03_22', 'png');
INSERT INTO `sys_icon` VALUES ('286', null, 'diy_icon_03_23', 'png');
INSERT INTO `sys_icon` VALUES ('287', null, 'diy_icon_03_24', 'png');
INSERT INTO `sys_icon` VALUES ('288', null, 'diy_icon_03_25', 'png');
INSERT INTO `sys_icon` VALUES ('289', null, 'diy_icon_03_26', 'png');
INSERT INTO `sys_icon` VALUES ('290', null, 'diy_icon_03_27', 'png');
INSERT INTO `sys_icon` VALUES ('291', null, 'diy_icon_03_28', 'png');
INSERT INTO `sys_icon` VALUES ('292', null, 'diy_icon_03_29', 'png');
INSERT INTO `sys_icon` VALUES ('293', null, 'diy_icon_03_30', 'png');
INSERT INTO `sys_icon` VALUES ('294', null, 'diy_icon_03_31', 'png');
INSERT INTO `sys_icon` VALUES ('295', null, 'diy_icon_03_32', 'png');
INSERT INTO `sys_icon` VALUES ('296', null, 'diy_icon_03_33', 'png');
INSERT INTO `sys_icon` VALUES ('297', null, 'diy_icon_03_34', 'png');
INSERT INTO `sys_icon` VALUES ('298', null, 'diy_icon_03_35', 'png');
INSERT INTO `sys_icon` VALUES ('299', null, 'diy_icon_03_36', 'png');
INSERT INTO `sys_icon` VALUES ('300', null, 'diy_icon_03_37', 'png');
INSERT INTO `sys_icon` VALUES ('301', null, 'diy_icon_03_38', 'png');
INSERT INTO `sys_icon` VALUES ('302', null, 'diy_icon_03_39', 'png');
INSERT INTO `sys_icon` VALUES ('303', null, 'diy_icon_03_40', 'png');
INSERT INTO `sys_icon` VALUES ('304', null, 'diy_icon_03_41', 'png');
INSERT INTO `sys_icon` VALUES ('305', null, 'diy_icon_03_42', 'png');
INSERT INTO `sys_icon` VALUES ('306', null, 'diy_icon_03_43', 'png');
INSERT INTO `sys_icon` VALUES ('307', null, 'diy_icon_03_44', 'png');
INSERT INTO `sys_icon` VALUES ('308', null, 'diy_icon_03_45', 'png');
INSERT INTO `sys_icon` VALUES ('309', null, 'diy_icon_03_46', 'png');
INSERT INTO `sys_icon` VALUES ('310', null, 'diy_icon_03_47', 'png');
INSERT INTO `sys_icon` VALUES ('311', null, 'diy_icon_03_48', 'png');
INSERT INTO `sys_icon` VALUES ('312', null, 'diy_icon_03_49', 'png');
INSERT INTO `sys_icon` VALUES ('313', null, 'diy_icon_03_50', 'png');
INSERT INTO `sys_icon` VALUES ('314', null, 'diy_icon_04_01', 'png');
INSERT INTO `sys_icon` VALUES ('315', null, 'diy_icon_04_02', 'png');
INSERT INTO `sys_icon` VALUES ('316', null, 'diy_icon_04_03', 'png');
INSERT INTO `sys_icon` VALUES ('317', null, 'diy_icon_04_04', 'png');
INSERT INTO `sys_icon` VALUES ('318', null, 'diy_icon_04_05', 'png');
INSERT INTO `sys_icon` VALUES ('319', null, 'diy_icon_04_06', 'png');
INSERT INTO `sys_icon` VALUES ('320', null, 'diy_icon_04_07', 'png');
INSERT INTO `sys_icon` VALUES ('321', null, 'diy_icon_04_08', 'png');
INSERT INTO `sys_icon` VALUES ('322', null, 'diy_icon_04_09', 'png');
INSERT INTO `sys_icon` VALUES ('323', null, 'diy_icon_04_10', 'png');
INSERT INTO `sys_icon` VALUES ('324', null, 'diy_icon_04_11', 'png');
INSERT INTO `sys_icon` VALUES ('325', null, 'diy_icon_04_12', 'png');
INSERT INTO `sys_icon` VALUES ('326', null, 'diy_icon_04_13', 'png');
INSERT INTO `sys_icon` VALUES ('327', null, 'diy_icon_04_14', 'png');
INSERT INTO `sys_icon` VALUES ('328', null, 'diy_icon_04_15', 'png');
INSERT INTO `sys_icon` VALUES ('329', null, 'diy_icon_04_16', 'png');
INSERT INTO `sys_icon` VALUES ('330', null, 'diy_icon_04_17', 'png');
INSERT INTO `sys_icon` VALUES ('331', null, 'diy_icon_04_18', 'png');
INSERT INTO `sys_icon` VALUES ('332', null, 'diy_icon_04_19', 'png');
INSERT INTO `sys_icon` VALUES ('333', null, 'diy_icon_04_20', 'png');
INSERT INTO `sys_icon` VALUES ('334', null, 'diy_icon_04_21', 'png');
INSERT INTO `sys_icon` VALUES ('335', null, 'diy_icon_04_22', 'png');
INSERT INTO `sys_icon` VALUES ('336', null, 'diy_icon_04_23', 'png');
INSERT INTO `sys_icon` VALUES ('337', null, 'diy_icon_04_24', 'png');
INSERT INTO `sys_icon` VALUES ('338', null, 'diy_icon_04_25', 'png');
INSERT INTO `sys_icon` VALUES ('339', null, 'diy_icon_04_26', 'png');
INSERT INTO `sys_icon` VALUES ('340', null, 'diy_icon_04_27', 'png');
INSERT INTO `sys_icon` VALUES ('341', null, 'diy_icon_04_28', 'png');
INSERT INTO `sys_icon` VALUES ('342', null, 'diy_icon_04_29', 'png');
INSERT INTO `sys_icon` VALUES ('343', null, 'diy_icon_04_30', 'png');
INSERT INTO `sys_icon` VALUES ('344', null, 'diy_icon_04_31', 'png');
INSERT INTO `sys_icon` VALUES ('345', null, 'diy_icon_04_32', 'png');
INSERT INTO `sys_icon` VALUES ('346', null, 'diy_icon_04_33', 'png');
INSERT INTO `sys_icon` VALUES ('347', null, 'diy_icon_04_34', 'png');
INSERT INTO `sys_icon` VALUES ('348', null, 'diy_icon_04_35', 'png');
INSERT INTO `sys_icon` VALUES ('349', null, 'diy_icon_04_36', 'png');
INSERT INTO `sys_icon` VALUES ('350', null, 'diy_icon_04_37', 'png');
INSERT INTO `sys_icon` VALUES ('351', null, 'diy_icon_04_38', 'png');
INSERT INTO `sys_icon` VALUES ('352', null, 'diy_icon_04_39', 'png');
INSERT INTO `sys_icon` VALUES ('353', null, 'diy_icon_04_40', 'png');
INSERT INTO `sys_icon` VALUES ('354', null, 'diy_icon_04_41', 'png');
INSERT INTO `sys_icon` VALUES ('355', null, 'diy_icon_04_42', 'png');
INSERT INTO `sys_icon` VALUES ('356', null, 'diy_icon_04_43', 'png');
INSERT INTO `sys_icon` VALUES ('357', null, 'diy_icon_04_44', 'png');
INSERT INTO `sys_icon` VALUES ('358', null, 'diy_icon_04_45', 'png');
INSERT INTO `sys_icon` VALUES ('359', null, 'diy_icon_04_46', 'png');
INSERT INTO `sys_icon` VALUES ('360', null, 'diy_icon_04_47', 'png');
INSERT INTO `sys_icon` VALUES ('361', null, 'diy_icon_04_48', 'png');
INSERT INTO `sys_icon` VALUES ('362', null, 'diy_icon_04_49', 'png');
INSERT INTO `sys_icon` VALUES ('363', null, 'diy_icon_04_50', 'png');

-- ----------------------------
-- Table structure for sys_log
-- ----------------------------
DROP TABLE IF EXISTS `sys_log`;
CREATE TABLE `sys_log` (
  `id` bigint(20) NOT NULL AUTO_INCREMENT,
  `content` varchar(255) DEFAULT NULL,
  `operName` varchar(255) DEFAULT NULL,
  `operTime` datetime DEFAULT NULL,
  `result` int(11) NOT NULL,
  `userId` bigint(20) DEFAULT NULL,
  `ip` varchar(255) DEFAULT NULL,
  PRIMARY KEY (`id`),
  KEY `FKC3427A92D8327538` (`userId`) USING BTREE,
  CONSTRAINT `sys_log_ibfk_1` FOREIGN KEY (`userId`) REFERENCES `sys_user` (`id`) ON DELETE CASCADE
) ENGINE=InnoDB AUTO_INCREMENT=323 DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of sys_log
-- ----------------------------
INSERT INTO `sys_log` VALUES ('321', '退出系统', '系统登出', '2014-06-18 15:24:35', '1', '5', '0:0:0:0:0:0:0:1');
INSERT INTO `sys_log` VALUES ('322', '登录系统', '系统登录', '2014-06-18 15:26:34', '1', '5', '0:0:0:0:0:0:0:1');

-- ----------------------------
-- Table structure for sys_res
-- ----------------------------
DROP TABLE IF EXISTS `sys_res`;
CREATE TABLE `sys_res` (
  `id` bigint(20) NOT NULL AUTO_INCREMENT,
  `authorize` varchar(255) DEFAULT NULL,
  `grade` int(11) NOT NULL,
  `icon` varchar(255) DEFAULT NULL,
  `name` varchar(255) DEFAULT NULL,
  `orderNo` int(11) NOT NULL,
  `permsString` varchar(255) DEFAULT NULL,
  `remark` varchar(255) DEFAULT NULL,
  `resString` varchar(255) DEFAULT NULL,
  `PARENT_ID` bigint(20) DEFAULT NULL,
  PRIMARY KEY (`id`),
  KEY `FKC3428FEED6C7D0A5` (`PARENT_ID`) USING BTREE,
  CONSTRAINT `sys_res_ibfk_1` FOREIGN KEY (`PARENT_ID`) REFERENCES `sys_res` (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=52 DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of sys_res
-- ----------------------------
INSERT INTO `sys_res` VALUES ('1', null, '1', 'ztree_root_close', '系统管理', '1', 'sys', '系统管理', '/sys', '5');
INSERT INTO `sys_res` VALUES ('2', null, '2', 'diy_icon_01_05', '用户管理', '1', 'sys:user', '用户管理', '/sys/user/list', '1');
INSERT INTO `sys_res` VALUES ('3', null, '2', 'diy_icon_01_10', '角色管理', '2', 'sys:role', '角色管理', '/sys/role/list', '1');
INSERT INTO `sys_res` VALUES ('4', null, '2', 'ztree_report', '资源菜单', '3', 'sys:resource', '资源管理', '/sys/resource/list', '1');
INSERT INTO `sys_res` VALUES ('5', null, '0', '', 'system', '1', 'system', '最高的节点只能有一个', '/system', null);
INSERT INTO `sys_res` VALUES ('7', null, '3', 'icon-tasks', '用户列表', '1', 'sys:user:list', '用户列表', '/sys/user/list', '2');
INSERT INTO `sys_res` VALUES ('8', null, '3', 'icon-plus', '添加用户', '2', 'sys:user:add', '添加用户', '/sys/user/add', '2');
INSERT INTO `sys_res` VALUES ('9', null, '3', 'icon-minus', '删除用户', '3', 'sys:user:delete', '', '/sys/user/delete', '2');
INSERT INTO `sys_res` VALUES ('10', null, '3', 'icon-pencil', '修改用户', '4', 'sys:user:update', '', '/sys/user/update', '2');
INSERT INTO `sys_res` VALUES ('11', null, '3', 'icon-tasks', '角色列表', '1', 'sys:role:list', '', '/sys/role/list', '3');
INSERT INTO `sys_res` VALUES ('12', null, '3', 'icon-plus', '添加角色', '2', 'sys:role:add', '', '/sys/role/add', '3');
INSERT INTO `sys_res` VALUES ('13', null, '3', 'icon-minus', '删除角色', '3', 'sys:role:delete', '', '/sys/role/delete', '3');
INSERT INTO `sys_res` VALUES ('14', null, '3', 'icon-pencil', '修改角色', '4', 'sys:role:update', '', '/sys/role/update', '3');
INSERT INTO `sys_res` VALUES ('15', null, '3', 'icon-tasks', '资源列表', '1', 'sys:resource:list', '', '/sys/resource/list', '4');
INSERT INTO `sys_res` VALUES ('16', null, '3', 'icon-plus', '添加资源', '2', 'sys:resource:add', '', '/sys/resource/add', '4');
INSERT INTO `sys_res` VALUES ('17', null, '3', 'icon-minus', '删除资源', '3', 'sys:resource:delete', '', '/sys/resource/delete', '4');
INSERT INTO `sys_res` VALUES ('18', null, '3', 'icon-pencil', '修改资源', '4', 'sys:resource:update', '', '/sys/resource/update', '4');
INSERT INTO `sys_res` VALUES ('19', null, '2', 'diy_icon_01_02', '图标管理', '4', 'sys:user:list', '', '/sys/icon/list', '1');
INSERT INTO `sys_res` VALUES ('20', null, '3', 'icon-tasks', '图标列表', '1', 'sys:icon:list', '', '/sys/icon/list', '19');
INSERT INTO `sys_res` VALUES ('21', null, '3', 'icon-plus', '添加图标', '2', 'sys:icon:add', '', '/sys/icon/add', '19');
INSERT INTO `sys_res` VALUES ('22', null, '3', 'icon-minus', '删除图标', '3', 'sys:icon:delete', '', '/sys/icon/delete', '19');
INSERT INTO `sys_res` VALUES ('23', null, '3', 'icon-pencil', '修改图标', '4', 'sys:icon:update', '', '/sys/icon/update', '19');
INSERT INTO `sys_res` VALUES ('24', null, '3', 'ztree_file2', '详细信息', '5', 'sys:user:show', '', '/sys/user/show', '2');
INSERT INTO `sys_res` VALUES ('25', null, '3', 'ztree_file2', '详细信息', '5', 'sys:role:show', '', '/sys/role/show', '3');
INSERT INTO `sys_res` VALUES ('31', null, '3', 'icon-key', '更改用户状态', '6', 'sys:user:changeUserStatus', '', '/sys/user/changeUserStatus', '2');
INSERT INTO `sys_res` VALUES ('36', null, '2', 'diy_icon_04_19', '系统日志', '5', 'sys:log:list', '', '/sys/log/list', '1');
INSERT INTO `sys_res` VALUES ('37', null, '3', 'icon-tasks', '日志列表', '1', 'sys:log:list', '', '/sys/log/list', '36');
INSERT INTO `sys_res` VALUES ('40', null, '3', 'icon-cog', '删除日志', '2', 'sys:log:delete', '', '/sys/log/delete', '36');
INSERT INTO `sys_res` VALUES ('46', null, '1', 'diy_icon_01_46', '内容管理', '3', 'cms', '', '/cms', '5');
INSERT INTO `sys_res` VALUES ('47', null, '2', 'diy_icon_01_23', '内容发布', '1', 'cms', '', '/cms/', '46');
INSERT INTO `sys_res` VALUES ('49', null, '2', 'diy_icon_04_37', '栏目管理', '2', 'cms:category:list', '', '/cms/category/list', '46');
INSERT INTO `sys_res` VALUES ('50', null, '2', 'diy_icon_02_44', '站点管理', '1', 'cms:site:list', '', '/cms/site/list', '46');
INSERT INTO `sys_res` VALUES ('51', null, '2', 'diy_icon_01_28', '评论管理', '4', 'cms:comment', '', '/cms/comment/list', '46');

-- ----------------------------
-- Table structure for sys_role
-- ----------------------------
DROP TABLE IF EXISTS `sys_role`;
CREATE TABLE `sys_role` (
  `id` bigint(20) NOT NULL AUTO_INCREMENT,
  `authorize` varchar(255) DEFAULT NULL,
  `name` varchar(255) DEFAULT NULL,
  `realName` varchar(255) DEFAULT NULL,
  `remark` varchar(255) DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=10 DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of sys_role
-- ----------------------------
INSERT INTO `sys_role` VALUES ('1', null, 'superAdmin', '超级管理员', '拥有所有权限');
INSERT INTO `sys_role` VALUES ('6', null, 'deptLeader', '部门经理', '111');
INSERT INTO `sys_role` VALUES ('7', null, 'hr', '人力经理', '');
INSERT INTO `sys_role` VALUES ('8', null, 'bloger', '博客玩家', '');
INSERT INTO `sys_role` VALUES ('9', null, 'showcasers', '演示分配角色', '');

-- ----------------------------
-- Table structure for sys_role_res
-- ----------------------------
DROP TABLE IF EXISTS `sys_role_res`;
CREATE TABLE `sys_role_res` (
  `ROLE_ID` bigint(20) NOT NULL,
  `RES_ID` bigint(20) NOT NULL,
  PRIMARY KEY (`ROLE_ID`,`RES_ID`),
  KEY `FK9A255A8923AE94EF` (`RES_ID`) USING BTREE,
  KEY `FK9A255A895C176D41` (`ROLE_ID`) USING BTREE,
  CONSTRAINT `sys_role_res_ibfk_1` FOREIGN KEY (`RES_ID`) REFERENCES `sys_res` (`id`) ON DELETE CASCADE,
  CONSTRAINT `sys_role_res_ibfk_2` FOREIGN KEY (`ROLE_ID`) REFERENCES `sys_role` (`id`) ON DELETE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of sys_role_res
-- ----------------------------
INSERT INTO `sys_role_res` VALUES ('1', '1');
INSERT INTO `sys_role_res` VALUES ('9', '1');
INSERT INTO `sys_role_res` VALUES ('1', '2');
INSERT INTO `sys_role_res` VALUES ('9', '2');
INSERT INTO `sys_role_res` VALUES ('1', '3');
INSERT INTO `sys_role_res` VALUES ('9', '3');
INSERT INTO `sys_role_res` VALUES ('1', '4');
INSERT INTO `sys_role_res` VALUES ('9', '4');
INSERT INTO `sys_role_res` VALUES ('1', '5');
INSERT INTO `sys_role_res` VALUES ('6', '5');
INSERT INTO `sys_role_res` VALUES ('7', '5');
INSERT INTO `sys_role_res` VALUES ('8', '5');
INSERT INTO `sys_role_res` VALUES ('9', '5');
INSERT INTO `sys_role_res` VALUES ('1', '7');
INSERT INTO `sys_role_res` VALUES ('9', '7');
INSERT INTO `sys_role_res` VALUES ('1', '8');
INSERT INTO `sys_role_res` VALUES ('9', '8');
INSERT INTO `sys_role_res` VALUES ('1', '9');
INSERT INTO `sys_role_res` VALUES ('1', '10');
INSERT INTO `sys_role_res` VALUES ('1', '11');
INSERT INTO `sys_role_res` VALUES ('9', '11');
INSERT INTO `sys_role_res` VALUES ('1', '12');
INSERT INTO `sys_role_res` VALUES ('1', '13');
INSERT INTO `sys_role_res` VALUES ('1', '14');
INSERT INTO `sys_role_res` VALUES ('1', '15');
INSERT INTO `sys_role_res` VALUES ('9', '15');
INSERT INTO `sys_role_res` VALUES ('1', '16');
INSERT INTO `sys_role_res` VALUES ('1', '17');
INSERT INTO `sys_role_res` VALUES ('1', '18');
INSERT INTO `sys_role_res` VALUES ('1', '19');
INSERT INTO `sys_role_res` VALUES ('9', '19');
INSERT INTO `sys_role_res` VALUES ('1', '20');
INSERT INTO `sys_role_res` VALUES ('9', '20');
INSERT INTO `sys_role_res` VALUES ('1', '21');
INSERT INTO `sys_role_res` VALUES ('1', '22');
INSERT INTO `sys_role_res` VALUES ('1', '23');
INSERT INTO `sys_role_res` VALUES ('1', '24');
INSERT INTO `sys_role_res` VALUES ('9', '24');
INSERT INTO `sys_role_res` VALUES ('1', '25');
INSERT INTO `sys_role_res` VALUES ('9', '25');
INSERT INTO `sys_role_res` VALUES ('1', '31');
INSERT INTO `sys_role_res` VALUES ('1', '36');
INSERT INTO `sys_role_res` VALUES ('9', '36');
INSERT INTO `sys_role_res` VALUES ('1', '37');
INSERT INTO `sys_role_res` VALUES ('9', '37');
INSERT INTO `sys_role_res` VALUES ('1', '40');
INSERT INTO `sys_role_res` VALUES ('1', '46');
INSERT INTO `sys_role_res` VALUES ('8', '46');
INSERT INTO `sys_role_res` VALUES ('9', '46');
INSERT INTO `sys_role_res` VALUES ('1', '47');
INSERT INTO `sys_role_res` VALUES ('8', '47');
INSERT INTO `sys_role_res` VALUES ('9', '47');
INSERT INTO `sys_role_res` VALUES ('1', '49');
INSERT INTO `sys_role_res` VALUES ('9', '49');
INSERT INTO `sys_role_res` VALUES ('1', '50');
INSERT INTO `sys_role_res` VALUES ('9', '50');
INSERT INTO `sys_role_res` VALUES ('1', '51');

-- ----------------------------
-- Table structure for sys_test
-- ----------------------------
DROP TABLE IF EXISTS `sys_test`;
CREATE TABLE `sys_test` (
  `id` bigint(20) NOT NULL AUTO_INCREMENT,
  `aaa` varchar(255) DEFAULT NULL,
  `bbb` varchar(255) DEFAULT NULL,
  `ccc` varchar(255) DEFAULT NULL,
  `ddd` varchar(255) DEFAULT NULL,
  `eee` varchar(255) DEFAULT NULL,
  `eight` varchar(255) DEFAULT NULL,
  `fff` varchar(255) DEFAULT NULL,
  `five` varchar(255) DEFAULT NULL,
  `four` varchar(255) DEFAULT NULL,
  `ggg` varchar(255) DEFAULT NULL,
  `hhh` varchar(255) DEFAULT NULL,
  `iii` varchar(255) DEFAULT NULL,
  `jjj` varchar(255) DEFAULT NULL,
  `kkk` varchar(255) DEFAULT NULL,
  `lll` varchar(255) DEFAULT NULL,
  `nine` varchar(255) DEFAULT NULL,
  `one` varchar(255) DEFAULT NULL,
  `seven` varchar(255) DEFAULT NULL,
  `six` varchar(255) DEFAULT NULL,
  `ten` varchar(255) DEFAULT NULL,
  `three` varchar(255) DEFAULT NULL,
  `tow` varchar(255) DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=4 DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of sys_test
-- ----------------------------
INSERT INTO `sys_test` VALUES ('3', 'ss', 'dd', 'ss', 'aa', 'dd', 'dd', 'aa', 'dd', 'dd', 'aa', 'dd', 'aa', 'dd', 'ssd', 'ss', 'aa', 'sss', 'dd', 'aa', 'dd', 'aa', 'aa');

-- ----------------------------
-- Table structure for sys_user
-- ----------------------------
DROP TABLE IF EXISTS `sys_user`;
CREATE TABLE `sys_user` (
  `id` bigint(20) NOT NULL AUTO_INCREMENT,
  `address` varchar(255) DEFAULT NULL,
  `createDate` datetime NOT NULL,
  `email` varchar(255) DEFAULT NULL,
  `loginId` varchar(255) NOT NULL,
  `mobilePhone` varchar(255) DEFAULT NULL,
  `name` varchar(255) DEFAULT NULL,
  `passwd` varchar(255) DEFAULT NULL,
  `remark` varchar(255) DEFAULT NULL,
  `status` varchar(255) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE KEY `loginId` (`loginId`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=10 DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of sys_user
-- ----------------------------
INSERT INTO `sys_user` VALUES ('4', '成都', '2013-03-07 00:00:00', 'sa@ww.cc', 'user2', '15222233426', '人力经理', '8d2209bf7ec9ac2eec597eb378a7cbf5', '', '1');
INSERT INTO `sys_user` VALUES ('5', '成都', '2014-03-14 00:00:00', '502876941@qq.com', 'admin', '15108276486', '超级管理员', 'bd2e01edc57144999856d77571151dda', '帅气的开发者', '1');
INSERT INTO `sys_user` VALUES ('7', '成都', '2014-03-23 00:00:00', 'sa22@ww.cc', 'depman', '15369654627', '部门经理', '1fa11d49afc1479d1392df32c9cd7dd4', '你好', '1');
INSERT INTO `sys_user` VALUES ('8', '成都', '2014-05-24 00:00:00', 'sss@ss.cc', 'shenyc', '15236568954', '申鱼川', 'b3a92e2ce005f4cb00ceed9baa0d212c', '合作伙伴', '1');
INSERT INTO `sys_user` VALUES ('9', '成都', '2014-05-27 00:00:00', 'sss@ss.cc', 'showcase', '15236568954', '演示', '6747c1c2e26c5d41711d0cf0a284702b', '供演示使用', '1');

-- ----------------------------
-- Table structure for sys_user_role
-- ----------------------------
DROP TABLE IF EXISTS `sys_user_role`;
CREATE TABLE `sys_user_role` (
  `USER_ID` bigint(20) NOT NULL,
  `ROLE_ID` bigint(20) NOT NULL,
  PRIMARY KEY (`USER_ID`,`ROLE_ID`),
  KEY `FKAABB7D585C176D41` (`ROLE_ID`) USING BTREE,
  KEY `FKAABB7D581423121` (`USER_ID`) USING BTREE,
  CONSTRAINT `sys_user_role_ibfk_1` FOREIGN KEY (`USER_ID`) REFERENCES `sys_user` (`id`) ON DELETE CASCADE,
  CONSTRAINT `sys_user_role_ibfk_2` FOREIGN KEY (`ROLE_ID`) REFERENCES `sys_role` (`id`) ON DELETE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of sys_user_role
-- ----------------------------
INSERT INTO `sys_user_role` VALUES ('5', '1');
INSERT INTO `sys_user_role` VALUES ('7', '6');
INSERT INTO `sys_user_role` VALUES ('4', '7');
INSERT INTO `sys_user_role` VALUES ('8', '8');
INSERT INTO `sys_user_role` VALUES ('9', '9');
